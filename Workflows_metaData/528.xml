<?xml version="1.0" encoding="UTF-8"?><workflow uri="http://www.myexperiment.org/workflow.xml?id=528" resource="http://www.myexperiment.org/workflows/528" id="528" version="1">  <id>528</id>  <title>REST access of xml.nig.ac.jp (WABI)</title>  <description>&lt;p&gt;This workflow has a beanshell script for composing the &lt;a href="http://xml.nig.ac.jp/tutorial/rest/index.html"&gt;REST URL&lt;/a&gt; for the &lt;a href="http://xml.nig.ac.jp/index.html#services"&gt;services at xml.nig.ac.jp&lt;/a&gt;&amp;nbsp;   (WABI) This URL is passed to the local worker &lt;i&gt;Get_web_page_from_URL&lt;/i&gt; that fetches the requested data.&lt;/p&gt;&#13;&lt;p&gt;&lt;b&gt;Note: This is a proof of concept of accessing REST services through Taverna. All of WABI's services can more easily be browsed and used in Taverna by adding their WSDL, for instance &lt;/b&gt;&lt;i&gt;&lt;b&gt;http://xml.nig.ac.jp/wsdl/GetEntry.wsdl&lt;/b&gt;&lt;/i&gt;&lt;/p&gt;&#13;&lt;p&gt;The example invokes the &lt;i&gt;getDDBJEntry(accession)&lt;/i&gt; method of the &lt;a href="http://xml.nig.ac.jp/wabi/Method?serviceName=GetEntry&amp;amp;mode=methodList&amp;amp;lang=en"&gt;&lt;i&gt;getEntry&lt;/i&gt;&lt;/a&gt; service at WABI.&lt;/p&gt;&#13;&lt;p&gt;The workflow can be modified to invoke any other service from &lt;a href="http://xml.nig.ac.jp/index.html#services"&gt;xml.nig.ac.jp/index.html#services&lt;/a&gt; by modifying the &lt;i&gt;service&lt;/i&gt; and &lt;i&gt;method&lt;/i&gt; parameters to the beanshell script &lt;i&gt;compose_URL&lt;/i&gt;.&lt;/p&gt;&#13;&lt;p&gt;Any other input parameters to &lt;i&gt;compose_URL&lt;/i&gt; are added to the URL as well, so if instead you want to invoke the method &lt;i&gt;analyzeParamAsync(query, param)&lt;/i&gt; from the &lt;a href="http://xml.nig.ac.jp/wabi/Method?serviceName=ClustalW&amp;amp;mode=methodList&amp;amp;lang=en"&gt;ClustalW&lt;/a&gt; service, first modify the &lt;i&gt;service&lt;/i&gt; and &lt;i&gt;method&lt;/i&gt; default parameters to &lt;i&gt;ClustalW&lt;/i&gt; and &lt;i&gt;analyzeParamAsync&lt;/i&gt;, and then edit the beanshell script's input ports:&lt;/p&gt;&#13;&lt;p&gt;Remove the &lt;i&gt;accession&lt;/i&gt; port from &lt;i&gt;compose_URL&lt;/i&gt;, then add two new input ports called &lt;i&gt;query&lt;/i&gt; and &lt;i&gt;param&lt;/i&gt;. &lt;i&gt;(You don't need to modify the actual beanshell script as it picks up any declared input parameters.)&lt;/i&gt;&lt;/p&gt;&#13;&lt;p&gt;This pattern could probably be used for many REST services that work like xml.nig.ac.jp - but the disadvantage is that one has to manually read the &lt;a href="http://xml.nig.ac.jp/tutorial/rest/index.html"&gt;documentations&lt;/a&gt; to figure out what the parameters are to be.&lt;/p&gt;</description>  <type resource="http://www.myexperiment.org/content_types/1" uri="http://www.myexperiment.org/type.xml?id=1" id="1">Taverna 1</type>  <uploader resource="http://www.myexperiment.org/users/5" uri="http://www.myexperiment.org/user.xml?id=5" id="5">Stian Soiland-Reyes</uploader>  <created-at>2008-10-14 16:17:58 UTC</created-at>  <preview>http://www.myexperiment.org/workflows/528/versions/1/previews/full</preview>  <svg>http://www.myexperiment.org/workflows/528/versions/1/previews/svg</svg>  <license-type resource="http://www.myexperiment.org/licenses/3" uri="http://www.myexperiment.org/license.xml?id=3" id="3">by</license-type>  <content-uri>https://myexperiment.org/workflows/528/download/REST_access_of_xml.nig.ac.jp__WABI_-v.xml</content-uri>  <content-type>application/vnd.taverna.scufl+xml</content-type>  <tags>    <tag uri="http://www.myexperiment.org/tag.xml?id=956" resource="http://www.myexperiment.org/tags/956" id="956">rest</tag>    <tag uri="http://www.myexperiment.org/tag.xml?id=957" resource="http://www.myexperiment.org/tags/957" id="957">wabi</tag>    <tag uri="http://www.myexperiment.org/tag.xml?id=958" resource="http://www.myexperiment.org/tags/958" id="958">http</tag>    <tag uri="http://www.myexperiment.org/tag.xml?id=109" resource="http://www.myexperiment.org/tags/109" id="109">ddbj</tag>  </tags></workflow>