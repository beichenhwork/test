<?xml version="1.0" encoding="UTF-8"?><workflow uri="http://www.myexperiment.org/workflow.xml?id=4587" resource="http://www.myexperiment.org/workflows/4587" id="4587" version="1">  <id>4587</id>  <title>Store Receipts to structured information</title>  <description>&lt;p&gt;As the title suggests, this process is a tool to transform receipts into a table sheet. The process is made for receipts that are already scanned and processed with an OCR Tool.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Input&lt;/strong&gt;: txt. Files&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;: table with the following columns: Date, price, category, receipt index, buyer, product description&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Roughly speaking this process is divided in the following steps:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1.&amp;nbsp;&amp;nbsp; &amp;nbsp;.txt2exset:&lt;/strong&gt; In this sub process a receipt.txt file is segmented. Every line represents one example. So, the example set has as many&amp;nbsp;&amp;nbsp; examples as there are lines in the original file. For every example (i.e. line) 2 regex extract the price: &amp;ldquo;(-?([0-9]+([\,\.][0-9]{2})))&amp;rdquo; and&amp;nbsp;&amp;nbsp; &amp;ldquo;(((-?([0-9]|[0-9]{2}|[0-9]{3})([\,\.\&amp;#39;\;\s][0-9]{2}))(\s[ab]|[ab]|[12]|\s[12])))&amp;rdquo;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2.&amp;nbsp;&amp;nbsp; &amp;nbsp;Categorization:&lt;/strong&gt; Each product should be categorized. To keep it simple I choose to build a dictionary of rules that stem products to a&amp;nbsp;&amp;nbsp; category. Type: categoryX:.*product.keywordX.*&amp;nbsp; . To do this, the process has to transform the values from the data set to documents, loop these&amp;nbsp;&amp;nbsp; documents and put it back into a data set.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3.&amp;nbsp;&amp;nbsp; &amp;nbsp;Manual corrections: &lt;/strong&gt;Of course this procedure does not create a usable table. Manual corrections are necessary. That&amp;rsquo;s why the process&amp;nbsp;&amp;nbsp; stores the example set several times in a sheet for manual correction. This means that the process has three break points. First (&amp;ldquo;Art und&amp;nbsp;&amp;nbsp; Preis&amp;rdquo;) to correct the extracted prices and categories if necessary; second (&amp;ldquo;datum und gesch&amp;auml;ft&amp;rdquo;) to correct the extracted date and the&amp;nbsp;&amp;nbsp; extracted store. This was a bit tricky because you have to pay attention to the continuity of the data set during the manual editing.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;4.&amp;nbsp;&amp;nbsp; &amp;nbsp;Output:&lt;/strong&gt; Because of OCR errors there are still many wrong characters in the extracted prices. You can correct these errors an format it in&amp;nbsp;&amp;nbsp; the table sheet with a formula like this: &amp;ldquo;=GL&amp;Auml;TTEN(WECHSELN(WECHSELN(WECHSELN(WECHSELN(WECHSELN(W2;&amp;quot;b&amp;quot;;&amp;quot;&amp;quot;);&amp;quot;a&amp;quot;;&amp;quot;&amp;quot;);&amp;quot;;&amp;quot;;&amp;quot;,&amp;quot;);&amp;quot;.&amp;quot;;&amp;quot;,&amp;quot;);&amp;quot;&amp;#39;&amp;quot;;&amp;quot;,&amp;quot;))&amp;rdquo;&amp;nbsp;&amp;nbsp; and &amp;ldquo;=WERT(S&amp;Auml;UBERN(X2))&amp;rdquo; . At the end you may cross check the result with a pivot table.&lt;/p&gt;</description>  <type resource="http://www.myexperiment.org/content_types/62" uri="http://www.myexperiment.org/type.xml?id=62" id="62">RapidMiner</type>  <uploader resource="http://www.myexperiment.org/users/62004" uri="http://www.myexperiment.org/user.xml?id=62004" id="62004">Jml</uploader>  <created-at>2015-02-08 17:04:26 UTC</created-at>  <preview>http://www.myexperiment.org/workflows/4587/versions/1/previews/full</preview>  <svg>http://www.myexperiment.org/workflows/4587/versions/1/previews/svg</svg>  <license-type resource="http://www.myexperiment.org/licenses/1" uri="http://www.myexperiment.org/license.xml?id=1" id="1">by-nd</license-type>  <content-uri>https://myexperiment.org/workflows/4587/download/Store_Receipts_to_structured_information-v.txt</content-uri>  <content-type>application/vnd.rapidminer.rmp+zip</content-type>  <tags/></workflow>