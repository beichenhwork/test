<?xml version="1.0" encoding="UTF-8"?><workflow uri="http://www.myexperiment.org/workflow.xml?id=3573" resource="http://www.myexperiment.org/workflows/3573" id="3573" version="1">  <id>3573</id>  <title>Chemical structure extractor - img2structure</title>  <description>&lt;p&gt;Extracts images of chemical structures from PDFs and converts them to usable structure data using the OSRA binaries.&lt;/p&gt;&lt;p&gt;An in-progress (incomplete) workflow.&lt;/p&gt;&lt;p&gt;This workflow makes use of the External Tool node to access the OSRA structure recognition binaries.&lt;/p&gt;&lt;p&gt;So you must have a functioning installation of OSRA and it&amp;#39;s dependencies. This may require advanced compiler knowledge on your platform, and may not be a trivial task.&lt;/p&gt;&lt;p&gt;OSRA 1.4 is free for both the source &amp;amp; binary distribution. OSRA 2.0 source is free, but the binaries require a small fee.&lt;/p&gt;&lt;p&gt;Requirements:&lt;br /&gt;KNIME 2.7.4&lt;br /&gt;Community Nodes - RDKit (to view structures) See http://tech.knime.org/community&lt;br /&gt;OSRA 1.4 http://osra.sourceforge.net/&lt;br /&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Start by creating a working directory where you can put the test PDF and some other files.&lt;/p&gt;&lt;p&gt;Then try this from the command line:&lt;/p&gt;&lt;p&gt;$cd workingdir&lt;br /&gt;$osra -w KNIME.smi -r 150 -o KNIME -f can test.pdf&lt;/p&gt;&lt;p&gt;So that&amp;#39;s write the output as smiles one structure per line (-w KNIME.smi), set the resolution of intermediate images to 150 dpi (-r 150), keep those intermediate images so we can check for problems and name them all KNIMEnnn.png (-o KNIME), generate canonical smiles (-f can), and use as the input the file test.pdf. Start your testing with a single page pdf of good quality (not a scan of an old photocopy!).&lt;/p&gt;&lt;p&gt;If you get any errors about missing preferences files, you can add them to the command line with the -l and -a switches, but it is easier to just copy or link them to the workingdir. Copy spelling.txt and superatom.txt from /opt/local/osra/1.4.0, and edit as needed. The first helps osra correct things like it reading &amp;quot;Pl&amp;quot; when it&amp;#39;s obviously meant to be &amp;quot;Ph&amp;quot;. The second file tells osra &amp;quot;Ph&amp;quot; means &amp;quot;c1ccccc1&amp;quot;.&lt;/p&gt;&lt;p&gt;If all that works, onwards to the workflow.&lt;/p&gt;&lt;p&gt;The external tool node writes the incoming table to a file. This file is supposed to be used as input for the actual tool, but is not in a useful format for osra. So the workflow creates a dummy table instead, and writes a blank file to the workingdir.&lt;/p&gt;&lt;p&gt;The actual osra command line switches are passed-in via flow variables from the other branch of the workflow. The workflow expects all of your PDF files to be in the same directory as the intermediate files and output files.&lt;/p&gt;&lt;p&gt;This version of the workflow will only process the first PDF found.&lt;/p&gt;&lt;p&gt;Configure the External Tool node next.&lt;br /&gt;1. The &amp;quot;Input Data File path&amp;quot; needs to point to a blank dummy file.&lt;br /&gt;2. Path to Executable needs to be pre-set (default is /usr/local/bin/osra).&lt;br /&gt;3. Execute in Directory should be fed in via the flow variable from the second branch of the workflow. It needs to be a full path, so no paths like ~/osra/test/here.&lt;br /&gt;4. &amp;quot;Output Data file path&amp;quot; needs to match exactly that specified in the &amp;quot;Command Line Arguments&amp;quot; field, or KNIME won&amp;#39;t recover the output. The default is workingdir/KNIME.smi&lt;/p&gt;&lt;p&gt;Once the External Tool node has executed, you can execute the third branch of the workflow. This branch will read in all the intermediate image files generated by osra, and line them up in a table with the interpreted structures so that you can look for errors.&lt;/p&gt;&lt;p&gt;Adjust the two preference files spelling.txt and superatom.txt, and run the workflow again until all the errors are corrected.&lt;/p&gt;&lt;p&gt;To do:&lt;br /&gt;1. Edit-in-place structure correction. In the table view, correct a single structure by clicking on it and correcting the structure without rerunning the workflow.&lt;br /&gt;2. Loop through all the PDFs found in the workingdir, not just the first one.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</description>  <type resource="http://www.myexperiment.org/content_types/76" uri="http://www.myexperiment.org/type.xml?id=76" id="76">KNIME</type>  <uploader resource="http://www.myexperiment.org/users/11956" uri="http://www.myexperiment.org/user.xml?id=11956" id="11956">sauberns</uploader>  <created-at>2013-05-14 04:14:26 UTC</created-at>  <preview>http://www.myexperiment.org/workflows/3573/versions/1/previews/full</preview>  <svg>http://www.myexperiment.org/workflows/3573/versions/1/previews/svg</svg>  <license-type resource="http://www.myexperiment.org/licenses/3" uri="http://www.myexperiment.org/license.xml?id=3" id="3">by</license-type>  <content-uri>https://myexperiment.org/workflows/3573/download/Chemical_structure_extractor_-_img2structure-v.zip</content-uri>  <content-type>application/zip</content-type>  <tags>    <tag uri="http://www.myexperiment.org/tag.xml?id=1064" resource="http://www.myexperiment.org/tags/1064" id="1064">cheminformatics</tag>    <tag uri="http://www.myexperiment.org/tag.xml?id=1195" resource="http://www.myexperiment.org/tags/1195" id="1195">chemoinformatics</tag>    <tag uri="http://www.myexperiment.org/tag.xml?id=2635" resource="http://www.myexperiment.org/tags/2635" id="2635">knime</tag>    <tag uri="http://www.myexperiment.org/tag.xml?id=2636" resource="http://www.myexperiment.org/tags/2636" id="2636">rdkit</tag>    <tag uri="http://www.myexperiment.org/tag.xml?id=3756" resource="http://www.myexperiment.org/tags/3756" id="3756">osra</tag>    <tag uri="http://www.myexperiment.org/tag.xml?id=1946" resource="http://www.myexperiment.org/tags/1946" id="1946">ocr</tag>    <tag uri="http://www.myexperiment.org/tag.xml?id=3757" resource="http://www.myexperiment.org/tags/3757" id="3757">osr</tag>  </tags></workflow>