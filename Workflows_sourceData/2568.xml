<workflow xmlns="http://taverna.sf.net/2008/xml/t2flow" version="1" producedBy="taverna-2.3.0"><dataflow id="87c6c48d-12dd-4b4c-8dbe-813189df723a" role="top"><name>Workflow3</name><inputPorts><port><name>languageForOCR</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>imageURL</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>groundTruthURL</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port></inputPorts><outputPorts><port><name>result</name><annotations /></port></outputPorts><processors><processor><name>ocr</name><inputPorts><port><name>ocrRequest</name><depth>0</depth></port></inputPorts><outputPorts><port><name>ocrResponse</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.wsdl.WSDLActivity</class><inputMap><map from="ocrRequest" to="ocrRequest" /></inputMap><outputMap><map from="ocrResponse" to="ocrResponse" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean xmlns="">  <wsdl>http://fue.onb.ac.at/scape-tesseract301-service/Tesseract301.wsdl</wsdl>  <operation>ocr</operation>  <securityProfile>HTTPBasicAuthNPlainTextPassword</securityProfile></net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="ocrRequest" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>ocrRequest</name><inputPorts><port><name>langmod</name><depth>0</depth></port><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="input" to="input" /><map from="langmod" to="langmod" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>input</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <allowsLiteralValues>false</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>langmod</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <allowsLiteralValues>false</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>output</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/xml'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs>  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="ocrRequest" name="ocrRequest" qname="{http://scape-project.eu/pc/services}ocrRequest"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="anyURI" name="input" qname="{http://scape-project.eu/pc/services}ocrRequestType&amp;gt;input" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="langmod" qname="{http://scape-project.eu/pc/services}ocrRequestType&amp;gt;langmod" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML></net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="langmod" depth="0" /><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>ocrResponse</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>return</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="return" to="return" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>input</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/xml'</element>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>false</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>return</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/xml'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs>  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="ocrResponse" name="ocrResponse" qname="{http://scape-project.eu/pc/services}ocrResponse"&gt;&lt;s:elements&gt;&lt;s:complextype optional="true" unbounded="false" typename="ocrReturnType" name="return" qname="{http://scape-project.eu/pc/services}ocrResponseType&amp;gt;return"&gt;&lt;s:elements&gt;&lt;s:complextype optional="true" unbounded="false" typename="ocrResultType" name="result" qname="{http://scape-project.eu/pc/services}ocrReturnType&amp;gt;result"&gt;&lt;s:elements&gt;&lt;s:basetype optional="true" unbounded="false" typename="anyURI" name="output" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;output" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="boolean" name="success" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;success" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="returncode" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;returncode" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="int" name="time" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;time" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="log" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;log" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="message" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;message" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML></net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>ocrResponse_return</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>result</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="result" to="result" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>input</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/xml'</element>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>false</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>result</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/xml'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs>  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="true" unbounded="false" typename="ocrReturnType" name="return" qname="{http://scape-project.eu/pc/services}ocrResponseType&amp;gt;return"&gt;&lt;s:elements&gt;&lt;s:complextype optional="true" unbounded="false" typename="ocrResultType" name="result" qname="{http://scape-project.eu/pc/services}ocrReturnType&amp;gt;result"&gt;&lt;s:elements&gt;&lt;s:basetype optional="true" unbounded="false" typename="anyURI" name="output" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;output" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="boolean" name="success" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;success" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="returncode" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;returncode" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="int" name="time" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;time" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="log" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;log" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="message" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;message" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML></net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>return_result</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>input</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/xml'</element>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>false</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>output</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>success</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>returncode</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>time</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>log</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>message</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs>  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="true" unbounded="false" typename="ocrResultType" name="result" qname="{http://scape-project.eu/pc/services}ocrReturnType&amp;gt;result"&gt;&lt;s:elements&gt;&lt;s:basetype optional="true" unbounded="false" typename="anyURI" name="output" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;output" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="boolean" name="success" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;success" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="returncode" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;returncode" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="int" name="time" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;time" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="log" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;log" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="message" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;message" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML></net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>ocr_2</name><inputPorts><port><name>ocrRequest</name><depth>0</depth></port></inputPorts><outputPorts><port><name>ocrResponse</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.wsdl.WSDLActivity</class><inputMap><map from="ocrRequest" to="ocrRequest" /></inputMap><outputMap><map from="ocrResponse" to="ocrResponse" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean xmlns="">  <wsdl>http://fue.onb.ac.at/scape-tesseract301-service/Tesseract301.wsdl</wsdl>  <operation>ocr</operation>  <securityProfile>HTTPBasicAuthNPlainTextPassword</securityProfile></net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="ocrRequest" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>ocr_2_ocrRequest</name><inputPorts><port><name>input</name><depth>0</depth></port><port><name>langmod</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="input" to="input" /><map from="langmod" to="langmod" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>input</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <allowsLiteralValues>false</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>langmod</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <allowsLiteralValues>false</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>output</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/xml'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs>  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="ocrRequest" name="ocrRequest" qname="{http://scape-project.eu/pc/services}ocrRequest"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="anyURI" name="input" qname="{http://scape-project.eu/pc/services}ocrRequestType&amp;gt;input" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="langmod" qname="{http://scape-project.eu/pc/services}ocrRequestType&amp;gt;langmod" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML></net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /><port name="langmod" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>ocr_2_ocrResponse</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>return</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="return" to="return" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>input</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/xml'</element>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>false</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>return</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/xml'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs>  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="ocrResponse" name="ocrResponse" qname="{http://scape-project.eu/pc/services}ocrResponse"&gt;&lt;s:elements&gt;&lt;s:complextype optional="true" unbounded="false" typename="ocrReturnType" name="return" qname="{http://scape-project.eu/pc/services}ocrResponseType&amp;gt;return"&gt;&lt;s:elements&gt;&lt;s:complextype optional="true" unbounded="false" typename="ocrResultType" name="result" qname="{http://scape-project.eu/pc/services}ocrReturnType&amp;gt;result"&gt;&lt;s:elements&gt;&lt;s:basetype optional="true" unbounded="false" typename="anyURI" name="output" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;output" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="boolean" name="success" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;success" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="returncode" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;returncode" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="int" name="time" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;time" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="log" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;log" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="message" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;message" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML></net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>ocrResponse_return_2</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>result</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="result" to="result" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>input</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/xml'</element>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>false</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>result</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/xml'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs>  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="true" unbounded="false" typename="ocrReturnType" name="return" qname="{http://scape-project.eu/pc/services}ocrResponseType&amp;gt;return"&gt;&lt;s:elements&gt;&lt;s:complextype optional="true" unbounded="false" typename="ocrResultType" name="result" qname="{http://scape-project.eu/pc/services}ocrReturnType&amp;gt;result"&gt;&lt;s:elements&gt;&lt;s:basetype optional="true" unbounded="false" typename="anyURI" name="output" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;output" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="boolean" name="success" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;success" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="returncode" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;returncode" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="int" name="time" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;time" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="log" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;log" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="message" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;message" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML></net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>2_result</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>input</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/xml'</element>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>false</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>output</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>success</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>returncode</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>time</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>log</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>message</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs>  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="true" unbounded="false" typename="ocrResultType" name="result" qname="{http://scape-project.eu/pc/services}ocrReturnType&amp;gt;result"&gt;&lt;s:elements&gt;&lt;s:basetype optional="true" unbounded="false" typename="anyURI" name="output" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;output" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="boolean" name="success" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;success" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="returncode" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;returncode" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="int" name="time" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;time" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="log" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;log" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="message" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;message" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML></net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>NCSR_Binarisation</name><inputPorts><port><name>inputUrl</name><depth>0</depth></port></inputPorts><outputPorts><port><name>outputUrl</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>dataflow-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.dataflow.DataflowActivity</class><inputMap><map from="inputUrl" to="inputUrl" /></inputMap><outputMap><map from="outputUrl" to="outputUrl" /></outputMap><configBean encoding="dataflow"><dataflow ref="bcece4a3-e6ad-4da2-8a62-0169f0a34e9f" /></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="inputUrl" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Beanshell</name><inputPorts><port><name>groundTruth</name><depth>0</depth></port><port><name>s</name><depth>0</depth></port></inputPorts><outputPorts><port><name>errorRate</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="s" to="s" /><map from="groundTruth" to="groundTruth" /></inputMap><outputMap><map from="errorRate" to="errorRate" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>s</name>      <depth>0</depth>      <mimeTypes>        <string>text/plain</string>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>groundTruth</name>      <depth>0</depth>      <mimeTypes>        <string>text/plain</string>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>errorRate</name>      <depth>0</depth>      <mimeTypes />      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs>  <classLoaderSharing>workflow</classLoaderSharing>  <localDependencies />  <artifactDependencies />  <script>// Levenshtein Word Distance taken from// http://www.javalobby.org/java/forums/t15908.htmlint editDistance;/* * split to token */String[] sToken = s.split(" ");String[] groundToken = groundTruth.split(" ");int n = sToken.length;int m = groundToken.length;if (n == 0) return m;if (m == 0) return n;int[][] d = new int[n + 1][m + 1];for (int i = 0; i &lt;= n; d[i][0] = i++);for (int j = 1; j &lt;= m; d[0][j] = j++);for (int i = 1; i &lt;= n; i++) {    String sc = sToken[i - 1];    for (int j = 1; j &lt;= m; j++) {        int v = d[i - 1][j - 1];        if (!groundToken[j - 1].equals(sc)) {            v++;        }        d[i][j] = Math.min(Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1),                v);    }}editDistance = d[n][m];double errorRate = (double)editDistance / (double)groundToken.length;return errorRate;</script>  <dependencies /></net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="groundTruth" depth="0" /><port name="s" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Read_Text_File</name><inputPorts><port><name>fileurl</name><depth>0</depth></port><port><name>encoding</name><depth>0</depth></port></inputPorts><outputPorts><port><name>filecontents</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>localworker-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.localworker.LocalworkerActivity</class><inputMap><map from="fileurl" to="fileurl" /><map from="encoding" to="encoding" /></inputMap><outputMap><map from="filecontents" to="filecontents" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean xmlns="">  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>fileurl</name>      <depth>0</depth>      <mimeTypes>        <string>'text/plain'</string>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>encoding</name>      <depth>0</depth>      <mimeTypes>        <string>'text/plain'</string>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>filecontents</name>      <depth>0</depth>      <mimeTypes>        <string>'text/plain'</string>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs>  <classLoaderSharing>workflow</classLoaderSharing>  <localDependencies />  <artifactDependencies />  <script>BufferedReader getReader (String fileUrl, String encoding) throws IOException {		InputStreamReader reader;		try {			if (encoding == null) {				reader = new FileReader(fileUrl);			} else {				reader = new InputStreamReader(new FileInputStream(fileUrl),encoding); 			}		}		catch (FileNotFoundException e) {			// try a real URL instead			URL url = new URL(fileUrl);			if (encoding == null) {				reader = new InputStreamReader (url.openStream());			} else {				reader = new InputStreamReader (url.openStream(), encoding);			}		}		return new BufferedReader(reader);	}StringBuffer sb = new StringBuffer(4000);if (encoding == void) {	encoding = null;}BufferedReader in = getReader(fileurl, encoding);String str;String lineEnding = System.getProperty("line.separator");while ((str = in.readLine()) != null) {	sb.append(str);	sb.append(lineEnding);}in.close();filecontents = sb.toString();  </script>  <dependencies />  <localworkerName>net.sourceforge.taverna.scuflworkers.io.TextFileReader</localworkerName></net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="fileurl" depth="0" /><port name="encoding" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>String_constant</name><inputPorts /><outputPorts><port><name>value</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>stringconstant-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.stringconstant.StringConstantActivity</class><inputMap /><outputMap><map from="value" to="value" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean xmlns="">  <value>UTF-8</value></net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy /></iteration></iterationStrategyStack></processor><processor><name>Beanshell_2</name><inputPorts><port><name>groundTruth</name><depth>0</depth></port><port><name>s</name><depth>0</depth></port></inputPorts><outputPorts><port><name>errorRate</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="s" to="s" /><map from="groundTruth" to="groundTruth" /></inputMap><outputMap><map from="errorRate" to="errorRate" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>s</name>      <depth>0</depth>      <mimeTypes>        <string>text/plain</string>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>groundTruth</name>      <depth>0</depth>      <mimeTypes>        <string>text/plain</string>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>errorRate</name>      <depth>0</depth>      <mimeTypes />      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs>  <classLoaderSharing>workflow</classLoaderSharing>  <localDependencies />  <artifactDependencies />  <script>// Levenshtein Word Distance taken from// http://www.javalobby.org/java/forums/t15908.htmlint editDistance;/* * split to token */String[] sToken = s.split(" ");String[] groundToken = groundTruth.split(" ");int n = sToken.length;int m = groundToken.length;if (n == 0) return m;if (m == 0) return n;int[][] d = new int[n + 1][m + 1];for (int i = 0; i &lt;= n; d[i][0] = i++);for (int j = 1; j &lt;= m; d[0][j] = j++);for (int i = 1; i &lt;= n; i++) {    String sc = sToken[i - 1];    for (int j = 1; j &lt;= m; j++) {        int v = d[i - 1][j - 1];        if (!groundToken[j - 1].equals(sc)) {            v++;        }        d[i][j] = Math.min(Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1),                v);    }}editDistance = d[n][m];double errorRate = (double)editDistance / (double)groundToken.length;return errorRate;</script>  <dependencies /></net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="groundTruth" depth="0" /><port name="s" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Read_Text_File_2</name><inputPorts><port><name>fileurl</name><depth>0</depth></port><port><name>encoding</name><depth>0</depth></port></inputPorts><outputPorts><port><name>filecontents</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>localworker-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.localworker.LocalworkerActivity</class><inputMap><map from="fileurl" to="fileurl" /><map from="encoding" to="encoding" /></inputMap><outputMap><map from="filecontents" to="filecontents" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean xmlns="">  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>fileurl</name>      <depth>0</depth>      <mimeTypes>        <string>'text/plain'</string>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>encoding</name>      <depth>0</depth>      <mimeTypes>        <string>'text/plain'</string>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>filecontents</name>      <depth>0</depth>      <mimeTypes>        <string>'text/plain'</string>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs>  <classLoaderSharing>workflow</classLoaderSharing>  <localDependencies />  <artifactDependencies />  <script>BufferedReader getReader (String fileUrl, String encoding) throws IOException {		InputStreamReader reader;		try {			if (encoding == null) {				reader = new FileReader(fileUrl);			} else {				reader = new InputStreamReader(new FileInputStream(fileUrl),encoding); 			}		}		catch (FileNotFoundException e) {			// try a real URL instead			URL url = new URL(fileUrl);			if (encoding == null) {				reader = new InputStreamReader (url.openStream());			} else {				reader = new InputStreamReader (url.openStream(), encoding);			}		}		return new BufferedReader(reader);	}StringBuffer sb = new StringBuffer(4000);if (encoding == void) {	encoding = null;}BufferedReader in = getReader(fileurl, encoding);String str;String lineEnding = System.getProperty("line.separator");while ((str = in.readLine()) != null) {	sb.append(str);	sb.append(lineEnding);}in.close();filecontents = sb.toString();  </script>  <dependencies />  <localworkerName>net.sourceforge.taverna.scuflworkers.io.TextFileReader</localworkerName></net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="fileurl" depth="0" /><port name="encoding" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Read_Text_File_2_2</name><inputPorts><port><name>fileurl</name><depth>0</depth></port><port><name>encoding</name><depth>0</depth></port></inputPorts><outputPorts><port><name>filecontents</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>localworker-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.localworker.LocalworkerActivity</class><inputMap><map from="fileurl" to="fileurl" /><map from="encoding" to="encoding" /></inputMap><outputMap><map from="filecontents" to="filecontents" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean xmlns="">  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>fileurl</name>      <depth>0</depth>      <mimeTypes>        <string>'text/plain'</string>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>encoding</name>      <depth>0</depth>      <mimeTypes>        <string>'text/plain'</string>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>filecontents</name>      <depth>0</depth>      <mimeTypes>        <string>'text/plain'</string>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs>  <classLoaderSharing>workflow</classLoaderSharing>  <localDependencies />  <artifactDependencies />  <script>BufferedReader getReader (String fileUrl, String encoding) throws IOException {		InputStreamReader reader;		try {			if (encoding == null) {				reader = new FileReader(fileUrl);			} else {				reader = new InputStreamReader(new FileInputStream(fileUrl),encoding); 			}		}		catch (FileNotFoundException e) {			// try a real URL instead			URL url = new URL(fileUrl);			if (encoding == null) {				reader = new InputStreamReader (url.openStream());			} else {				reader = new InputStreamReader (url.openStream(), encoding);			}		}		return new BufferedReader(reader);	}StringBuffer sb = new StringBuffer(4000);if (encoding == void) {	encoding = null;}BufferedReader in = getReader(fileurl, encoding);String str;String lineEnding = System.getProperty("line.separator");while ((str = in.readLine()) != null) {	sb.append(str);	sb.append(lineEnding);}in.close();filecontents = sb.toString();  </script>  <dependencies />  <localworkerName>net.sourceforge.taverna.scuflworkers.io.TextFileReader</localworkerName></net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="fileurl" depth="0" /><port name="encoding" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Beanshell_3</name><inputPorts><port><name>BWVersion</name><depth>0</depth></port><port><name>original</name><depth>0</depth></port></inputPorts><outputPorts><port><name>result</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="BWVersion" to="BWVersion" /><map from="original" to="original" /></inputMap><outputMap><map from="result" to="result" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>original</name>      <depth>0</depth>      <mimeTypes>        <string>text/plain</string>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>BWVersion</name>      <depth>0</depth>      <mimeTypes>        <string>text/plain</string>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>result</name>      <depth>0</depth>      <mimeTypes />      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs>  <classLoaderSharing>workflow</classLoaderSharing>  <localDependencies />  <artifactDependencies />  <script>float fOriginal = Float.valueOf(original.trim()).floatValue();float fBWVersion= Float.valueOf(BWVersion.trim()).floatValue();if (fOriginal &lt; fBWVersion) {	 result = "Original version";} else {	result = "B/W version";}</script>  <dependencies /></net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="BWVersion" depth="0" /><port name="original" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>ocr</processor><port>ocrRequest</port></sink><source type="processor"><processor>ocrRequest</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>ocrRequest</processor><port>langmod</port></sink><source type="dataflow"><port>languageForOCR</port></source></datalink><datalink><sink type="processor"><processor>ocrRequest</processor><port>input</port></sink><source type="dataflow"><port>imageURL</port></source></datalink><datalink><sink type="processor"><processor>ocrResponse</processor><port>input</port></sink><source type="processor"><processor>ocr</processor><port>ocrResponse</port></source></datalink><datalink><sink type="processor"><processor>ocrResponse_return</processor><port>input</port></sink><source type="processor"><processor>ocrResponse</processor><port>return</port></source></datalink><datalink><sink type="processor"><processor>return_result</processor><port>input</port></sink><source type="processor"><processor>ocrResponse_return</processor><port>result</port></source></datalink><datalink><sink type="processor"><processor>ocr_2</processor><port>ocrRequest</port></sink><source type="processor"><processor>ocr_2_ocrRequest</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>ocr_2_ocrRequest</processor><port>input</port></sink><source type="processor"><processor>NCSR_Binarisation</processor><port>outputUrl</port></source></datalink><datalink><sink type="processor"><processor>ocr_2_ocrRequest</processor><port>langmod</port></sink><source type="dataflow"><port>languageForOCR</port></source></datalink><datalink><sink type="processor"><processor>ocr_2_ocrResponse</processor><port>input</port></sink><source type="processor"><processor>ocr_2</processor><port>ocrResponse</port></source></datalink><datalink><sink type="processor"><processor>ocrResponse_return_2</processor><port>input</port></sink><source type="processor"><processor>ocr_2_ocrResponse</processor><port>return</port></source></datalink><datalink><sink type="processor"><processor>2_result</processor><port>input</port></sink><source type="processor"><processor>ocrResponse_return_2</processor><port>result</port></source></datalink><datalink><sink type="processor"><processor>NCSR_Binarisation</processor><port>inputUrl</port></sink><source type="dataflow"><port>imageURL</port></source></datalink><datalink><sink type="processor"><processor>Beanshell</processor><port>groundTruth</port></sink><source type="processor"><processor>Read_Text_File</processor><port>filecontents</port></source></datalink><datalink><sink type="processor"><processor>Beanshell</processor><port>s</port></sink><source type="processor"><processor>Read_Text_File_2_2</processor><port>filecontents</port></source></datalink><datalink><sink type="processor"><processor>Read_Text_File</processor><port>fileurl</port></sink><source type="dataflow"><port>groundTruthURL</port></source></datalink><datalink><sink type="processor"><processor>Read_Text_File</processor><port>encoding</port></sink><source type="processor"><processor>String_constant</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>Beanshell_2</processor><port>groundTruth</port></sink><source type="processor"><processor>Read_Text_File</processor><port>filecontents</port></source></datalink><datalink><sink type="processor"><processor>Beanshell_2</processor><port>s</port></sink><source type="processor"><processor>Read_Text_File_2</processor><port>filecontents</port></source></datalink><datalink><sink type="processor"><processor>Read_Text_File_2</processor><port>fileurl</port></sink><source type="processor"><processor>return_result</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>Read_Text_File_2</processor><port>encoding</port></sink><source type="processor"><processor>String_constant</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>Read_Text_File_2_2</processor><port>fileurl</port></sink><source type="processor"><processor>2_result</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>Read_Text_File_2_2</processor><port>encoding</port></sink><source type="processor"><processor>String_constant</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>Beanshell_3</processor><port>BWVersion</port></sink><source type="processor"><processor>Beanshell</processor><port>errorRate</port></source></datalink><datalink><sink type="processor"><processor>Beanshell_3</processor><port>original</port></sink><source type="processor"><processor>Beanshell_2</processor><port>errorRate</port></source></datalink><datalink><sink type="dataflow"><port>result</port></sink><source type="processor"><processor>Beanshell_3</processor><port>result</port></source></datalink></datalinks><annotations><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">        <identification>ef1b292a-c03f-455b-af26-0f0a0bb66d32</identification>      </annotationBean>      <date>2011-11-14 15:05:29.623 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">        <identification>acd92489-40a1-4e65-a2b9-0fe6924de1fb</identification>      </annotationBean>      <date>2011-11-14 15:37:45.429 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">        <identification>7e0e7978-80bc-4a7d-b972-d192d463edb8</identification>      </annotationBean>      <date>2011-11-15 14:19:33.729 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">        <identification>04d0324b-ed9b-43ab-bc3c-28406bb3da46</identification>      </annotationBean>      <date>2011-11-14 15:29:42.307 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">        <identification>d323ad8c-1655-44c9-be28-e16459c4b522</identification>      </annotationBean>      <date>2011-11-15 13:16:04.902 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">        <identification>87c6c48d-12dd-4b4c-8dbe-813189df723a</identification>      </annotationBean>      <date>2011-11-15 14:53:38.158 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">        <identification>49eb3537-f052-4b62-9db6-f7e9e851c70e</identification>      </annotationBean>      <date>2011-11-15 14:37:25.130 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">        <identification>caf60d36-76d6-491f-bbfe-cc3164046058</identification>      </annotationBean>      <date>2011-11-15 14:41:21.637 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">        <identification>bc75b17a-f099-4c20-a278-2c55be4db85a</identification>      </annotationBean>      <date>2011-11-14 16:03:53.391 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">        <identification>4b26e5c5-95bf-4c75-bf58-2e54c3e37bf1</identification>      </annotationBean>      <date>2011-11-14 15:43:43.927 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">        <identification>601afd5a-a31a-4eb7-a1ea-6a942fc8746f</identification>      </annotationBean>      <date>2011-11-15 12:03:26.980 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">        <identification>ca8d08dc-c4cf-4981-9e74-6e56c723154a</identification>      </annotationBean>      <date>2011-11-15 14:51:08.345 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">        <identification>562ae439-440f-427e-98eb-82b9f7fd1f51</identification>      </annotationBean>      <date>2011-11-15 14:27:39.349 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">        <identification>f2648057-b9ba-44c3-8634-4d42a28ef5d1</identification>      </annotationBean>      <date>2011-11-15 14:15:47.473 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">        <identification>2335ed0d-6db2-4ee9-8e57-f6c5e2966334</identification>      </annotationBean>      <date>2011-11-14 15:41:08.815 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">        <identification>47be2e39-6e71-45ff-9aa2-5b826c5249c4</identification>      </annotationBean>      <date>2011-11-15 14:28:56.959 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">        <identification>e03f08fa-cef9-429c-bb11-0ed245d05297</identification>      </annotationBean>      <date>2011-11-15 12:06:57.411 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">        <identification>c905a0b7-0636-44e9-bb81-8e3dd0d0fc2c</identification>      </annotationBean>      <date>2011-11-15 14:49:51.725 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2></annotations></dataflow><dataflow id="bcece4a3-e6ad-4da2-8a62-0169f0a34e9f" role="nested"><name>NCSR_Binarisation</name><inputPorts><port><name>inputUrl</name><depth>0</depth><granularDepth>0</granularDepth><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.ExampleValue">        <text>http://kbdemo.dnsalias.org/testfiles/00046135.tif</text>      </annotationBean>      <date>2011-11-04 21:10:14.113 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">        <text>URL to image file in TIF format</text>      </annotationBean>      <date>2011-11-04 21:09:54.978 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port></inputPorts><outputPorts><port><name>outputUrl</name><annotations><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">        <text>URL to binary (black-and-white) image file in TIF format</text>      </annotationBean>      <date>2011-11-04 21:11:22.53 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain></annotations></port></outputPorts><processors><processor><name>binariseByUrl</name><inputPorts><port><name>part1</name><depth>0</depth></port></inputPorts><outputPorts><port><name>part1</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.wsdl.WSDLActivity</class><inputMap><map from="part1" to="part1" /></inputMap><outputMap><map from="part1" to="part1" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean xmlns="">  <wsdl>http://fue.onb.ac.at/synapse/IMPACTNCSRBinarisationProxy?wsdl</wsdl>  <operation>binariseByUrl</operation></net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="part1" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>input</name><inputPorts><port><name>inputUrl</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="inputUrl" to="inputUrl" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>inputUrl</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <allowsLiteralValues>false</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>output</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/xml'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs>  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="ByUrlRequest" name="part1" qname="{http://iif.impact-project.eu/}ByUrlRequest"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="anyURI" name="inputUrl" qname="{http://iif.impact-project.eu/}ByUrlRequestType&amp;gt;inputUrl" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML></net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="inputUrl" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>output</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>outputUrl</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="outputUrl" to="outputUrl" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>input</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/xml'</element>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>false</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>success</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>returncode</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>message</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>processingUnit</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>processingLog</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>toolProcessingTime</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>outputUrl</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs>  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="ByUrlResponse" name="part1" qname="{http://iif.impact-project.eu/}ByUrlResponse"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="boolean" name="success" qname="{http://iif.impact-project.eu/}ByUrlResponseType&amp;gt;success" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="returncode" qname="{http://iif.impact-project.eu/}ByUrlResponseType&amp;gt;returncode" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="message" qname="{http://iif.impact-project.eu/}ByUrlResponseType&amp;gt;message" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="processingUnit" qname="{http://iif.impact-project.eu/}ByUrlResponseType&amp;gt;processingUnit" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="processingLog" qname="{http://iif.impact-project.eu/}ByUrlResponseType&amp;gt;processingLog" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="toolProcessingTime" qname="{http://iif.impact-project.eu/}ByUrlResponseType&amp;gt;toolProcessingTime" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="anyURI" name="outputUrl" qname="{http://iif.impact-project.eu/}ByUrlResponseType&amp;gt;outputUrl" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML></net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>binariseByUrl</processor><port>part1</port></sink><source type="processor"><processor>input</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>input</processor><port>inputUrl</port></sink><source type="dataflow"><port>inputUrl</port></source></datalink><datalink><sink type="processor"><processor>output</processor><port>input</port></sink><source type="processor"><processor>binariseByUrl</processor><port>part1</port></source></datalink><datalink><sink type="dataflow"><port>outputUrl</port></sink><source type="processor"><processor>output</processor><port>outputUrl</port></source></datalink></datalinks><annotations><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">        <identification>3f2c9e52-2f92-4097-9eb6-81b4ff588405</identification>      </annotationBean>      <date>2011-11-04 20:38:29.487 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.DescriptiveTitle">        <text>NCSR Binarisation</text>      </annotationBean>      <date>2011-11-04 21:09:24.594 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.Author">        <text>IMPACT</text>      </annotationBean>      <date>2011-11-04 21:08:14.356 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.FreeTextDescription">        <text>Document image binarisation using GPP algorithm</text>      </annotationBean>      <date>2011-11-04 21:09:21.362 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">        <identification>bcece4a3-e6ad-4da2-8a62-0169f0a34e9f</identification>      </annotationBean>      <date>2011-11-04 21:11:42.259 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2></annotations></dataflow></workflow>