<?xml version="1.0" encoding="UTF-8"?><sci:data xmlns:sci="http://www.SciTegic.com/" object="SciTegic.Protocol.1">	<sci:component name="Wash and Filter_myexperiment" version="2">		<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">			<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>		</sci:arg>		<sci:arg name="WebExports" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">			<sci:help>&lt;p&gt;A comma delimited list of global properties which will be automatically exported if this protocol is published as a web service.&lt;p/&gt;Each global property in the list is created with an empty value at the start of the protocol run.&lt;/p&gt;</sci:help>		</sci:arg>		<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="visible" multi="false" uimpl="true">			<sci:help>The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Webport to provide a custom user interface for a protocol.</sci:help>		</sci:arg>		<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">			<sci:help>When a recoverable error occurs during processing:   Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) portPass: Continue execution of the network, passing data out the Pass(green) port</sci:help>			<sci:legalval selected="true">Halt</sci:legalval>			<sci:legalval>Fail</sci:legalval>			<sci:legalval>Pass</sci:legalval>		</sci:arg>		<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">			<sci:help>When an expected data type is not found during processing:  Halt: Terminate the execution of the networkFail: Continue execution of the network, passing data out the Fail(red) portPass: Continue execution of the network, passing data out the Pass(green) port</sci:help>			<sci:legalval selected="true">Halt</sci:legalval>			<sci:legalval>Fail</sci:legalval>			<sci:legalval>Pass</sci:legalval>		</sci:arg>		<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">			<sci:help>Component Attributes</sci:help>			<sci:legalval>ComponentTakesInput</sci:legalval>			<sci:legalval>ComponentReturnsPass</sci:legalval>			<sci:legalval>ComponentReturnsFail</sci:legalval>			<sci:legalval>ComponentRunsLocal</sci:legalval>		</sci:arg>		<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>The component this component is based upon.</sci:help>			<sci:value>EmptyProtocol</sci:value>		</sci:arg>		<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>The user who registered this component.</sci:help>			<sci:value>PaulDobson</sci:value>		</sci:arg>		<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>The date this component was registered.</sci:help>			<sci:value>Tue Jan 20 10:04:04 2009</sci:value>		</sci:arg>		<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>Component Comment</sci:help>			<sci:value>A top-level component for building protocols.</sci:value>		</sci:arg>		<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>Component Usage</sci:help>			<sci:value>The user should customize this description and usage to describe the functioning of their derived protocol.</sci:value>		</sci:arg>		<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>Display Name</sci:help>			<sci:value>Wash and Filter</sci:value>		</sci:arg>		<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">			<sci:help>Protocol AutoLayout</sci:help>			<sci:value>1</sci:value>		</sci:arg>		<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">			<sci:help>Protocol ShowComment</sci:help>			<sci:value>true</sci:value>		</sci:arg>		<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>Add Protocol Comment Here</sci:help>			<sci:value>Add Protocol Comment Here</sci:value>		</sci:arg>		<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>Custom Error Message</sci:help>		</sci:arg>		<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">			<sci:help>Component Icon</sci:help>			<sci:value>PROTOCOLNODE</sci:value>		</sci:arg>		<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">			<sci:help>Component Revision</sci:help>			<sci:value>100</sci:value>		</sci:arg>		<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">			<sci:help>Disabled</sci:help>			<sci:value>0</sci:value>		</sci:arg>		<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>GUID</sci:help>			<sci:value>{16FC09DF-57EB-DA49-AB78-CFC5750A7300}</sci:value>		</sci:arg>		<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>Component Point</sci:help>			<sci:value>70 -50</sci:value>		</sci:arg>		<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">			<sci:help>By Ref</sci:help>			<sci:value>0</sci:value>		</sci:arg>		<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">			<sci:help>Fancy Help</sci:help>			<sci:value>100</sci:value>			<sci:value>Building protocols in Pipeline Pilot.</sci:value>			<sci:value>This is the help window for working with components and protocols in Pipeline Pilot. To create a protocol, drag items from the Components tab into the workspace. Connect them with pipes, edit their parameters, and then click Run to generate results.  As you select components and protocols, information about using them is displayed in this help window. The parameters are displayed in the adjacent Parameters window.For more information, go to &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/getstart/getstart_intro.htm&apos;)&quot;&gt;Getting Started with Pipeline Pilot&lt;/a&gt;.</sci:value>			<sci:value>None</sci:value>			<sci:value/>			<sci:value>None</sci:value>			<sci:value/>			<sci:value>None</sci:value>			<sci:value/>		</sci:arg>		<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>Runtime Identifier</sci:help>		</sci:arg>		<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help/>		</sci:arg>		<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">			<sci:help>Protocol Scale</sci:help>			<sci:value>74</sci:value>		</sci:arg>		<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>Protocol Options</sci:help>			<sci:legalval>Make Shortcut by Default</sci:legalval>			<sci:legalval>Owner Access Only</sci:legalval>		</sci:arg>		<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>Protocol Sticky Notes</sci:help>			<sci:value>%VERSION 3%</sci:value>			<sci:value>125 -375 747 194</sci:value>			<sci:value>0 255 0</sci:value>			<sci:value>Metabolite Washing and Filtering</sci:value>		</sci:arg>		<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>The server version when this component was registered</sci:help>			<sci:value>7.0.1.100</sci:value>		</sci:arg>		<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>Location of the component in the database</sci:help>			<sci:value>PaulDobson\DrugMetaboDistance\Wash and Filter</sci:value>		</sci:arg>	</sci:component>	<sci:protocol>		<sci:data object="SciTegic.MDLSDReader.1">			<sci:component name="SD Reader" version="2">				<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">					<sci:help>The file or URL source to read</sci:help>					<sci:member>Maximum</sci:member>					<sci:member>SourceTag</sci:member>					<sci:member>Keep Properties</sci:member>				</sci:arg>				<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">					<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>				</sci:arg>				<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">					<sci:help>&lt;p&gt;The type of tag to create to identify the source of data records. A property called &lt;b&gt;SourceTag&lt;/b&gt; is created and holds the value indicated.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;None&lt;/b&gt;: No SourceTag property is created and any existing ones are removed.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Filename&lt;/b&gt;: The name of the file read.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FilenameAndExtension&lt;/b&gt;: The name of the file read with its file extension.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FullFilename&lt;/b&gt;: The name of the file read, including the directory path.&lt;/li&gt;&lt;li&gt;&lt;b&gt;ZipFilename&lt;/b&gt;: When reading a compressed zip file, the filename within the compressed archive.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Number&lt;/b&gt;: When multiple files are read in this component, they are numbered 1,2,3...&lt;/li&gt;&lt;li&gt;&lt;b&gt;Letter&lt;/b&gt;: When multiple files are read in this component, they are lettered A, B, C...&lt;/li&gt;&lt;li&gt;&lt;b&gt;KeepCurrent&lt;/b&gt;: Keeps the current value of SourceTag.&lt;/li&gt;&lt;/ul&gt;</sci:help>					<sci:legalval selected="true">None</sci:legalval>					<sci:legalval>Filename</sci:legalval>					<sci:legalval>FilenameAndExtension</sci:legalval>					<sci:legalval>FullFilename</sci:legalval>					<sci:legalval>ZipFilename</sci:legalval>					<sci:legalval>Number</sci:legalval>					<sci:legalval>Letter</sci:legalval>					<sci:legalval>KeepCurrent</sci:legalval>				</sci:arg>				<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">					<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.</sci:help>				</sci:arg>				<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">					<sci:help>Contains less commonly used parameters</sci:help>					<sci:member>ReadProperties</sci:member>					<sci:member>PutNameInProperty</sci:member>					<sci:member>ReadQueryInfo</sci:member>					<sci:member>PutCommentInProperty</sci:member>					<sci:member>SD Format Options</sci:member>				</sci:arg>				<sci:arg name="SD Format Options" type="StringType" required="false" visibility="visible" multi="true">					<sci:help>&lt;p&gt;Options available for the SD Reader:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Properties Can Contain $$$$:&lt;/b&gt;  By the MDL CTFile standard, a property can contain a &apos;$$$$&apos;-line.  Properties or data field values are terminated by a blank line.  Only then will the &apos;$$$$&apos;-line terminate the full data block.  Setting this option off will terminate the data block upon any read of a &apos;$$$$&apos;-line.  This option is available to provide compatibility with some 3rd Party SD files.&lt;/li&gt;&lt;li&gt;&lt;b&gt;One-space Lines Terminate Properties:&lt;/b&gt;  By the MDL CTFile standard, properties or data fields values are terminated by a blank line. Selecting this option will terminate the data block when encountering a line containing a space as the only character in the line.  This option is available to provide compatibility with some 3rd Party SD files.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Unwrap Long Property Lines:&lt;/b&gt;  By the MDL CTFile standard, lines in property fields cannot exceed 200 characters.  When this option is selected and a property line of exactly 200 characters is found, the newline character will be ignored and property string will continue on the next line.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Read Unknown Stereo Parity:&lt;/b&gt;  When selected, the SD Reader will use the &apos;Atom Parity&apos; value (parity of &apos;3&apos;) to mark unknown stereo centers in 3D mol files.  This will leave these atoms marked as &apos;unknown stereo&apos; and will not calculate the stereo from the coordinates.&lt;/li&gt;&lt;/ul&gt;</sci:help>					<sci:legalval selected="true">Properties Can Contain $$$$</sci:legalval>					<sci:legalval>One-space Lines Terminate Properties</sci:legalval>					<sci:legalval selected="true">Unwrap Long Property Lines</sci:legalval>					<sci:legalval>Read Unknown Stereo Parity</sci:legalval>				</sci:arg>				<sci:arg name="ReadProperties" type="BoolType" required="true" visibility="visible" multi="false">					<sci:help>Select True to read the properties for each molecule (in addition to the structures)</sci:help>					<sci:legalval selected="true">True</sci:legalval>					<sci:legalval>False</sci:legalval>				</sci:arg>				<sci:arg name="ReadQueryInfo" type="BoolType" required="true" visibility="visible" multi="false">					<sci:help>If properties starting with &quot;QueryInfo&quot; are present, use them to set up query information on the atoms and bonds. (This is how, for example, SMARTS query information can be preserved when writing to an MDL SD format file.) For molecules saved in MDL format, this information only contains information that cannot be written out in MDL SD format.</sci:help>					<sci:legalval>True</sci:legalval>					<sci:legalval selected="true">False</sci:legalval>				</sci:arg>				<sci:arg name="PutNameInProperty" type="StringType" required="false" visibility="visible" multi="false">					<sci:help>What to call the property that holds the name of each molecule</sci:help>					<sci:value>Name</sci:value>				</sci:arg>				<sci:arg name="PutCommentInProperty" type="StringType" required="false" visibility="visible" multi="false">					<sci:help>What to call the property that holds the comment associated with each molecule</sci:help>				</sci:arg>				<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">					<sci:help>Component Attributes</sci:help>					<sci:legalval>ComponentTakesInput</sci:legalval>					<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>					<sci:legalval>ComponentReturnsFail</sci:legalval>					<sci:legalval>ComponentRunsLocal</sci:legalval>				</sci:arg>				<sci:arg name="AllowUnknownDoubleBondsFromCoordinates" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>According to the MDL CTfile specifications, the cis/trans character of double bonds with bond stereo set to zero is determined from the coordinates. This parameter controls whether or not to assign unknown bond stereo to double bonds for which the stereo could not be determined from the coordinates, either because there are no coordinates or because of colinearity issues.  When the parameter is set to False and the stereo could not be determined, no specific stereo configuration is assigned to the double bond, but it is not marked as unknown stereo.</sci:help>					<sci:legalval selected="true">True</sci:legalval>					<sci:legalval>False</sci:legalval>				</sci:arg>				<sci:arg name="DeleteOnClose" type="BoolType" required="true" visibility="nevershow" multi="false">					<sci:help>Delete the file after the data is read [Be Careful!]</sci:help>					<sci:legalval>True</sci:legalval>					<sci:legalval selected="true">False</sci:legalval>				</sci:arg>				<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Comment</sci:help>					<sci:value>Reads MDL MOL (molecule CTAB) files and MDL SD (structured data) files.</sci:value>				</sci:arg>				<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The user who registered this component.</sci:help>					<sci:value>scitegic/chemistry</sci:value>				</sci:arg>				<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The date this component was registered.</sci:help>					<sci:value>Tue Mar 20 10:03:13 2007</sci:value>				</sci:arg>				<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Usage</sci:help>					<sci:value>Creates a molecule data record for each molecule represented in the &apos;Source&apos; data file.  Can read zipped (.zip) and url-based files.  Any properties contained in the file will be read into the data records created if the user specifies.Output Pass  - Molecule data records</sci:value>				</sci:arg>				<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Display Name</sci:help>					<sci:value>SD Reader</sci:value>				</sci:arg>				<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Custom Error Message</sci:help>				</sci:arg>				<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Icon</sci:help>					<sci:value>DOCUMENTNODE</sci:value>				</sci:arg>				<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>GUID</sci:help>					<sci:value>{CA65B896-4FE6-4E3A-B884-DC16B53B8D26}</sci:value>				</sci:arg>				<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The component this component is based upon.</sci:help>					<sci:value>SD Reader</sci:value>				</sci:arg>				<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Disabled</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Point</sci:help>					<sci:value>88 -50</sci:value>				</sci:arg>				<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">					<sci:help>Fancy Help</sci:help>					<sci:value>100</sci:value>					<sci:value>Reads MDL MOL (molecule CTAB) files and MDL SD (structured data) files</sci:value>					<sci:value>&lt;p&gt;Creates a molecular data record for each molecule represented in the &lt;i&gt;Source&lt;/i&gt; data file.  All properties contained in the file are read into the data records.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;This component can also read zipped (.zip) and URL-based files.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;To write files in MDL MOL or SD format, use the &lt;a href=&quot;javascript:DoLink(&apos;{DC8EE7B0-0620-42FE-944C-B4CD1E79480E}&apos;)&quot;&gt;SD Writer&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;To convert a molecule to and from between text properties in CTAB format, use &lt;a href=&quot;javascript:DoLink(&apos;{E622FBD9-9FA9-451A-A102-1800B5F28B6D}&apos;)&quot;&gt;Molecule to CTAB&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{7D354B65-DDD8-4EA4-83A7-21501A8A6852}&apos;)&quot;&gt;Molecule from CTAB&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Other related MDL format file readers include &lt;a href=&quot;javascript:DoLink(&apos;{169AB4E5-A470-477B-AA65-50464411036C}&apos;)&quot;&gt;RG Reader&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{036731AA-0015-4606-9750-7D9D020F21C8}&apos;)&quot;&gt;RXN Reader&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{55431CCB-06EA-4741-B95B-633C877E3E9B}&apos;)&quot;&gt;RD Reader&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt;</sci:value>					<sci:value>None</sci:value>					<sci:value/>					<sci:value>Molecule</sci:value>					<sci:value>Data fields in the SD file will be added to the property fields</sci:value>					<sci:value>None</sci:value>					<sci:value/>				</sci:arg>				<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Sticky Notes</sci:help>				</sci:arg>				<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The server version when this component was registered</sci:help>					<sci:value>6.1.0.11</sci:value>				</sci:arg>				<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Runtime Identifier</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Location of the component in the database</sci:help>					<sci:value>Components\Chemistry\Readers\SD Reader</sci:value>				</sci:arg>			</sci:component>		</sci:data>		<sci:data object="SciTegic.Protocol.1">			<sci:component name="Subprotocol" version="2">				<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>				</sci:arg>				<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>				</sci:arg>				<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>					<sci:legalval>True</sci:legalval>					<sci:legalval selected="true">False</sci:legalval>				</sci:arg>				<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making availablebecause we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.&lt;/p&gt;&lt;p&gt;Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.&lt;/p&gt;&lt;p&gt;For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.&lt;/p&gt;</sci:help>					<sci:member>Parallel Processing Options Batch Size</sci:member>					<sci:member>Parallel Processing Options Server</sci:member>					<sci:member>Parallel Processing Options Preserve Order</sci:member>					<sci:legalval>True</sci:legalval>					<sci:legalval selected="true">False</sci:legalval>				</sci:arg>				<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">					<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>					<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>					<sci:value>25</sci:value>				</sci:arg>				<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">					<sci:help>&lt;p&gt;Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).&lt;/p&gt;&lt;p&gt;Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).&lt;/p&gt;</sci:help>					<sci:member>Parallel Processing Options Server Processes</sci:member>					<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);Parameter() ne &apos;&apos;;</sci:validscript>					<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>				</sci:arg>				<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>					<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/#processes := parameter();expand(&apos;,&apos;, #processes);#servers := parameter(&apos;Parallel Processing Options Server&apos;);expand(&apos;,&apos;, #servers);if (numvalues(#processes) == 0) then	SetInvalidDetails(&apos;This parameter is required.&apos;);else	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);end if;numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>					<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>				</sci:arg>				<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>					<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>					<sci:legalval selected="true">True</sci:legalval>					<sci:legalval>False</sci:legalval>				</sci:arg>				<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">					<sci:help>Component Attributes</sci:help>					<sci:legalval selected="true">ComponentTakesInput</sci:legalval>					<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>					<sci:legalval>ComponentReturnsFail</sci:legalval>					<sci:legalval>ComponentRunsLocal</sci:legalval>				</sci:arg>				<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Comment</sci:help>					<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>				</sci:arg>				<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Usage</sci:help>					<sci:value>When you are creating a pipeline which requires a subprotocol as a component, you can drag this SubProtocol component into the pipeline, open it, and add components into it.</sci:value>				</sci:arg>				<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Display Name</sci:help>					<sci:value>original smiles generation</sci:value>				</sci:arg>				<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol AutoLayout</sci:help>					<sci:value>1</sci:value>				</sci:arg>				<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol ShowComment</sci:help>					<sci:value>true</sci:value>				</sci:arg>				<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Add Protocol Comment Here</sci:help>					<sci:value>Add Protocol Comment Here</sci:value>				</sci:arg>				<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Disabled</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Custom Error Message</sci:help>				</sci:arg>				<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Icon</sci:help>					<sci:value>EXPRESSIONNODE</sci:value>				</sci:arg>				<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Revision</sci:help>					<sci:value>100</sci:value>				</sci:arg>				<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The component this component is based upon.</sci:help>					<sci:value>SubProtocol</sci:value>				</sci:arg>				<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>GUID</sci:help>					<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>				</sci:arg>				<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Point</sci:help>					<sci:value>363 -50</sci:value>				</sci:arg>				<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>By Ref</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">					<sci:help>Fancy Help</sci:help>					<sci:value>100</sci:value>					<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>					<sci:value>&lt;p&gt;Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. &lt;/p&gt;&lt;p&gt;To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.&lt;/p&gt;</sci:value>					<sci:value>Generic</sci:value>					<sci:value/>					<sci:value>Generic</sci:value>					<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>					<sci:value>None</sci:value>					<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>				</sci:arg>				<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The server version when this component was registered</sci:help>					<sci:value>6.1.0.21</sci:value>				</sci:arg>				<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Sticky Notes</sci:help>				</sci:arg>				<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol Sticky Notes</sci:help>				</sci:arg>				<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol Scale</sci:help>					<sci:value>100</sci:value>				</sci:arg>				<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol Options</sci:help>					<sci:legalval>Make Shortcut by Default</sci:legalval>					<sci:legalval>Owner Access Only</sci:legalval>				</sci:arg>				<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The user who registered this component.</sci:help>					<sci:value>scitegic/core</sci:value>				</sci:arg>				<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The date this component was registered.</sci:help>					<sci:value>Tue May 01 14:06:30 2007</sci:value>				</sci:arg>				<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Runtime Identifier</sci:help>					<sci:value>1</sci:value>				</sci:arg>				<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Location of the component in the database</sci:help>					<sci:value>Components\Generic\Utilities\SubProtocol Utilities\Subprotocol</sci:value>				</sci:arg>			</sci:component>			<sci:protocol>				<sci:data object="SciTegic.CalculateSmiles.1">					<sci:component name="Canonical Smiles" version="2">						<sci:arg name="Output" type="StringType" required="false" visibility="visible" multi="true">							<sci:help>&lt;ul&gt;&lt;li&gt;&lt;b&gt;SMILES&lt;/b&gt; is a non-canonical representation for the molecule. (This is very fast to calculate compared to Canonical_SMILES.)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Canonical_SMILES&lt;/b&gt; is the representation that can be compared for identicality.&lt;/li&gt;&lt;/ul&gt;&lt;i&gt;Output&lt;/i&gt; properties can be calculated &quot;on demand&quot; by simply using their names within a PilotScript expression or as the parameter value to many parameters that require a property name.</sci:help>							<sci:legalval type="StringType" selected="true">Canonical_Smiles</sci:legalval>							<sci:legalval type="StringType">Smiles</sci:legalval>						</sci:arg>						<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">							<sci:help>Component Attributes</sci:help>							<sci:legalval selected="true">ComponentTakesInput</sci:legalval>							<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>							<sci:legalval>ComponentReturnsFail</sci:legalval>							<sci:legalval>ComponentRunsLocal</sci:legalval>						</sci:arg>						<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Comment</sci:help>							<sci:value>Calculates a SMILES representation of the molecular information in a molecular data record. SMILES is a text-based representation for molecular information developed by Daylight.</sci:value>						</sci:arg>						<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The user who registered this component.</sci:help>							<sci:value>scitegic/chemistry</sci:value>						</sci:arg>						<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The date this component was registered.</sci:help>							<sci:value>Wed Jul 21 10:12:26 2004</sci:value>						</sci:arg>						<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Usage</sci:help>							<sci:value>Select either &apos;Smiles&apos; or &apos;Canonical_Smiles&quot; s in the &apos;Output&apos; pulldown list to generate the required string.  The data is augmented with the selected properties.Input             - Molecule data recordsOutput Pass - Molecule data records augmented with selected properties</sci:value>						</sci:arg>						<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Display Name</sci:help>							<sci:value>Canonical Smiles</sci:value>						</sci:arg>						<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The component this component is based upon.</sci:help>							<sci:value>Canonical Smiles</sci:value>						</sci:arg>						<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Custom Error Message</sci:help>						</sci:arg>						<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Icon</sci:help>							<sci:value>CALCULATORNODE</sci:value>						</sci:arg>						<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>GUID</sci:help>							<sci:value>{0C60C40A-5189-42DA-A3C0-4EA44BC27D15}</sci:value>						</sci:arg>						<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Point</sci:help>							<sci:value>88 -50</sci:value>						</sci:arg>						<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Disabled</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Fancy Help</sci:help>							<sci:value>100</sci:value>							<sci:value>Calculates a SMILES or canonical SMILES representation of the input molecule</sci:value>							<sci:value>&lt;p&gt;SMILES is a terse textual representation of molecular data.  Canonical SMILES is a form of SMILES that is independent of how the molecule is drawn and so can be used to compare whether two molecules are identical.&lt;/P&gt;This component can create either or both of two properties:&lt;ul&gt;&lt;li&gt;&lt;b&gt;SMILES&lt;/b&gt; is a non-canonical representation for the molecule. (This is very fast to calculate compared to Canonical_SMILES.)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Canonical_SMILES&lt;/b&gt; is the representation that can be compared for identicality.&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;The canonicalization algorithm is SciTegic&apos;s; while it is derived from the published Daylight algorithm, however, lack of complete documentation of their procedure means that it will not necessarily give identical results. Compare two SMILES for identity only when having both canonicalized by the same method. &lt;/li&gt;&lt;/ul&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;You can create a SMILES string as text under any property name using &lt;a href=&quot;javascript:DoLink(&apos;{0C60C40A-5189-42DA-A3C0-4EA44BFF7D15}&apos;)&quot;&gt;Molecule to SMILES&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;You can convert a SMILES string into a molecule using &lt;a href=&quot;javascript:DoLink(&apos;{AC8262DA-E648-4D24-9CD1-D731A8F53F9D}&apos;)&quot;&gt;Molecule from SMILES&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;For an alternative way of generating a canonical string representation, see &lt;a href=&quot;javascript:DoLink(&apos;{EB62CC30-BC6A-4d5f-8618-3EB9AF611C69}&apos;)&quot;&gt;Molecule to InChI&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;</sci:value>							<sci:value>Molecule</sci:value>							<sci:value/>							<sci:value>Molecule</sci:value>							<sci:value>Records augmented with a text property containing the canonical SMILES or SMILES</sci:value>							<sci:value>None</sci:value>							<sci:value/>						</sci:arg>						<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The server version when this component was registered</sci:help>							<sci:value>4.1.1.200</sci:value>						</sci:arg>						<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Runtime Identifier</sci:help>							<sci:value>1:0</sci:value>						</sci:arg>						<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Location of the component in the database</sci:help>							<sci:value>Components\Chemistry\Calculators\Canonical Smiles</sci:value>						</sci:arg>					</sci:component>					<sci:proplist>						<sci:propval name="Canonical_Smiles|Category">Molecular Formats</sci:propval>						<sci:propval name="Smiles|Category">Molecular Formats</sci:propval>					</sci:proplist>				</sci:data>				<sci:data object="SciTegic.PropertyFunctions.1">					<sci:component name="Rename Property" version="2">						<sci:arg name="Property" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Property name to change</sci:help>							<sci:value>Canonical_Smiles</sci:value>						</sci:arg>						<sci:arg name="NewProperty" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Name of the new property</sci:help>							<sci:value>original_smiles</sci:value>						</sci:arg>						<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When a General or DataType error occurs during processing:    LeaveData: The data is passed unalterd  ClearData: The data is cleared before being passed (an empty data item)  DeleteData: The data is deleted and not passed</sci:help>							<sci:legalval selected="true">LeaveData</sci:legalval>							<sci:legalval>ClearData</sci:legalval>							<sci:legalval>DeleteData</sci:legalval>						</sci:arg>						<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">							<sci:help>Component Attributes</sci:help>							<sci:legalval selected="true">ComponentTakesInput</sci:legalval>							<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>							<sci:legalval>ComponentReturnsFail</sci:legalval>							<sci:legalval>ComponentRunsLocal</sci:legalval>						</sci:arg>						<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>the action to perform</sci:help>							<sci:value>Rename</sci:value>						</sci:arg>						<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>Sets the Components Icon</sci:help>							<sci:value>EXPRESSIONNODE</sci:value>						</sci:arg>						<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Comment</sci:help>							<sci:value>Renames a single property.</sci:value>						</sci:arg>						<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The user who registered this component.</sci:help>							<sci:value>scitegic/core</sci:value>						</sci:arg>						<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The date this component was registered.</sci:help>							<sci:value>Fri Sep 15 10:07:49 2006</sci:value>						</sci:arg>						<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Usage</sci:help>							<sci:value>The component works for single properties as well as property arrays. Input             - Data recordsOutput Pass  - All Data records</sci:value>						</sci:arg>						<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Display Name</sci:help>							<sci:value>Rename Property</sci:value>						</sci:arg>						<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The component this component is based upon.</sci:help>							<sci:value>Evaluate Expression</sci:value>						</sci:arg>						<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component RunTimeID</sci:help>							<sci:value>1:1</sci:value>						</sci:arg>						<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>GUID</sci:help>							<sci:value>{5A384E06-8AF2-4C10-A9B7-7302DD110A48}</sci:value>						</sci:arg>						<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Disabled</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>CustomErrorText</sci:help>						</sci:arg>						<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Point</sci:help>							<sci:value>363 -50</sci:value>						</sci:arg>						<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Fancy Help</sci:help>							<sci:value>100</sci:value>							<sci:value>Renames a property</sci:value>							<sci:value>For each data record entering the component, the property with name specified by &lt;i&gt;Property&lt;/i&gt; is renamed to the name specified by &lt;i&gt;NewProperty&lt;/i&gt;.</sci:value>							<sci:value>Generic</sci:value>							<sci:value/>							<sci:value>Generic</sci:value>							<sci:value/>							<sci:value>None</sci:value>							<sci:value/>						</sci:arg>						<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The server version when this component was registered</sci:help>							<sci:value>6.0.0.46</sci:value>						</sci:arg>						<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Location of the component in the database</sci:help>							<sci:value>Components\Generic\Manipulators\Rename Property</sci:value>						</sci:arg>					</sci:component>				</sci:data>				<sci:connect from="0" to="1" type="true"/>			</sci:protocol>		</sci:data>		<sci:data object="SciTegic.TransformMolecule.1">			<sci:component name="Standardize Molecule" version="2">				<sci:arg name="Action" type="StringType" required="false" visibility="visible" multi="true">					<sci:help>Options for the type of standardization you can perform. The default is to standardize the charging and stereochemistry of the molecule. If multiple actions are selected, they are performed in  the given order.</sci:help>					<sci:member>Invert Wedge Bond When Changing Direction</sci:member>					<sci:legalval selected="true">StandardizeStereo</sci:legalval>					<sci:legalval selected="true">StandardizeCharges</sci:legalval>					<sci:legalval selected="true">CenterMolecule</sci:legalval>					<sci:legalval>RemoveSingleAtomFragments</sci:legalval>					<sci:legalval>KeepSmallestFragment</sci:legalval>					<sci:legalval selected="true">KeepLargestFragment</sci:legalval>					<sci:legalval>RemoveLargestFragment</sci:legalval>					<sci:legalval>MakeNon[H]Atoms[C]Atoms</sci:legalval>					<sci:legalval>MakeNon[H]Atoms[A]Atoms</sci:legalval>					<sci:legalval>MakeNon[C,H]Atoms[Q]Atoms</sci:legalval>					<sci:legalval>MakeAllBondsSingle</sci:legalval>					<sci:legalval selected="true">ClearCoordinates</sci:legalval>					<sci:legalval>ClearMolecule</sci:legalval>					<sci:legalval>RemoveMolecule</sci:legalval>					<sci:legalval>ClearStereo</sci:legalval>					<sci:legalval>ClearUnknownStereo</sci:legalval>					<sci:legalval>ClearCisTransBondStereo</sci:legalval>					<sci:legalval>SetStereoFromCoordinates</sci:legalval>					<sci:legalval>RepositionStereoBonds</sci:legalval>					<sci:legalval>FixDirectionOfWedgeBonds</sci:legalval>					<sci:legalval>ClearCharges</sci:legalval>					<sci:legalval>ClearSgroupData</sci:legalval>					<sci:legalval>ClearHighlightColors</sci:legalval>					<sci:legalval>ClearQueryInfo</sci:legalval>					<sci:legalval>ClearAtomLabels</sci:legalval>					<sci:legalval>ClearBondLabels</sci:legalval>					<sci:legalval>NeutralizeBondedZwitterions</sci:legalval>					<sci:legalval>ClearUnusualValence</sci:legalval>				</sci:arg>				<sci:arg name="Invert Wedge Bond When Changing Direction" type="BoolType" required="false" visibility="visible" multi="false">					<sci:help>This parameter controls whether or not to invert the bond stereo (up or down) when changing the direction of the wedge bond by selecting &quot;FixDirectionOfWedgeBonds&quot; in the &lt;i&gt;Action&lt;/i&gt; parameter.</sci:help>					<sci:enabledscript>contains(parameter(&apos;Action&apos;), &apos;FixDirectionOfWedgeBonds&apos;)</sci:enabledscript>					<sci:legalval selected="true">True</sci:legalval>					<sci:legalval>False</sci:legalval>				</sci:arg>				<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">					<sci:help>Componet Attributes</sci:help>					<sci:legalval selected="true">ComponentTakesInput</sci:legalval>					<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>					<sci:legalval>ComponentReturnsFail</sci:legalval>					<sci:legalval>ComponentRunsLocal</sci:legalval>				</sci:arg>				<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The user who registered this component.</sci:help>					<sci:value>scitegic/chemistry</sci:value>				</sci:arg>				<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The date this component was registered.</sci:help>					<sci:value>Wed Apr 11 14:39:40 2007</sci:value>				</sci:arg>				<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Comment</sci:help>					<sci:value>Contains a number of actions that are useful for taking molecules from different sources and correcting non-uniform features.</sci:value>				</sci:arg>				<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Usage</sci:help>					<sci:value>One or more actions can be applied to each molecule to standardize the way molecules are presented to downstream components.Input             - Molecular data recordsOutput Pass  - Molecular data records with standardization changesDescription of StandardizeStereo option:Atoms that are perceived as true stereo atoms but which have no stereochemical markings (UnknownAtomStereo, EvenAtomStereo, or OddAtomStereo) are set to UnknownAtomStereo.  Atoms that have stereochemical markings but which are not true stereoatoms are set to NoAtomStereo. 2D or 3D coordinates are not used in this process.Similarly, bonds that are perceived as true stereo double bonds but which have no stereochemical markings (UnknownBondStereo, CisBondStereo, or TransBondStereo) are set to UnknownBondStereo.  Bonds that have stereochemical markings but which are not true stereo bonds are set to NoBondStereo. Again, 2D or 3D coordinates are not used in this process.</sci:value>				</sci:arg>				<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Display Name</sci:help>					<sci:value>Standardize Molecule</sci:value>				</sci:arg>				<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Custom Error Message</sci:help>				</sci:arg>				<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Icon</sci:help>					<sci:value>COMPONENTNODE</sci:value>				</sci:arg>				<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The component this component is based upon.</sci:help>					<sci:value>Standardize Charges</sci:value>				</sci:arg>				<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Disabled</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>GUID</sci:help>					<sci:value>{EFEA1A46-A6DB-4DB9-A5A9-C7F3D2ADFDE2}</sci:value>				</sci:arg>				<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Point</sci:help>					<sci:value>663 -50</sci:value>				</sci:arg>				<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">					<sci:help>Fancy Help</sci:help>					<sci:value>100</sci:value>					<sci:value>Applies selected predefined actions to the input molecules</sci:value>					<sci:value>&lt;p&gt;One or more actions can be applied to each molecule to standardize the way molecules are presented to downstream components. &lt;p&gt;Standardization is important when comparing molecular libraries from different sources. If different rules were used for structural representation when creating these libraries, a straight comparison would yield incorrect results. This component allows you to apply a consistent set of rules to structures before comparing them.&lt;p&gt;Available actions:&lt;ul&gt;&lt;li&gt;&lt;strong&gt;StandardizeStereo: &lt;/strong&gt; Atoms that are perceived as true stereo atoms but which have no stereochemical markings (UnknownAtomStereo, EvenAtomStereo, or OddAtomStereo) are set to UnknownAtomStereo. Atoms that have stereochemical markings but which are not true stereoatoms are set to NoAtomStereo. 2D or 3D coordinates are not used in this process. &lt;br /&gt;Similarly, bonds that are perceived as true stereo double bonds, but which have no stereochemical markings (UnknownBondStereo, CisBondStereo, or TransBondStereo) are set to UnknownBondStereo. Bonds that have stereochemical markings but which are not true stereo bonds are set to NoBondStereo. Again, 2D or 3D coordinates are not used in this process.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;StandardizeCharges:&lt;/strong&gt; Sets standard formal charges for common functional groups: Quaternary Nitrogen: +1 &lt;br /&gt;Nitro groups: N+(=O)O- &lt;br&gt;Diazonium N: +1 &lt;br&gt;Oxygen with three attachments: +1 &lt;br&gt;X=O-C Oxygen: +1 &lt;br&gt;Sulfur with three attachments: +1 &lt;br&gt;S=O-C Sulfur: +1 &lt;br&gt;F, Cl, Br, I with no attachments: -1 &lt;br&gt;Note that halogen acids with explicit hydrogens (H-X) are not modified. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;CenterMolecule:&lt;/strong&gt; Translates the molecule to the center of geometry. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;RemoveSingleAtomFragments:&lt;/strong&gt; Removes all unattached atoms from the molecule. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;KeepSmallestFragment:&lt;/strong&gt; Keeps only the fragment with fewer atoms in the case of multifragment molecules. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;MakeNon[H]Atoms[C]Atoms:&lt;/strong&gt; Converts all the atoms in the molecule to Carbon. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;MakeNon[C,H]Atoms[Q]Atoms: &lt;/strong&gt; Converts all non-carbon, non-hydrogen atoms in the molecule to the Q query atom type. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;MakeNon[H]Atoms[A]Atoms: &lt;/strong&gt; Converts all non-hydrogen atoms in the molecule to the A query atom type. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;MakeAllBondsSingle: &lt;/strong&gt; Converts all the bonds in the molecule to Single bonds. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;ClearCoordinates:&lt;/strong&gt; Sets all x, y, z coordinates to zero. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;ClearMolecule:&lt;/strong&gt; Deletes all atoms and bonds in the molecule, keeping the molecule object in the data record. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;RemoveMolecule:&lt;/strong&gt; Deletes the molecule object from the data record. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;ClearStereo: &lt;/strong&gt; Sets all atoms and bonds to NoStereo. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;ClearUnknownStereo:&lt;/strong&gt; Sets all atoms and bonds that are marked UnknownStereo to NoStereo. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;ClearCisTransBondStereo:&lt;/strong&gt; Sets all bonds that are marked CisStereo or TransStereo to UnknownStereo. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;ClearCharges: &lt;/strong&gt; Sets all formal charges to zero. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;SetStereoFromCoordinates: &lt;/strong&gt; This option uses the 2D coordinates and up/down bond markings, or the 3D coordinates, to assign the stereochemistry of the atoms or bonds. Typically, this is done by the readers or the molecules from text components. Occasionally, components may create molecules that need to have their stereo reperceived. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;RepositionStereoBonds: &lt;/strong&gt; This option repositions the stereo bond markings, trying to find the best bond to mark as a wedge bond for each stereo atom. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;FixDirectionOfWedgeBonds: &lt;/strong&gt; This option checks the wedge bonds in the molecule to make sure that the wedge is drawn with the stereo atom at the narrow end of the wedge. Any wedge bond for which there is a stereo atom at the wide end and no stereo atom at the narrow end is reversed to point in the other direction. A separate option, &lt;i&gt;Invert Wedge Bond When Changing Direction&lt;/i&gt;, controls whether or not to invert the bond stereo (up or down) when changing the direction of the wedge bond. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;ClearQueryInfo: &lt;/strong&gt; Deletes all query information from atoms and bonds. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;NeutralizeBondedZwitterions:&lt;/strong&gt; Converts directly bonded zwitterions (positively charged atom bonded to negatively charged atom, A+B-) to the neutral representation (A=B). &lt;/li&gt;&lt;li&gt;&lt;strong&gt;ClearSGroupData:&lt;/strong&gt; Clears any SGroup information from the molecule. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;ClearHighlightColors:&lt;/strong&gt; Clears any highlight colors from atoms and bonds. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;ClearAtomLabels:&lt;/strong&gt; Clears any labels assigned to the atoms. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;ClearBondLabels:&lt;/strong&gt; Clears any labels assigned to the bonds. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;NeutralizeBondedZwitterions:&lt;/strong&gt; Converts directly bonded zwitterions (positively charged atom bonded to negatively charged atom, A+B-) to the neutral representation (A=B)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;ClearUnusualValence:&lt;/strong&gt; Clears any atom valence query features and resets all implicit hydrogen counts to their standard values.&lt;/li&gt;&lt;/ul&gt;</sci:value>					<sci:value>Molecule</sci:value>					<sci:value/>					<sci:value>Molecule</sci:value>					<sci:value>Transformed molecules </sci:value>					<sci:value>None</sci:value>					<sci:value/>				</sci:arg>				<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Sticky Notes</sci:help>				</sci:arg>				<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The server version when this component was registered</sci:help>					<sci:value>6.1.0.16</sci:value>				</sci:arg>				<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Runtime Identifier</sci:help>					<sci:value>2</sci:value>				</sci:arg>				<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Location of the component in the database</sci:help>					<sci:value>Components\Chemistry\Manipulators\Standardize Molecule</sci:value>				</sci:arg>			</sci:component>		</sci:data>		<sci:data object="SciTegic.StripSalts.1">			<sci:component name="Strip Salts" version="2">				<sci:arg name="Salt Files" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">					<sci:help/>					<sci:member>Scitegic Salts</sci:member>					<sci:member>User Salts</sci:member>				</sci:arg>				<sci:arg name="Scitegic Salts" type="URLType" required="false" visibility="visible" multi="false">					<sci:help>File that contains the default salt queries</sci:help>					<sci:value>data\Salts\Scitegic\Salts.sd</sci:value>				</sci:arg>				<sci:arg name="User Salts" type="URLType" required="false" visibility="visible" multi="false">					<sci:help>File containing user-defined salt queries</sci:help>				</sci:arg>				<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">					<sci:help>Component Attributes</sci:help>					<sci:legalval selected="true">ComponentTakesInput</sci:legalval>					<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>					<sci:legalval>ComponentReturnsFail</sci:legalval>					<sci:legalval>ComponentRunsLocal</sci:legalval>				</sci:arg>				<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Comment</sci:help>					<sci:value>Evaluates each molecule for the presence of indicated substructure(s). The results are placed onto the property list.</sci:value>				</sci:arg>				<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The component this component is based upon.</sci:help>					<sci:value>Substructure Map</sci:value>				</sci:arg>				<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The user who registered this component.</sci:help>					<sci:value>scitegic/chemistry</sci:value>				</sci:arg>				<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The date this component was registered.</sci:help>					<sci:value>Tue Sep 12 08:26:21 2006</sci:value>				</sci:arg>				<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Usage</sci:help>					<sci:value>Enter one or more queries in the Source parameter.  You will then get outputs as specified by the MapOutput parameter.If atom-to-atom maps are requested, a number of properties are outputfor each query.  If the name of the query is XXX, then the propertyXXX_Maps will contain one or more mappings of the query onto the target. XXX_AllMapped will contain all atoms in all values of XXX_Maps.  Thus, the results from different queries will go into different properties.If SeparateQueryOutputs is requested, then the results from different queries will all go into the same properties: Query_Maps and Query_AllMapped.</sci:value>				</sci:arg>				<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Display Name</sci:help>					<sci:value>Strip Salts</sci:value>				</sci:arg>				<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component RunTimeID</sci:help>					<sci:value>3</sci:value>				</sci:arg>				<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Custom Error Message</sci:help>				</sci:arg>				<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Icon</sci:help>					<sci:value>COMPONENTNODE</sci:value>				</sci:arg>				<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Disabled</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>GUID</sci:help>					<sci:value>{1A8DDD51-D1AE-45d9-823B-80E81B7BCAA6}</sci:value>				</sci:arg>				<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Point</sci:help>					<sci:value>938 -50</sci:value>				</sci:arg>				<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">					<sci:help>Fancy Help</sci:help>					<sci:value>100</sci:value>					<sci:value>Finds and removes salt fragments from the incoming molecules</sci:value>					<sci:value>&lt;p&gt;Salt fragments in the input molecules are identified using supplied salt queries and removed.  The default salt queries are specified by the &lt;i&gt;Scitegic Salts&lt;/i&gt; parameter and are contained in the file data/Salts/Scitegic/Salts.sd.&lt;/p&gt;&lt;p&gt;&lt;i&gt;User Salts&lt;/i&gt; allows users to add their own salt queries by specifying the file or files containing them. Queries can be defined in either mol format (.mol, .sd, .sdf extension) or SMARTS (.sma extension).&lt;/p&gt;&lt;p&gt;When salts are identified and removed, the property &lt;b&gt;RemovedSalts&lt;/b&gt; is defined for the molecule. This array property contains the names of the removed salts. If the same salt fragment was present &lt;i&gt;N&lt;/i&gt; times, its name appears &lt;i&gt;N&lt;/i&gt; times in the array. &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Only molecules consisting of more than one fragment are considered for salt removal.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;To only identify (and not remove) salt fragments, use &lt;a href=&quot;javascript:DoLink(&apos;{65582FDD-27E4-442f-BED7-71A254321894}&apos;)&quot;&gt;Identify Salts&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;</sci:value>					<sci:value>Molecule</sci:value>					<sci:value/>					<sci:value>Molecule</sci:value>					<sci:value>Molecules with salts removed</sci:value>					<sci:value>None</sci:value>					<sci:value/>				</sci:arg>				<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The server version when this component was registered</sci:help>					<sci:value>6.0.0.41</sci:value>				</sci:arg>				<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Sticky Notes</sci:help>				</sci:arg>				<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Location of the component in the database</sci:help>					<sci:value>Components\Chemistry\Manipulators\Strip Salts</sci:value>				</sci:arg>			</sci:component>		</sci:data>		<sci:data object="SciTegic.Protocol.1">			<sci:component name="Subprotocol" version="2">				<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>				</sci:arg>				<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>				</sci:arg>				<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>					<sci:legalval>True</sci:legalval>					<sci:legalval selected="true">False</sci:legalval>				</sci:arg>				<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>&lt;p&gt;When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.&lt;/p&gt;&lt;p&gt;Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.&lt;/p&gt;&lt;p&gt;When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.&lt;/p&gt;&lt;p&gt;For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.&lt;/p&gt;</sci:help>					<sci:member>Parallel Processing Options Batch Size</sci:member>					<sci:member>Parallel Processing Options Server</sci:member>					<sci:member>Parallel Processing Options Preserve Order</sci:member>					<sci:legalval>True</sci:legalval>					<sci:legalval selected="true">False</sci:legalval>				</sci:arg>				<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">					<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>					<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>					<sci:value>25</sci:value>				</sci:arg>				<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">					<sci:help>&lt;p&gt;Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).&lt;/p&gt;&lt;p&gt;Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).&lt;/p&gt;</sci:help>					<sci:member>Parallel Processing Options Server Processes</sci:member>					<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);Parameter() ne &apos;&apos;;</sci:validscript>					<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>				</sci:arg>				<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>					<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/#processes := parameter();expand(&apos;,&apos;, #processes);#servers := parameter(&apos;Parallel Processing Options Server&apos;);expand(&apos;,&apos;, #servers);if (numvalues(#processes) == 0) then	SetInvalidDetails(&apos;This parameter is required.&apos;);else	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);end if;numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>					<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>				</sci:arg>				<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>					<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>					<sci:legalval selected="true">True</sci:legalval>					<sci:legalval>False</sci:legalval>				</sci:arg>				<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">					<sci:help>Component Attributes</sci:help>					<sci:legalval selected="true">ComponentTakesInput</sci:legalval>					<sci:legalval>ComponentReturnsPass</sci:legalval>					<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>					<sci:legalval>ComponentRunsLocal</sci:legalval>				</sci:arg>				<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Comment</sci:help>					<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>				</sci:arg>				<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Usage</sci:help>					<sci:value>When you are creating a pipeline which requires a subprotocol as a component, you can drag this SubProtocol component into the pipeline, open it, and add components into it.</sci:value>				</sci:arg>				<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Display Name</sci:help>					<sci:value>Remove wildcards</sci:value>				</sci:arg>				<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol AutoLayout</sci:help>					<sci:value>1</sci:value>				</sci:arg>				<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol ShowComment</sci:help>					<sci:value>true</sci:value>				</sci:arg>				<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Add Protocol Comment Here</sci:help>					<sci:value>Add Protocol Comment Here</sci:value>				</sci:arg>				<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Disabled</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Custom Error Message</sci:help>				</sci:arg>				<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Icon</sci:help>					<sci:value>SUBPROTOCOLNODE</sci:value>				</sci:arg>				<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Revision</sci:help>					<sci:value>100</sci:value>				</sci:arg>				<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The component this component is based upon.</sci:help>					<sci:value>SubProtocol</sci:value>				</sci:arg>				<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>GUID</sci:help>					<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>				</sci:arg>				<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Point</sci:help>					<sci:value>1238 -50</sci:value>				</sci:arg>				<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>By Ref</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">					<sci:help>Fancy Help</sci:help>					<sci:value>100</sci:value>					<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>					<sci:value>&lt;p&gt;Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. &lt;/p&gt;&lt;p&gt;To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.&lt;/p&gt;</sci:value>					<sci:value>Generic</sci:value>					<sci:value/>					<sci:value>None</sci:value>					<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>					<sci:value>Generic</sci:value>					<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>				</sci:arg>				<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The server version when this component was registered</sci:help>					<sci:value>7.0.0.48</sci:value>				</sci:arg>				<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Sticky Notes</sci:help>				</sci:arg>				<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol Sticky Notes</sci:help>				</sci:arg>				<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol Scale</sci:help>					<sci:value>100</sci:value>				</sci:arg>				<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol Options</sci:help>					<sci:legalval>Make Shortcut by Default</sci:legalval>					<sci:legalval>Owner Access Only</sci:legalval>				</sci:arg>				<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The user who registered this component.</sci:help>					<sci:value>scitegic/generic</sci:value>				</sci:arg>				<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The date this component was registered.</sci:help>					<sci:value>Mon Feb 25 11:10:06 2008</sci:value>				</sci:arg>				<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Runtime Identifier</sci:help>					<sci:value>4</sci:value>				</sci:arg>				<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Location of the component in the database</sci:help>					<sci:value>Components\Generic\Utilities\SubProtocol Utilities\Subprotocol</sci:value>				</sci:arg>			</sci:component>			<sci:protocol>				<sci:data object="SciTegic.CalculateSmiles.1">					<sci:component name="Canonical Smiles" version="2">						<sci:arg name="Output" type="StringType" required="false" visibility="visible" multi="true">							<sci:help>&lt;ul&gt;&lt;li&gt;&lt;b&gt;SMILES&lt;/b&gt; is a non-canonical representation for the molecule. (This is very fast to calculate compared to Canonical_SMILES.)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Canonical_SMILES&lt;/b&gt; is the representation that can be compared for identicality.&lt;/li&gt;&lt;/ul&gt;&lt;i&gt;Output&lt;/i&gt; properties can be calculated &quot;on demand&quot; by simply using their names within a PilotScript expression or as the parameter value to many parameters that require a property name.</sci:help>							<sci:legalval type="StringType" selected="true">Canonical_Smiles</sci:legalval>							<sci:legalval type="StringType">Smiles</sci:legalval>						</sci:arg>						<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">							<sci:help>Component Attributes</sci:help>							<sci:legalval selected="true">ComponentTakesInput</sci:legalval>							<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>							<sci:legalval>ComponentReturnsFail</sci:legalval>							<sci:legalval>ComponentRunsLocal</sci:legalval>						</sci:arg>						<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Comment</sci:help>							<sci:value>Calculates a SMILES representation of the molecular information in a molecular data record. SMILES is a text-based representation for molecular information developed by Daylight.</sci:value>						</sci:arg>						<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The user who registered this component.</sci:help>							<sci:value>scitegic/chemistry</sci:value>						</sci:arg>						<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The date this component was registered.</sci:help>							<sci:value>Wed Jul 21 10:12:26 2004</sci:value>						</sci:arg>						<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Usage</sci:help>							<sci:value>Select either &apos;Smiles&apos; or &apos;Canonical_Smiles&quot; s in the &apos;Output&apos; pulldown list to generate the required string.  The data is augmented with the selected properties.Input             - Molecule data recordsOutput Pass - Molecule data records augmented with selected properties</sci:value>						</sci:arg>						<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Display Name</sci:help>							<sci:value>Canonical Smiles</sci:value>						</sci:arg>						<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The component this component is based upon.</sci:help>							<sci:value>Canonical Smiles</sci:value>						</sci:arg>						<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Custom Error Message</sci:help>						</sci:arg>						<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Icon</sci:help>							<sci:value>CALCULATORNODE</sci:value>						</sci:arg>						<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>GUID</sci:help>							<sci:value>{0C60C40A-5189-42DA-A3C0-4EA44BC27D15}</sci:value>						</sci:arg>						<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Point</sci:help>							<sci:value>88 -50</sci:value>						</sci:arg>						<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Disabled</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Fancy Help</sci:help>							<sci:value>100</sci:value>							<sci:value>Calculates a SMILES or canonical SMILES representation of the input molecule</sci:value>							<sci:value>&lt;p&gt;SMILES is a terse textual representation of molecular data.  Canonical SMILES is a form of SMILES that is independent of how the molecule is drawn and so can be used to compare whether two molecules are identical.&lt;/P&gt;This component can create either or both of two properties:&lt;ul&gt;&lt;li&gt;&lt;b&gt;SMILES&lt;/b&gt; is a non-canonical representation for the molecule. (This is very fast to calculate compared to Canonical_SMILES.)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Canonical_SMILES&lt;/b&gt; is the representation that can be compared for identicality.&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;The canonicalization algorithm is SciTegic&apos;s; while it is derived from the published Daylight algorithm, however, lack of complete documentation of their procedure means that it will not necessarily give identical results. Compare two SMILES for identity only when having both canonicalized by the same method. &lt;/li&gt;&lt;/ul&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;You can create a SMILES string as text under any property name using &lt;a href=&quot;javascript:DoLink(&apos;{0C60C40A-5189-42DA-A3C0-4EA44BFF7D15}&apos;)&quot;&gt;Molecule to SMILES&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;You can convert a SMILES string into a molecule using &lt;a href=&quot;javascript:DoLink(&apos;{AC8262DA-E648-4D24-9CD1-D731A8F53F9D}&apos;)&quot;&gt;Molecule from SMILES&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;For an alternative way of generating a canonical string representation, see &lt;a href=&quot;javascript:DoLink(&apos;{EB62CC30-BC6A-4d5f-8618-3EB9AF611C69}&apos;)&quot;&gt;Molecule to InChI&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;</sci:value>							<sci:value>Molecule</sci:value>							<sci:value/>							<sci:value>Molecule</sci:value>							<sci:value>Records augmented with a text property containing the canonical SMILES or SMILES</sci:value>							<sci:value>None</sci:value>							<sci:value/>						</sci:arg>						<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The server version when this component was registered</sci:help>							<sci:value>4.1.1.200</sci:value>						</sci:arg>						<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Runtime Identifier</sci:help>							<sci:value>4:0</sci:value>						</sci:arg>						<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Location of the component in the database</sci:help>							<sci:value>Components\Chemistry\Calculators\Canonical Smiles</sci:value>						</sci:arg>					</sci:component>					<sci:proplist>						<sci:propval name="Canonical_Smiles|Category">Molecular Formats</sci:propval>						<sci:propval name="Smiles|Category">Molecular Formats</sci:propval>					</sci:proplist>				</sci:data>				<sci:data object="SciTegic.Protocol.1">					<sci:component name="Property Value Threshold Filter" version="2">						<sci:arg name="PropertyName" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Property the filter will be applied to</sci:help>							<sci:value>Canonical_Smiles</sci:value>						</sci:arg>						<sci:arg name="Filter" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Filter oprerator. For example: &gt; means the property value must be greater than the threshold value.</sci:help>							<sci:legalval>=</sci:legalval>							<sci:legalval>&lt;</sci:legalval>							<sci:legalval>&lt;=</sci:legalval>							<sci:legalval>&gt;=</sci:legalval>							<sci:legalval>&gt;</sci:legalval>							<sci:legalval>!=</sci:legalval>							<sci:legalval>LIKE</sci:legalval>							<sci:legalval selected="true">RLIKE</sci:legalval>						</sci:arg>						<sci:arg name="Threshold" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Threshold for the filter. This is a constant value. If FilterAs is set to &apos;Number&apos;, this should be a numeric value. If FilterAs is set to &apos;String&apos;, this should be a string.</sci:help>							<sci:value>\[R\]</sci:value>						</sci:arg>						<sci:arg name="FilterAs" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Filter as a number, a string (case insensitive or sensitive), or a date/time value.</sci:help>							<sci:legalval>Number</sci:legalval>							<sci:legalval>String</sci:legalval>							<sci:legalval selected="true">CaseSensitiveString</sci:legalval>							<sci:legalval>Date</sci:legalval>						</sci:arg>						<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">							<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>						</sci:arg>						<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">							<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.Other properties are created on the global property listand so are accessible from all protocols.</sci:help>							<sci:value>constant, pass, PropertyName, filter</sci:value>						</sci:arg>						<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">							<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>							<sci:legalval>True</sci:legalval>							<sci:legalval selected="true">False</sci:legalval>						</sci:arg>						<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">							<sci:help>Component Attributes</sci:help>							<sci:legalval selected="true">ComponentTakesInput</sci:legalval>							<sci:legalval>ComponentReturnsPass</sci:legalval>							<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>							<sci:legalval>ComponentRunsLocal</sci:legalval>						</sci:arg>						<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Protocol Options</sci:help>							<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>							<sci:legalval>Cant Replace With Copy</sci:legalval>							<sci:legalval>Cant Open</sci:legalval>						</sci:arg>						<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The user who registered this component.</sci:help>							<sci:value>scitegic/generic</sci:value>						</sci:arg>						<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The date this component was registered.</sci:help>							<sci:value>Tue Feb 26 08:42:08 2008</sci:value>						</sci:arg>						<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Comment</sci:help>							<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>						</sci:arg>						<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Usage</sci:help>							<sci:value>When you are creating a pipeline which requires a subprotocol as a component, you can drag this SubProtocol component into the pipeline, open it, and add components into it.</sci:value>						</sci:arg>						<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Display Name</sci:help>							<sci:value>Property Value Threshold Filter</sci:value>						</sci:arg>						<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol AutoLayout</sci:help>							<sci:value>1</sci:value>						</sci:arg>						<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol ShowComment</sci:help>							<sci:value>true</sci:value>						</sci:arg>						<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Add Protocol Comment Here</sci:help>							<sci:value>Add Protocol Comment Here</sci:value>						</sci:arg>						<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Disabled</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Custom Error Message</sci:help>						</sci:arg>						<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Icon</sci:help>							<sci:value>FILTERNODE</sci:value>						</sci:arg>						<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Revision</sci:help>							<sci:value>100</sci:value>						</sci:arg>						<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The component this component is based upon.</sci:help>							<sci:value>SubProtocol</sci:value>						</sci:arg>						<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>GUID</sci:help>							<sci:value>{FB8A6B2F-9419-4063-8B0C-59753AACFBC0}</sci:value>						</sci:arg>						<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Point</sci:help>							<sci:value>363 -50</sci:value>						</sci:arg>						<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Scale</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>By Ref</sci:help>							<sci:value>1</sci:value>						</sci:arg>						<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Fancy Help</sci:help>							<sci:value>100</sci:value>							<sci:value>Passes data records for which a property value matches a specified condition</sci:value>							<sci:value>&lt;p&gt;For each incoming data record, the value of the property specified by &lt;i&gt;PropertyName&lt;/i&gt; is compared to &lt;i&gt;Threshold&lt;/i&gt;. If the comparison evaluates to True using the operator specified by &lt;i&gt;Filter&lt;/i&gt;, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;&lt;b&gt;Examples:&lt;/b&gt; Filtering the Asinex library:&lt;ul&gt; &lt;li&gt;  &lt;p&gt;&lt;i&gt;PropertyName&lt;/i&gt;: &apos;IDNumber&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Filter&lt;/i&gt;: &apos;&gt;&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Threshold&lt;/i&gt;: &apos;BAS 00008&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;FilterAs&lt;/i&gt;: &apos;String&apos;&lt;/p&gt;  &lt;/li&gt; &lt;li&gt;  &lt;p&gt;&lt;i&gt;PropertyName&lt;/i&gt;: &apos;cl_size&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Filter&lt;/i&gt;: &apos;=&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Threshold&lt;/i&gt;: &apos;20&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;FilterAs&lt;/i&gt;: &apos;Number&apos;&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; </sci:value>							<sci:value>Generic</sci:value>							<sci:value/>							<sci:value>Generic</sci:value>							<sci:value>Data records for which the property meets the given threshold</sci:value>							<sci:value>Generic</sci:value>							<sci:value>Data records for which the property does not meet the given threshold</sci:value>						</sci:arg>						<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The server version when this component was registered</sci:help>							<sci:value>7.0.0.48</sci:value>						</sci:arg>						<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Runtime Identifier</sci:help>							<sci:value>4:1</sci:value>						</sci:arg>						<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Scale</sci:help>							<sci:value>100</sci:value>						</sci:arg>						<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Subprotocol Made Link Into Copy</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Subprotocol Modified</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Location of the component in the database</sci:help>							<sci:value>Components\Generic\Filters\Property Value Threshold Filter</sci:value>						</sci:arg>					</sci:component>					<sci:protocol/>				</sci:data>				<sci:data object="SciTegic.Protocol.1">					<sci:component name="Property Value Threshold Filter" version="2">						<sci:arg name="PropertyName" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Property the filter will be applied to</sci:help>							<sci:value>Canonical_Smiles</sci:value>						</sci:arg>						<sci:arg name="Filter" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Filter oprerator. For example: &gt; means the property value must be greater than the threshold value.</sci:help>							<sci:legalval>=</sci:legalval>							<sci:legalval>&lt;</sci:legalval>							<sci:legalval>&lt;=</sci:legalval>							<sci:legalval>&gt;=</sci:legalval>							<sci:legalval>&gt;</sci:legalval>							<sci:legalval>!=</sci:legalval>							<sci:legalval>LIKE</sci:legalval>							<sci:legalval selected="true">RLIKE</sci:legalval>						</sci:arg>						<sci:arg name="Threshold" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Threshold for the filter. This is a constant value. If FilterAs is set to &apos;Number&apos;, this should be a numeric value. If FilterAs is set to &apos;String&apos;, this should be a string.</sci:help>							<sci:value>\*</sci:value>						</sci:arg>						<sci:arg name="FilterAs" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Filter as a number, a string (case insensitive or sensitive), or a date/time value.</sci:help>							<sci:legalval>Number</sci:legalval>							<sci:legalval>String</sci:legalval>							<sci:legalval selected="true">CaseSensitiveString</sci:legalval>							<sci:legalval>Date</sci:legalval>						</sci:arg>						<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">							<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>						</sci:arg>						<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">							<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.Other properties are created on the global property listand so are accessible from all protocols.</sci:help>							<sci:value>constant, pass, PropertyName, filter</sci:value>						</sci:arg>						<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">							<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>							<sci:legalval>True</sci:legalval>							<sci:legalval selected="true">False</sci:legalval>						</sci:arg>						<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">							<sci:help>Component Attributes</sci:help>							<sci:legalval selected="true">ComponentTakesInput</sci:legalval>							<sci:legalval>ComponentReturnsPass</sci:legalval>							<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>							<sci:legalval>ComponentRunsLocal</sci:legalval>						</sci:arg>						<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Protocol Options</sci:help>							<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>							<sci:legalval>Cant Replace With Copy</sci:legalval>							<sci:legalval>Cant Open</sci:legalval>						</sci:arg>						<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The user who registered this component.</sci:help>							<sci:value>scitegic/generic</sci:value>						</sci:arg>						<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The date this component was registered.</sci:help>							<sci:value>Tue Feb 26 08:42:08 2008</sci:value>						</sci:arg>						<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Comment</sci:help>							<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>						</sci:arg>						<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Usage</sci:help>							<sci:value>When you are creating a pipeline which requires a subprotocol as a component, you can drag this SubProtocol component into the pipeline, open it, and add components into it.</sci:value>						</sci:arg>						<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Display Name</sci:help>							<sci:value>Property Value Threshold Filter</sci:value>						</sci:arg>						<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol AutoLayout</sci:help>							<sci:value>1</sci:value>						</sci:arg>						<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol ShowComment</sci:help>							<sci:value>true</sci:value>						</sci:arg>						<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Add Protocol Comment Here</sci:help>							<sci:value>Add Protocol Comment Here</sci:value>						</sci:arg>						<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Disabled</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Custom Error Message</sci:help>						</sci:arg>						<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Icon</sci:help>							<sci:value>FILTERNODE</sci:value>						</sci:arg>						<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Revision</sci:help>							<sci:value>100</sci:value>						</sci:arg>						<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The component this component is based upon.</sci:help>							<sci:value>SubProtocol</sci:value>						</sci:arg>						<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>GUID</sci:help>							<sci:value>{FB8A6B2F-9419-4063-8B0C-59753AACFBC0}</sci:value>						</sci:arg>						<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Point</sci:help>							<sci:value>663 -50</sci:value>						</sci:arg>						<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Scale</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>By Ref</sci:help>							<sci:value>1</sci:value>						</sci:arg>						<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Fancy Help</sci:help>							<sci:value>100</sci:value>							<sci:value>Passes data records for which a property value matches a specified condition</sci:value>							<sci:value>&lt;p&gt;For each incoming data record, the value of the property specified by &lt;i&gt;PropertyName&lt;/i&gt; is compared to &lt;i&gt;Threshold&lt;/i&gt;. If the comparison evaluates to True using the operator specified by &lt;i&gt;Filter&lt;/i&gt;, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;&lt;b&gt;Examples:&lt;/b&gt; Filtering the Asinex library:&lt;ul&gt; &lt;li&gt;  &lt;p&gt;&lt;i&gt;PropertyName&lt;/i&gt;: &apos;IDNumber&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Filter&lt;/i&gt;: &apos;&gt;&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Threshold&lt;/i&gt;: &apos;BAS 00008&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;FilterAs&lt;/i&gt;: &apos;String&apos;&lt;/p&gt;  &lt;/li&gt; &lt;li&gt;  &lt;p&gt;&lt;i&gt;PropertyName&lt;/i&gt;: &apos;cl_size&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Filter&lt;/i&gt;: &apos;=&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Threshold&lt;/i&gt;: &apos;20&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;FilterAs&lt;/i&gt;: &apos;Number&apos;&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; </sci:value>							<sci:value>Generic</sci:value>							<sci:value/>							<sci:value>Generic</sci:value>							<sci:value>Data records for which the property meets the given threshold</sci:value>							<sci:value>Generic</sci:value>							<sci:value>Data records for which the property does not meet the given threshold</sci:value>						</sci:arg>						<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The server version when this component was registered</sci:help>							<sci:value>7.0.0.48</sci:value>						</sci:arg>						<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Runtime Identifier</sci:help>							<sci:value>4:2</sci:value>						</sci:arg>						<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Scale</sci:help>							<sci:value>100</sci:value>						</sci:arg>						<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Subprotocol Made Link Into Copy</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Subprotocol Modified</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Location of the component in the database</sci:help>							<sci:value>Components\Generic\Filters\Property Value Threshold Filter</sci:value>						</sci:arg>					</sci:component>					<sci:protocol/>				</sci:data>				<sci:data object="SciTegic.Protocol.1">					<sci:component name="Property Value Threshold Filter" version="2">						<sci:arg name="PropertyName" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Property the filter will be applied to</sci:help>							<sci:value>Canonical_Smiles</sci:value>						</sci:arg>						<sci:arg name="Filter" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Filter oprerator. For example: &gt; means the property value must be greater than the threshold value.</sci:help>							<sci:legalval>=</sci:legalval>							<sci:legalval>&lt;</sci:legalval>							<sci:legalval>&lt;=</sci:legalval>							<sci:legalval>&gt;=</sci:legalval>							<sci:legalval>&gt;</sci:legalval>							<sci:legalval>!=</sci:legalval>							<sci:legalval>LIKE</sci:legalval>							<sci:legalval selected="true">RLIKE</sci:legalval>						</sci:arg>						<sci:arg name="Threshold" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Threshold for the filter. This is a constant value. If FilterAs is set to &apos;Number&apos;, this should be a numeric value. If FilterAs is set to &apos;String&apos;, this should be a string.</sci:help>							<sci:value>X\]</sci:value>						</sci:arg>						<sci:arg name="FilterAs" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Filter as a number, a string (case insensitive or sensitive), or a date/time value.</sci:help>							<sci:legalval>Number</sci:legalval>							<sci:legalval>String</sci:legalval>							<sci:legalval selected="true">CaseSensitiveString</sci:legalval>							<sci:legalval>Date</sci:legalval>						</sci:arg>						<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">							<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>						</sci:arg>						<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">							<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.Other properties are created on the global property listand so are accessible from all protocols.</sci:help>							<sci:value>constant, pass, PropertyName, filter</sci:value>						</sci:arg>						<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">							<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>							<sci:legalval>True</sci:legalval>							<sci:legalval selected="true">False</sci:legalval>						</sci:arg>						<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">							<sci:help>Component Attributes</sci:help>							<sci:legalval selected="true">ComponentTakesInput</sci:legalval>							<sci:legalval>ComponentReturnsPass</sci:legalval>							<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>							<sci:legalval>ComponentRunsLocal</sci:legalval>						</sci:arg>						<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Protocol Options</sci:help>							<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>							<sci:legalval>Cant Replace With Copy</sci:legalval>							<sci:legalval>Cant Open</sci:legalval>						</sci:arg>						<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The user who registered this component.</sci:help>							<sci:value>scitegic/generic</sci:value>						</sci:arg>						<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The date this component was registered.</sci:help>							<sci:value>Tue Feb 26 08:42:08 2008</sci:value>						</sci:arg>						<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Comment</sci:help>							<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>						</sci:arg>						<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Usage</sci:help>							<sci:value>When you are creating a pipeline which requires a subprotocol as a component, you can drag this SubProtocol component into the pipeline, open it, and add components into it.</sci:value>						</sci:arg>						<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Display Name</sci:help>							<sci:value>Property Value Threshold Filter</sci:value>						</sci:arg>						<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol AutoLayout</sci:help>							<sci:value>1</sci:value>						</sci:arg>						<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol ShowComment</sci:help>							<sci:value>true</sci:value>						</sci:arg>						<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Add Protocol Comment Here</sci:help>							<sci:value>Add Protocol Comment Here</sci:value>						</sci:arg>						<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Disabled</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Custom Error Message</sci:help>						</sci:arg>						<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Icon</sci:help>							<sci:value>FILTERNODE</sci:value>						</sci:arg>						<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Revision</sci:help>							<sci:value>100</sci:value>						</sci:arg>						<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The component this component is based upon.</sci:help>							<sci:value>SubProtocol</sci:value>						</sci:arg>						<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>GUID</sci:help>							<sci:value>{FB8A6B2F-9419-4063-8B0C-59753AACFBC0}</sci:value>						</sci:arg>						<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Point</sci:help>							<sci:value>938 -50</sci:value>						</sci:arg>						<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Scale</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>By Ref</sci:help>							<sci:value>1</sci:value>						</sci:arg>						<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Fancy Help</sci:help>							<sci:value>100</sci:value>							<sci:value>Passes data records for which a property value matches a specified condition</sci:value>							<sci:value>&lt;p&gt;For each incoming data record, the value of the property specified by &lt;i&gt;PropertyName&lt;/i&gt; is compared to &lt;i&gt;Threshold&lt;/i&gt;. If the comparison evaluates to True using the operator specified by &lt;i&gt;Filter&lt;/i&gt;, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;&lt;b&gt;Examples:&lt;/b&gt; Filtering the Asinex library:&lt;ul&gt; &lt;li&gt;  &lt;p&gt;&lt;i&gt;PropertyName&lt;/i&gt;: &apos;IDNumber&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Filter&lt;/i&gt;: &apos;&gt;&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Threshold&lt;/i&gt;: &apos;BAS 00008&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;FilterAs&lt;/i&gt;: &apos;String&apos;&lt;/p&gt;  &lt;/li&gt; &lt;li&gt;  &lt;p&gt;&lt;i&gt;PropertyName&lt;/i&gt;: &apos;cl_size&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Filter&lt;/i&gt;: &apos;=&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Threshold&lt;/i&gt;: &apos;20&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;FilterAs&lt;/i&gt;: &apos;Number&apos;&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; </sci:value>							<sci:value>Generic</sci:value>							<sci:value/>							<sci:value>Generic</sci:value>							<sci:value>Data records for which the property meets the given threshold</sci:value>							<sci:value>Generic</sci:value>							<sci:value>Data records for which the property does not meet the given threshold</sci:value>						</sci:arg>						<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The server version when this component was registered</sci:help>							<sci:value>7.0.0.48</sci:value>						</sci:arg>						<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Runtime Identifier</sci:help>							<sci:value>4:3</sci:value>						</sci:arg>						<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Scale</sci:help>							<sci:value>100</sci:value>						</sci:arg>						<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Subprotocol Made Link Into Copy</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Subprotocol Modified</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Location of the component in the database</sci:help>							<sci:value>Components\Generic\Filters\Property Value Threshold Filter</sci:value>						</sci:arg>					</sci:component>					<sci:protocol/>				</sci:data>				<sci:data object="SciTegic.Protocol.1">					<sci:component name="Property Value Threshold Filter" version="2">						<sci:arg name="PropertyName" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Property the filter will be applied to</sci:help>							<sci:value>Canonical_Smiles</sci:value>						</sci:arg>						<sci:arg name="Filter" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Filter oprerator. For example: &gt; means the property value must be greater than the threshold value.</sci:help>							<sci:legalval>=</sci:legalval>							<sci:legalval>&lt;</sci:legalval>							<sci:legalval>&lt;=</sci:legalval>							<sci:legalval>&gt;=</sci:legalval>							<sci:legalval>&gt;</sci:legalval>							<sci:legalval>!=</sci:legalval>							<sci:legalval>LIKE</sci:legalval>							<sci:legalval selected="true">RLIKE</sci:legalval>						</sci:arg>						<sci:arg name="Threshold" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Threshold for the filter. This is a constant value. If FilterAs is set to &apos;Number&apos;, this should be a numeric value. If FilterAs is set to &apos;String&apos;, this should be a string.</sci:help>							<sci:value>Z\]</sci:value>						</sci:arg>						<sci:arg name="FilterAs" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Filter as a number, a string (case insensitive or sensitive), or a date/time value.</sci:help>							<sci:legalval>Number</sci:legalval>							<sci:legalval>String</sci:legalval>							<sci:legalval selected="true">CaseSensitiveString</sci:legalval>							<sci:legalval>Date</sci:legalval>						</sci:arg>						<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">							<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>						</sci:arg>						<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">							<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.Other properties are created on the global property listand so are accessible from all protocols.</sci:help>							<sci:value>constant, pass, PropertyName, filter</sci:value>						</sci:arg>						<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">							<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>							<sci:legalval>True</sci:legalval>							<sci:legalval selected="true">False</sci:legalval>						</sci:arg>						<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">							<sci:help>Component Attributes</sci:help>							<sci:legalval selected="true">ComponentTakesInput</sci:legalval>							<sci:legalval>ComponentReturnsPass</sci:legalval>							<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>							<sci:legalval>ComponentRunsLocal</sci:legalval>						</sci:arg>						<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Protocol Options</sci:help>							<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>							<sci:legalval>Cant Replace With Copy</sci:legalval>							<sci:legalval>Cant Open</sci:legalval>						</sci:arg>						<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The user who registered this component.</sci:help>							<sci:value>scitegic/generic</sci:value>						</sci:arg>						<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The date this component was registered.</sci:help>							<sci:value>Tue Feb 26 08:42:08 2008</sci:value>						</sci:arg>						<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Comment</sci:help>							<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>						</sci:arg>						<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Usage</sci:help>							<sci:value>When you are creating a pipeline which requires a subprotocol as a component, you can drag this SubProtocol component into the pipeline, open it, and add components into it.</sci:value>						</sci:arg>						<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Display Name</sci:help>							<sci:value>Property Value Threshold Filter</sci:value>						</sci:arg>						<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol AutoLayout</sci:help>							<sci:value>1</sci:value>						</sci:arg>						<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol ShowComment</sci:help>							<sci:value>true</sci:value>						</sci:arg>						<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Add Protocol Comment Here</sci:help>							<sci:value>Add Protocol Comment Here</sci:value>						</sci:arg>						<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Disabled</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Custom Error Message</sci:help>						</sci:arg>						<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Icon</sci:help>							<sci:value>FILTERNODE</sci:value>						</sci:arg>						<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Revision</sci:help>							<sci:value>100</sci:value>						</sci:arg>						<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The component this component is based upon.</sci:help>							<sci:value>SubProtocol</sci:value>						</sci:arg>						<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>GUID</sci:help>							<sci:value>{FB8A6B2F-9419-4063-8B0C-59753AACFBC0}</sci:value>						</sci:arg>						<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Point</sci:help>							<sci:value>1238 -50</sci:value>						</sci:arg>						<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Scale</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>By Ref</sci:help>							<sci:value>1</sci:value>						</sci:arg>						<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Fancy Help</sci:help>							<sci:value>100</sci:value>							<sci:value>Passes data records for which a property value matches a specified condition</sci:value>							<sci:value>&lt;p&gt;For each incoming data record, the value of the property specified by &lt;i&gt;PropertyName&lt;/i&gt; is compared to &lt;i&gt;Threshold&lt;/i&gt;. If the comparison evaluates to True using the operator specified by &lt;i&gt;Filter&lt;/i&gt;, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;&lt;b&gt;Examples:&lt;/b&gt; Filtering the Asinex library:&lt;ul&gt; &lt;li&gt;  &lt;p&gt;&lt;i&gt;PropertyName&lt;/i&gt;: &apos;IDNumber&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Filter&lt;/i&gt;: &apos;&gt;&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Threshold&lt;/i&gt;: &apos;BAS 00008&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;FilterAs&lt;/i&gt;: &apos;String&apos;&lt;/p&gt;  &lt;/li&gt; &lt;li&gt;  &lt;p&gt;&lt;i&gt;PropertyName&lt;/i&gt;: &apos;cl_size&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Filter&lt;/i&gt;: &apos;=&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Threshold&lt;/i&gt;: &apos;20&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;FilterAs&lt;/i&gt;: &apos;Number&apos;&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; </sci:value>							<sci:value>Generic</sci:value>							<sci:value/>							<sci:value>Generic</sci:value>							<sci:value>Data records for which the property meets the given threshold</sci:value>							<sci:value>Generic</sci:value>							<sci:value>Data records for which the property does not meet the given threshold</sci:value>						</sci:arg>						<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The server version when this component was registered</sci:help>							<sci:value>7.0.0.48</sci:value>						</sci:arg>						<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Runtime Identifier</sci:help>							<sci:value>4:4</sci:value>						</sci:arg>						<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Scale</sci:help>							<sci:value>100</sci:value>						</sci:arg>						<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Subprotocol Made Link Into Copy</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Subprotocol Modified</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Location of the component in the database</sci:help>							<sci:value>Components\Generic\Filters\Property Value Threshold Filter</sci:value>						</sci:arg>					</sci:component>					<sci:protocol/>				</sci:data>				<sci:data object="SciTegic.Protocol.1">					<sci:component name="Property Value Threshold Filter" version="2">						<sci:arg name="PropertyName" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Property the filter will be applied to</sci:help>							<sci:value>Canonical_Smiles</sci:value>						</sci:arg>						<sci:arg name="Filter" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Filter oprerator. For example: &gt; means the property value must be greater than the threshold value.</sci:help>							<sci:legalval>=</sci:legalval>							<sci:legalval>&lt;</sci:legalval>							<sci:legalval>&lt;=</sci:legalval>							<sci:legalval>&gt;=</sci:legalval>							<sci:legalval>&gt;</sci:legalval>							<sci:legalval>!=</sci:legalval>							<sci:legalval>LIKE</sci:legalval>							<sci:legalval selected="true">RLIKE</sci:legalval>						</sci:arg>						<sci:arg name="Threshold" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Threshold for the filter. This is a constant value. If FilterAs is set to &apos;Number&apos;, this should be a numeric value. If FilterAs is set to &apos;String&apos;, this should be a string.</sci:help>							<sci:value>\[R\d\]</sci:value>						</sci:arg>						<sci:arg name="FilterAs" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Filter as a number, a string (case insensitive or sensitive), or a date/time value.</sci:help>							<sci:legalval>Number</sci:legalval>							<sci:legalval>String</sci:legalval>							<sci:legalval selected="true">CaseSensitiveString</sci:legalval>							<sci:legalval>Date</sci:legalval>						</sci:arg>						<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">							<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>						</sci:arg>						<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">							<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.Other properties are created on the global property listand so are accessible from all protocols.</sci:help>							<sci:value>constant, pass, PropertyName, filter</sci:value>						</sci:arg>						<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">							<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>							<sci:legalval>True</sci:legalval>							<sci:legalval selected="true">False</sci:legalval>						</sci:arg>						<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">							<sci:help>Component Attributes</sci:help>							<sci:legalval selected="true">ComponentTakesInput</sci:legalval>							<sci:legalval>ComponentReturnsPass</sci:legalval>							<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>							<sci:legalval>ComponentRunsLocal</sci:legalval>						</sci:arg>						<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Protocol Options</sci:help>							<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>							<sci:legalval>Cant Replace With Copy</sci:legalval>							<sci:legalval>Cant Open</sci:legalval>						</sci:arg>						<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The user who registered this component.</sci:help>							<sci:value>scitegic/generic</sci:value>						</sci:arg>						<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The date this component was registered.</sci:help>							<sci:value>Tue Feb 26 08:42:08 2008</sci:value>						</sci:arg>						<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Comment</sci:help>							<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>						</sci:arg>						<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Usage</sci:help>							<sci:value>When you are creating a pipeline which requires a subprotocol as a component, you can drag this SubProtocol component into the pipeline, open it, and add components into it.</sci:value>						</sci:arg>						<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Display Name</sci:help>							<sci:value>Property Value Threshold Filter</sci:value>						</sci:arg>						<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol AutoLayout</sci:help>							<sci:value>1</sci:value>						</sci:arg>						<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol ShowComment</sci:help>							<sci:value>true</sci:value>						</sci:arg>						<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Add Protocol Comment Here</sci:help>							<sci:value>Add Protocol Comment Here</sci:value>						</sci:arg>						<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Disabled</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Custom Error Message</sci:help>						</sci:arg>						<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Icon</sci:help>							<sci:value>FILTERNODE</sci:value>						</sci:arg>						<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Revision</sci:help>							<sci:value>100</sci:value>						</sci:arg>						<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The component this component is based upon.</sci:help>							<sci:value>SubProtocol</sci:value>						</sci:arg>						<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>GUID</sci:help>							<sci:value>{FB8A6B2F-9419-4063-8B0C-59753AACFBC0}</sci:value>						</sci:arg>						<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Point</sci:help>							<sci:value>1538 -50</sci:value>						</sci:arg>						<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Scale</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>By Ref</sci:help>							<sci:value>1</sci:value>						</sci:arg>						<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Fancy Help</sci:help>							<sci:value>100</sci:value>							<sci:value>Passes data records for which a property value matches a specified condition</sci:value>							<sci:value>&lt;p&gt;For each incoming data record, the value of the property specified by &lt;i&gt;PropertyName&lt;/i&gt; is compared to &lt;i&gt;Threshold&lt;/i&gt;. If the comparison evaluates to True using the operator specified by &lt;i&gt;Filter&lt;/i&gt;, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;&lt;b&gt;Examples:&lt;/b&gt; Filtering the Asinex library:&lt;ul&gt; &lt;li&gt;  &lt;p&gt;&lt;i&gt;PropertyName&lt;/i&gt;: &apos;IDNumber&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Filter&lt;/i&gt;: &apos;&gt;&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Threshold&lt;/i&gt;: &apos;BAS 00008&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;FilterAs&lt;/i&gt;: &apos;String&apos;&lt;/p&gt;  &lt;/li&gt; &lt;li&gt;  &lt;p&gt;&lt;i&gt;PropertyName&lt;/i&gt;: &apos;cl_size&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Filter&lt;/i&gt;: &apos;=&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Threshold&lt;/i&gt;: &apos;20&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;FilterAs&lt;/i&gt;: &apos;Number&apos;&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; </sci:value>							<sci:value>Generic</sci:value>							<sci:value/>							<sci:value>Generic</sci:value>							<sci:value>Data records for which the property meets the given threshold</sci:value>							<sci:value>Generic</sci:value>							<sci:value>Data records for which the property does not meet the given threshold</sci:value>						</sci:arg>						<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The server version when this component was registered</sci:help>							<sci:value>7.0.0.48</sci:value>						</sci:arg>						<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Runtime Identifier</sci:help>							<sci:value>4:5</sci:value>						</sci:arg>						<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Scale</sci:help>							<sci:value>100</sci:value>						</sci:arg>						<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Subprotocol Made Link Into Copy</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Subprotocol Modified</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Location of the component in the database</sci:help>							<sci:value>Components\Generic\Filters\Property Value Threshold Filter</sci:value>						</sci:arg>					</sci:component>					<sci:protocol/>				</sci:data>				<sci:data object="SciTegic.Protocol.1">					<sci:component name="Property Value Threshold Filter" version="2">						<sci:arg name="PropertyName" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Property the filter will be applied to</sci:help>							<sci:value>Canonical_Smiles</sci:value>						</sci:arg>						<sci:arg name="Filter" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Filter oprerator. For example: &gt; means the property value must be greater than the threshold value.</sci:help>							<sci:legalval>=</sci:legalval>							<sci:legalval>&lt;</sci:legalval>							<sci:legalval>&lt;=</sci:legalval>							<sci:legalval>&gt;=</sci:legalval>							<sci:legalval>&gt;</sci:legalval>							<sci:legalval>!=</sci:legalval>							<sci:legalval>LIKE</sci:legalval>							<sci:legalval selected="true">RLIKE</sci:legalval>						</sci:arg>						<sci:arg name="Threshold" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Threshold for the filter. This is a constant value. If FilterAs is set to &apos;Number&apos;, this should be a numeric value. If FilterAs is set to &apos;String&apos;, this should be a string.</sci:help>							<sci:value>\[RH\]</sci:value>						</sci:arg>						<sci:arg name="FilterAs" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Filter as a number, a string (case insensitive or sensitive), or a date/time value.</sci:help>							<sci:legalval>Number</sci:legalval>							<sci:legalval>String</sci:legalval>							<sci:legalval selected="true">CaseSensitiveString</sci:legalval>							<sci:legalval>Date</sci:legalval>						</sci:arg>						<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">							<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>						</sci:arg>						<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">							<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.Other properties are created on the global property listand so are accessible from all protocols.</sci:help>							<sci:value>constant, pass, PropertyName, filter</sci:value>						</sci:arg>						<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">							<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>							<sci:legalval>True</sci:legalval>							<sci:legalval selected="true">False</sci:legalval>						</sci:arg>						<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">							<sci:help>Component Attributes</sci:help>							<sci:legalval selected="true">ComponentTakesInput</sci:legalval>							<sci:legalval>ComponentReturnsPass</sci:legalval>							<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>							<sci:legalval>ComponentRunsLocal</sci:legalval>						</sci:arg>						<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Protocol Options</sci:help>							<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>							<sci:legalval>Cant Replace With Copy</sci:legalval>							<sci:legalval>Cant Open</sci:legalval>						</sci:arg>						<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The user who registered this component.</sci:help>							<sci:value>scitegic/generic</sci:value>						</sci:arg>						<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The date this component was registered.</sci:help>							<sci:value>Tue Feb 26 08:42:08 2008</sci:value>						</sci:arg>						<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Comment</sci:help>							<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>						</sci:arg>						<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Usage</sci:help>							<sci:value>When you are creating a pipeline which requires a subprotocol as a component, you can drag this SubProtocol component into the pipeline, open it, and add components into it.</sci:value>						</sci:arg>						<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Display Name</sci:help>							<sci:value>Property Value Threshold Filter</sci:value>						</sci:arg>						<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol AutoLayout</sci:help>							<sci:value>1</sci:value>						</sci:arg>						<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol ShowComment</sci:help>							<sci:value>true</sci:value>						</sci:arg>						<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Add Protocol Comment Here</sci:help>							<sci:value>Add Protocol Comment Here</sci:value>						</sci:arg>						<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Disabled</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Custom Error Message</sci:help>						</sci:arg>						<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Icon</sci:help>							<sci:value>FILTERNODE</sci:value>						</sci:arg>						<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Revision</sci:help>							<sci:value>100</sci:value>						</sci:arg>						<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The component this component is based upon.</sci:help>							<sci:value>SubProtocol</sci:value>						</sci:arg>						<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>GUID</sci:help>							<sci:value>{FB8A6B2F-9419-4063-8B0C-59753AACFBC0}</sci:value>						</sci:arg>						<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Point</sci:help>							<sci:value>1813 -50</sci:value>						</sci:arg>						<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Scale</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>By Ref</sci:help>							<sci:value>1</sci:value>						</sci:arg>						<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Fancy Help</sci:help>							<sci:value>100</sci:value>							<sci:value>Passes data records for which a property value matches a specified condition</sci:value>							<sci:value>&lt;p&gt;For each incoming data record, the value of the property specified by &lt;i&gt;PropertyName&lt;/i&gt; is compared to &lt;i&gt;Threshold&lt;/i&gt;. If the comparison evaluates to True using the operator specified by &lt;i&gt;Filter&lt;/i&gt;, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;&lt;b&gt;Examples:&lt;/b&gt; Filtering the Asinex library:&lt;ul&gt; &lt;li&gt;  &lt;p&gt;&lt;i&gt;PropertyName&lt;/i&gt;: &apos;IDNumber&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Filter&lt;/i&gt;: &apos;&gt;&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Threshold&lt;/i&gt;: &apos;BAS 00008&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;FilterAs&lt;/i&gt;: &apos;String&apos;&lt;/p&gt;  &lt;/li&gt; &lt;li&gt;  &lt;p&gt;&lt;i&gt;PropertyName&lt;/i&gt;: &apos;cl_size&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Filter&lt;/i&gt;: &apos;=&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Threshold&lt;/i&gt;: &apos;20&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;FilterAs&lt;/i&gt;: &apos;Number&apos;&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; </sci:value>							<sci:value>Generic</sci:value>							<sci:value/>							<sci:value>Generic</sci:value>							<sci:value>Data records for which the property meets the given threshold</sci:value>							<sci:value>Generic</sci:value>							<sci:value>Data records for which the property does not meet the given threshold</sci:value>						</sci:arg>						<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The server version when this component was registered</sci:help>							<sci:value>7.0.0.48</sci:value>						</sci:arg>						<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Runtime Identifier</sci:help>							<sci:value>4:6</sci:value>						</sci:arg>						<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Scale</sci:help>							<sci:value>100</sci:value>						</sci:arg>						<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Subprotocol Made Link Into Copy</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Subprotocol Modified</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Location of the component in the database</sci:help>							<sci:value>Components\Generic\Filters\Property Value Threshold Filter</sci:value>						</sci:arg>					</sci:component>					<sci:protocol/>				</sci:data>				<sci:data object="SciTegic.Protocol.1">					<sci:component name="Property Value Threshold Filter" version="2">						<sci:arg name="PropertyName" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Property the filter will be applied to</sci:help>							<sci:value>Canonical_Smiles</sci:value>						</sci:arg>						<sci:arg name="Filter" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Filter oprerator. For example: &gt; means the property value must be greater than the threshold value.</sci:help>							<sci:legalval>=</sci:legalval>							<sci:legalval>&lt;</sci:legalval>							<sci:legalval>&lt;=</sci:legalval>							<sci:legalval>&gt;=</sci:legalval>							<sci:legalval>&gt;</sci:legalval>							<sci:legalval>!=</sci:legalval>							<sci:legalval>LIKE</sci:legalval>							<sci:legalval selected="true">RLIKE</sci:legalval>						</sci:arg>						<sci:arg name="Threshold" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Threshold for the filter. This is a constant value. If FilterAs is set to &apos;Number&apos;, this should be a numeric value. If FilterAs is set to &apos;String&apos;, this should be a string.</sci:help>							<sci:value>\[A\]</sci:value>						</sci:arg>						<sci:arg name="FilterAs" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Filter as a number, a string (case insensitive or sensitive), or a date/time value.</sci:help>							<sci:legalval>Number</sci:legalval>							<sci:legalval>String</sci:legalval>							<sci:legalval selected="true">CaseSensitiveString</sci:legalval>							<sci:legalval>Date</sci:legalval>						</sci:arg>						<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">							<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>						</sci:arg>						<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">							<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.Other properties are created on the global property listand so are accessible from all protocols.</sci:help>							<sci:value>constant, pass, PropertyName, filter</sci:value>						</sci:arg>						<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">							<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>							<sci:legalval>True</sci:legalval>							<sci:legalval selected="true">False</sci:legalval>						</sci:arg>						<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">							<sci:help>Component Attributes</sci:help>							<sci:legalval selected="true">ComponentTakesInput</sci:legalval>							<sci:legalval>ComponentReturnsPass</sci:legalval>							<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>							<sci:legalval>ComponentRunsLocal</sci:legalval>						</sci:arg>						<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Protocol Options</sci:help>							<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>							<sci:legalval>Cant Replace With Copy</sci:legalval>							<sci:legalval>Cant Open</sci:legalval>						</sci:arg>						<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The user who registered this component.</sci:help>							<sci:value>scitegic/generic</sci:value>						</sci:arg>						<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The date this component was registered.</sci:help>							<sci:value>Tue Feb 26 08:42:08 2008</sci:value>						</sci:arg>						<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Comment</sci:help>							<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>						</sci:arg>						<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Usage</sci:help>							<sci:value>When you are creating a pipeline which requires a subprotocol as a component, you can drag this SubProtocol component into the pipeline, open it, and add components into it.</sci:value>						</sci:arg>						<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Display Name</sci:help>							<sci:value>Property Value Threshold Filter</sci:value>						</sci:arg>						<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol AutoLayout</sci:help>							<sci:value>1</sci:value>						</sci:arg>						<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol ShowComment</sci:help>							<sci:value>true</sci:value>						</sci:arg>						<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Add Protocol Comment Here</sci:help>							<sci:value>Add Protocol Comment Here</sci:value>						</sci:arg>						<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Disabled</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Custom Error Message</sci:help>						</sci:arg>						<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Icon</sci:help>							<sci:value>FILTERNODE</sci:value>						</sci:arg>						<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Revision</sci:help>							<sci:value>100</sci:value>						</sci:arg>						<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The component this component is based upon.</sci:help>							<sci:value>SubProtocol</sci:value>						</sci:arg>						<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>GUID</sci:help>							<sci:value>{FB8A6B2F-9419-4063-8B0C-59753AACFBC0}</sci:value>						</sci:arg>						<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Point</sci:help>							<sci:value>2113 -50</sci:value>						</sci:arg>						<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Scale</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>By Ref</sci:help>							<sci:value>1</sci:value>						</sci:arg>						<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Fancy Help</sci:help>							<sci:value>100</sci:value>							<sci:value>Passes data records for which a property value matches a specified condition</sci:value>							<sci:value>&lt;p&gt;For each incoming data record, the value of the property specified by &lt;i&gt;PropertyName&lt;/i&gt; is compared to &lt;i&gt;Threshold&lt;/i&gt;. If the comparison evaluates to True using the operator specified by &lt;i&gt;Filter&lt;/i&gt;, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;&lt;b&gt;Examples:&lt;/b&gt; Filtering the Asinex library:&lt;ul&gt; &lt;li&gt;  &lt;p&gt;&lt;i&gt;PropertyName&lt;/i&gt;: &apos;IDNumber&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Filter&lt;/i&gt;: &apos;&gt;&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Threshold&lt;/i&gt;: &apos;BAS 00008&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;FilterAs&lt;/i&gt;: &apos;String&apos;&lt;/p&gt;  &lt;/li&gt; &lt;li&gt;  &lt;p&gt;&lt;i&gt;PropertyName&lt;/i&gt;: &apos;cl_size&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Filter&lt;/i&gt;: &apos;=&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Threshold&lt;/i&gt;: &apos;20&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;FilterAs&lt;/i&gt;: &apos;Number&apos;&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; </sci:value>							<sci:value>Generic</sci:value>							<sci:value/>							<sci:value>Generic</sci:value>							<sci:value>Data records for which the property meets the given threshold</sci:value>							<sci:value>Generic</sci:value>							<sci:value>Data records for which the property does not meet the given threshold</sci:value>						</sci:arg>						<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The server version when this component was registered</sci:help>							<sci:value>7.0.0.48</sci:value>						</sci:arg>						<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Runtime Identifier</sci:help>							<sci:value>4:7</sci:value>						</sci:arg>						<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Scale</sci:help>							<sci:value>100</sci:value>						</sci:arg>						<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Subprotocol Made Link Into Copy</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Subprotocol Modified</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Location of the component in the database</sci:help>							<sci:value>Components\Generic\Filters\Property Value Threshold Filter</sci:value>						</sci:arg>					</sci:component>					<sci:protocol/>				</sci:data>				<sci:data object="SciTegic.Protocol.1">					<sci:component name="Property Value Threshold Filter" version="2">						<sci:arg name="PropertyName" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Property the filter will be applied to</sci:help>							<sci:value>Canonical_Smiles</sci:value>						</sci:arg>						<sci:arg name="Filter" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Filter oprerator. For example: &gt; means the property value must be greater than the threshold value.</sci:help>							<sci:legalval>=</sci:legalval>							<sci:legalval>&lt;</sci:legalval>							<sci:legalval>&lt;=</sci:legalval>							<sci:legalval>&gt;=</sci:legalval>							<sci:legalval>&gt;</sci:legalval>							<sci:legalval>!=</sci:legalval>							<sci:legalval>LIKE</sci:legalval>							<sci:legalval selected="true">RLIKE</sci:legalval>						</sci:arg>						<sci:arg name="Threshold" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Threshold for the filter. This is a constant value. If FilterAs is set to &apos;Number&apos;, this should be a numeric value. If FilterAs is set to &apos;String&apos;, this should be a string.</sci:help>							<sci:value>\[Q\]</sci:value>						</sci:arg>						<sci:arg name="FilterAs" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Filter as a number, a string (case insensitive or sensitive), or a date/time value.</sci:help>							<sci:legalval>Number</sci:legalval>							<sci:legalval>String</sci:legalval>							<sci:legalval selected="true">CaseSensitiveString</sci:legalval>							<sci:legalval>Date</sci:legalval>						</sci:arg>						<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">							<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>						</sci:arg>						<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">							<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.Other properties are created on the global property listand so are accessible from all protocols.</sci:help>							<sci:value>constant, pass, PropertyName, filter</sci:value>						</sci:arg>						<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">							<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>							<sci:legalval>True</sci:legalval>							<sci:legalval selected="true">False</sci:legalval>						</sci:arg>						<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">							<sci:help>Component Attributes</sci:help>							<sci:legalval selected="true">ComponentTakesInput</sci:legalval>							<sci:legalval>ComponentReturnsPass</sci:legalval>							<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>							<sci:legalval>ComponentRunsLocal</sci:legalval>						</sci:arg>						<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Protocol Options</sci:help>							<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>							<sci:legalval>Cant Replace With Copy</sci:legalval>							<sci:legalval>Cant Open</sci:legalval>						</sci:arg>						<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The user who registered this component.</sci:help>							<sci:value>scitegic/generic</sci:value>						</sci:arg>						<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The date this component was registered.</sci:help>							<sci:value>Tue Feb 26 08:42:08 2008</sci:value>						</sci:arg>						<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Comment</sci:help>							<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>						</sci:arg>						<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Usage</sci:help>							<sci:value>When you are creating a pipeline which requires a subprotocol as a component, you can drag this SubProtocol component into the pipeline, open it, and add components into it.</sci:value>						</sci:arg>						<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Display Name</sci:help>							<sci:value>Property Value Threshold Filter</sci:value>						</sci:arg>						<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol AutoLayout</sci:help>							<sci:value>1</sci:value>						</sci:arg>						<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol ShowComment</sci:help>							<sci:value>true</sci:value>						</sci:arg>						<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Add Protocol Comment Here</sci:help>							<sci:value>Add Protocol Comment Here</sci:value>						</sci:arg>						<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Disabled</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Custom Error Message</sci:help>						</sci:arg>						<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Icon</sci:help>							<sci:value>FILTERNODE</sci:value>						</sci:arg>						<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Revision</sci:help>							<sci:value>100</sci:value>						</sci:arg>						<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The component this component is based upon.</sci:help>							<sci:value>SubProtocol</sci:value>						</sci:arg>						<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>GUID</sci:help>							<sci:value>{FB8A6B2F-9419-4063-8B0C-59753AACFBC0}</sci:value>						</sci:arg>						<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Point</sci:help>							<sci:value>2388 -50</sci:value>						</sci:arg>						<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Scale</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>By Ref</sci:help>							<sci:value>1</sci:value>						</sci:arg>						<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Fancy Help</sci:help>							<sci:value>100</sci:value>							<sci:value>Passes data records for which a property value matches a specified condition</sci:value>							<sci:value>&lt;p&gt;For each incoming data record, the value of the property specified by &lt;i&gt;PropertyName&lt;/i&gt; is compared to &lt;i&gt;Threshold&lt;/i&gt;. If the comparison evaluates to True using the operator specified by &lt;i&gt;Filter&lt;/i&gt;, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;&lt;b&gt;Examples:&lt;/b&gt; Filtering the Asinex library:&lt;ul&gt; &lt;li&gt;  &lt;p&gt;&lt;i&gt;PropertyName&lt;/i&gt;: &apos;IDNumber&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Filter&lt;/i&gt;: &apos;&gt;&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Threshold&lt;/i&gt;: &apos;BAS 00008&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;FilterAs&lt;/i&gt;: &apos;String&apos;&lt;/p&gt;  &lt;/li&gt; &lt;li&gt;  &lt;p&gt;&lt;i&gt;PropertyName&lt;/i&gt;: &apos;cl_size&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Filter&lt;/i&gt;: &apos;=&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;Threshold&lt;/i&gt;: &apos;20&apos;&lt;/p&gt;  &lt;p&gt;&lt;i&gt;FilterAs&lt;/i&gt;: &apos;Number&apos;&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt; </sci:value>							<sci:value>Generic</sci:value>							<sci:value/>							<sci:value>Generic</sci:value>							<sci:value>Data records for which the property meets the given threshold</sci:value>							<sci:value>Generic</sci:value>							<sci:value>Data records for which the property does not meet the given threshold</sci:value>						</sci:arg>						<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The server version when this component was registered</sci:help>							<sci:value>7.0.0.48</sci:value>						</sci:arg>						<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Runtime Identifier</sci:help>							<sci:value>4:8</sci:value>						</sci:arg>						<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Scale</sci:help>							<sci:value>100</sci:value>						</sci:arg>						<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Subprotocol Made Link Into Copy</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Subprotocol Modified</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Location of the component in the database</sci:help>							<sci:value>Components\Generic\Filters\Property Value Threshold Filter</sci:value>						</sci:arg>					</sci:component>					<sci:protocol/>				</sci:data>				<sci:connect from="0" to="1" type="true"/>				<sci:connect from="1" to="2" type="false"/>				<sci:connect from="2" to="3" type="false"/>				<sci:connect from="3" to="4" type="false"/>				<sci:connect from="4" to="5" type="false"/>				<sci:connect from="5" to="6" type="false"/>				<sci:connect from="6" to="7" type="false"/>				<sci:connect from="7" to="8" type="false"/>			</sci:protocol>		</sci:data>		<sci:data object="SciTegic.EvaluateExpression.1">			<sci:component name="Custom Filter (PilotScript)" version="2">				<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">					<sci:help>The PilotScript expression used to filter the data.</sci:help>					<sci:member>Initial Expression</sci:member>					<sci:member>Final Expression</sci:member>					<sci:member>Keep Calculated Properties</sci:member>					<sci:value>Num_Atoms &lt; 3</sci:value>				</sci:arg>				<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">					<sci:help>&lt;p&gt;An expression evaluated only when the componentis first initialized (when the first data record enters).&lt;p/&gt;Since there is no data available at initialization time, only expressions referencing global properties are allowed.&lt;/p&gt;</sci:help>				</sci:arg>				<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">					<sci:help>&lt;p&gt;An expression evaluated only when thecomponent is finalized (once the last datarecord has passed).&lt;p/&gt;Since there is no data available at finalization time, only expressions referencing global properties are allowed.&lt;/p&gt;</sci:help>				</sci:arg>				<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">					<sci:help>Allows any properties that were calculated in&quot;Expression&quot; to be included with the exitingrecord.Otherwise, these properties are removed afterthe evaluation is complete.</sci:help>					<sci:legalval>True</sci:legalval>					<sci:legalval selected="true">False</sci:legalval>				</sci:arg>				<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">					<sci:help>Component Attributes</sci:help>					<sci:legalval selected="true">ComponentTakesInput</sci:legalval>					<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>					<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>					<sci:legalval>ComponentRunsLocal</sci:legalval>				</sci:arg>				<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">					<sci:help>Version of expression parser to use.</sci:help>					<sci:value>2</sci:value>				</sci:arg>				<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Comment</sci:help>					<sci:value>Allows you to filter using the result from a PilotScript expression. The expression you specify is evaluated for each incoming data record, and is evaluated to a True or False value. If multiple statements are present, then the value of the last statement is used.</sci:value>				</sci:arg>				<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The user who registered this component.</sci:help>					<sci:value>scitegic/core</sci:value>				</sci:arg>				<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The date this component was registered.</sci:help>					<sci:value>Mon Apr 23 12:21:34 2007</sci:value>				</sci:arg>				<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Usage</sci:help>					<sci:value>The &apos;Expression&apos; is evaluated for each incoming data record.  The last statement in the expression evaluates to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port.Input             - Data recordsOutput Pass  - Data records which evaluate &apos;true&apos;Output Fail    - Data records which evaluate &apos;false&apos;</sci:value>				</sci:arg>				<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Display Name</sci:help>					<sci:value>Remove very small molecules</sci:value>				</sci:arg>				<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Custom Error Message</sci:help>				</sci:arg>				<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Icon</sci:help>					<sci:value>FILTERNODE</sci:value>				</sci:arg>				<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The component this component is based upon.</sci:help>					<sci:value>Custom Filter (PilotScript)</sci:value>				</sci:arg>				<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Disabled</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>GUID</sci:help>					<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>				</sci:arg>				<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Point</sci:help>					<sci:value>1538 -50</sci:value>				</sci:arg>				<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">					<sci:help>Fancy Help</sci:help>					<sci:value>100</sci:value>					<sci:value>Passes data records for which a PilotScript expression evaluates to True</sci:value>					<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; &lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;</sci:value>					<sci:value>Generic</sci:value>					<sci:value/>					<sci:value>Generic</sci:value>					<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>					<sci:value>Generic</sci:value>					<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>				</sci:arg>				<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Runtime Identifier</sci:help>					<sci:value>5</sci:value>				</sci:arg>				<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help/>				</sci:arg>				<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Location of the component in the database</sci:help>					<sci:value>Components\Generic\Filters\Custom Filter (PilotScript)</sci:value>				</sci:arg>			</sci:component>			<sci:proplist>				<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>			</sci:proplist>		</sci:data>		<sci:data object="SciTegic.TransformMolecule.1">			<sci:component name="Add Hydrogens" version="2">				<sci:arg name="Action" type="StringType" required="false" visibility="visible" multi="false">					<sci:help>Specifies the Hydrogen fill mode:&lt;p&gt;Adds explicit hydrogens to the molecule. Options include: &lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;AddHydrogens&lt;/b&gt;:  Add hydrogens to all atoms.&lt;/li&gt;&lt;li&gt;&lt;b&gt;AddHeteroHydrogens&lt;/b&gt;:  Add hydrogens just to heteroatoms.&lt;/li&gt;&lt;li&gt;&lt;b&gt;AddStereoHydrogens&lt;/b&gt;:  Add hydrogens just to stereoatoms. Explicit Hydrogens are only added to stereoatoms in which all the atoms attached to the chiral center are in rings or the attached atoms are also stereocenters. Adding these hydrogens often avoids having to put a wedge bond on a ring bond or on a bond to another stereoatom.&lt;/li&gt;&lt;li&gt;&lt;b&gt;AddBridgeHeadHydrogens&lt;/b&gt;:  Add hydrogens to any bridgehead atom.&lt;/li&gt;&lt;/ul&gt;</sci:help>					<sci:legalval selected="true">AddHydrogens</sci:legalval>					<sci:legalval>AddHeteroHydrogens</sci:legalval>					<sci:legalval>AddStereoHydrogens</sci:legalval>					<sci:legalval>AddBridgeHeadHydrogens</sci:legalval>				</sci:arg>				<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">					<sci:help>Componet Attributes</sci:help>					<sci:legalval selected="true">ComponentTakesInput</sci:legalval>					<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>					<sci:legalval>ComponentReturnsFail</sci:legalval>					<sci:legalval>ComponentRunsLocal</sci:legalval>				</sci:arg>				<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The user who registered this component.</sci:help>					<sci:value>scitegic/chemistry</sci:value>				</sci:arg>				<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The date this component was registered.</sci:help>					<sci:value>Tue Feb 27 09:41:27 2007</sci:value>				</sci:arg>				<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Comment</sci:help>					<sci:value>Adds Hydrogens to all atoms in a molecule or just to the hetero (non-carbon) atoms.</sci:value>				</sci:arg>				<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Usage</sci:help>					<sci:value>Add Hydrogens to either all atoms in a molecule or just to the hetero (non-carbon) atoms.Input             - Molecular data recordsOutput Pass  - Molecular data records with hydrogens added</sci:value>				</sci:arg>				<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Display Name</sci:help>					<sci:value>Add Hydrogens</sci:value>				</sci:arg>				<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Custom Error Message</sci:help>				</sci:arg>				<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Icon</sci:help>					<sci:value>COMPONENTNODE</sci:value>				</sci:arg>				<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>GUID</sci:help>					<sci:value>{4A7D57EA-6B39-43DE-B92C-858BD216569A}</sci:value>				</sci:arg>				<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The component this component is based upon.</sci:help>					<sci:value>Add Hydrogens</sci:value>				</sci:arg>				<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Disabled</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Point</sci:help>					<sci:value>1813 -50</sci:value>				</sci:arg>				<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">					<sci:help>Fancy Help</sci:help>					<sci:value>100</sci:value>					<sci:value>Adds hydrogens to the molecule</sci:value>					<sci:value>&lt;p&gt;Adds explicit hydrogens to the molecule. Options include: &lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;AddHydrogens&lt;/b&gt;:  Add hydrogens to all atoms.&lt;/li&gt;&lt;li&gt;&lt;b&gt;AddHeteroHydrogens&lt;/b&gt;:  Add hydrogens just to heteroatoms.&lt;/li&gt;&lt;li&gt;&lt;b&gt;AddStereoHydrogens&lt;/b&gt;:  Add hydrogens just to stereoatoms. Explicit Hydrogens are only added to stereoatoms in which all the atoms attached to the chiral center are in rings or the attached atoms are also stereocenters. Adding these hydrogens often avoids having to put a wedge bond on a ring bond or on a bond to another stereoatom.&lt;/li&gt;&lt;li&gt;&lt;b&gt;AddBridgeHeadHydrogens&lt;/b&gt;:  Add hydrogens to any bridgehead atom.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;To remove explicit hydrogens, use &lt;a href=&quot;javascript:DoLink(&apos;{5A520938-939F-4210-A816-A023520422D7}&apos;)&quot;&gt;Remove Hydrogens&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;</sci:value>					<sci:value>Molecule</sci:value>					<sci:value/>					<sci:value>Molecule</sci:value>					<sci:value/>					<sci:value>None</sci:value>					<sci:value/>				</sci:arg>				<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Sticky Notes</sci:help>				</sci:arg>				<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Runtime Identifier</sci:help>					<sci:value>6</sci:value>				</sci:arg>				<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Location of the component in the database</sci:help>					<sci:value>Components\Chemistry\Manipulators\Add Hydrogens</sci:value>				</sci:arg>			</sci:component>			<sci:proplist>				<sci:propval name="RegistrationVersion">6.1.0.8</sci:propval>			</sci:proplist>		</sci:data>		<sci:data object="SciTegic.PKA.1">			<sci:component name="Ionize Molecule at pH" version="2">				<sci:arg name="pH" type="DoubleType" required="true" visibility="visible" multi="false">					<sci:help>pH value to use in the calculation of the ionization state.</sci:help>					<sci:value>7.3</sci:value>				</sci:arg>				<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">					<sci:help>Component Attributes</sci:help>					<sci:legalval selected="true">ComponentTakesInput</sci:legalval>					<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>					<sci:legalval>ComponentReturnsFail</sci:legalval>					<sci:legalval>ComponentRunsLocal</sci:legalval>				</sci:arg>				<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="AddPkaValuesToAtoms" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>Displays the pKa values associated with the pKa sites in the 2D molecular picture.</sci:help>					<sci:legalval>True</sci:legalval>					<sci:legalval selected="true">False</sci:legalval>				</sci:arg>				<sci:arg name="SiteQueriesUser" type="URLType" required="false" visibility="nevershow" multi="false">					<sci:help>Directory with molecular query files defined by the user. These queries are used to search for pKa sites in the molecule</sci:help>					<sci:value>data\pKa\AcidBaseSites\User\*.sd</sci:value>				</sci:arg>				<sci:arg name="SiteExamplesUser" type="URLType" required="false" visibility="nevershow" multi="false">					<sci:help>Directory with pKa site examples information. The site examples files are created using the pKa component &quot;Add pKa Data&quot;. The site example information is used in the calculation of pKa values. This directory contains files created by the user</sci:help>					<sci:value>data\pKa\Data\User\SiteExamples_*.tab</sci:value>				</sci:arg>				<sci:arg name="SiteQueriesScitegic" type="URLType" required="true" visibility="nevershow" multi="false">					<sci:help>Directory with the molecular query files defined by Scitegic during the implementation of the pKa components. These queries are used to search for pKa sites in the molecule</sci:help>					<sci:value>data\pKa\AcidBaseSites\Scitegic\*.sd</sci:value>				</sci:arg>				<sci:arg name="SiteExamplesScitegic" type="URLType" required="true" visibility="nevershow" multi="false">					<sci:help>Directory with pKa site examples information. The site examples files are created using the pKa component &quot;Add pKa Data&quot;. The site example information is used in the calculation of pKa values. This directory contains the original site examples files created by Scitegic during the implementation of the pKa components.</sci:help>					<sci:value>data\pKa\Data\Scitegic\SiteExamples_*.tab</sci:value>				</sci:arg>				<sci:arg name="pKa Models" type="URLType" required="true" visibility="nevershow" multi="false">					<sci:help>Directory with pKa Models. These models are used to calculate pKa values for the molecule. Several pKa models for different pKa sites developed by Scitegic are included in this directory</sci:help>					<sci:value>data\pKa\Models\PKAModel_*.txt</sci:value>				</sci:arg>				<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">					<sci:help>Mode</sci:help>					<sci:value>Protonate at pH</sci:value>				</sci:arg>				<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The user who registered this component.</sci:help>					<sci:value>scitegic/chemistryadv</sci:value>				</sci:arg>				<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The date this component was registered.</sci:help>					<sci:value>Tue Oct 31 12:34:50 2006</sci:value>				</sci:arg>				<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The component this component is based upon.</sci:help>					<sci:value>PKA</sci:value>				</sci:arg>				<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Icon</sci:help>					<sci:value>COMPONENTNODE</sci:value>				</sci:arg>				<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>GUID</sci:help>					<sci:value>{72D1AEC5-EE9E-4a39-A3D6-63637069BF6E}</sci:value>				</sci:arg>				<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Comment</sci:help>					<sci:value>Calculates the ionization state of the molecule</sci:value>				</sci:arg>				<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Usage</sci:help>					<sci:value>Use this component to calculate pKa values.Input            - Molecule data recordsOutput Pass - Molecule data records augmented with pKa data</sci:value>				</sci:arg>				<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Display Name</sci:help>					<sci:value>Ionize Molecule at pH</sci:value>				</sci:arg>				<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Custom Error Message</sci:help>				</sci:arg>				<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Point</sci:help>					<sci:value>2113 -50</sci:value>				</sci:arg>				<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Disabled</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">					<sci:help>Fancy Help</sci:help>					<sci:value>100</sci:value>					<sci:value>Sets the protonation state of the pKa sites according to a given pH</sci:value>					<sci:value>&lt;p&gt;Finds pKa sites and calculates the corresponding pKa values. The molecule is then modified so that the protonation state of those sites is set according to the specified pH.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Notes: &lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;pKa sites are located based on the molecular query files located in &quot;data/pKa/AcidBaseSites/&quot;.&lt;/li&gt;&lt;li&gt;Pka values are calculated based on site examples files located in &quot;data/pKa/Data/&quot; and on PLS Models located in &quot;data/pKa/Models&quot;.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;See Also: &lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;For calculation of pKa information for each atom in the molecule, use &lt;a href=&quot;javascript:DoLink(&apos;{A09482AD-1A24-4a94-B050-43CEF82DE630}&apos;)&quot;&gt;pKa&lt;/a&gt;&lt;/li&gt;&lt;li&gt;To calculate the octanol/water partition coefficient utilizing pKa information, use &lt;a href=&quot;javascript:DoLink(&apos;{DDDB7E61-D653-45e8-9564-39FB67159FD4}&apos;)&quot;&gt;logD&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;To enumerate all the possible ionization states of the molecule based on the pKa values and the pH range, use &lt;a href=&quot;javascript:DoLink(&apos;{B07C705E-49AC-4d54-887F-E4CE2DABA42D}&apos;)&quot;&gt;Enumerate Ionization States&lt;/a&gt;&lt;/li&gt;&lt;li&gt;To add your own data to the pKa model, use &lt;a href=&quot;javascript:DoLink(&apos;{DF099F9F-CB30-4a20-98BA-2ECAE394AF07}&apos;)&quot;&gt;Add pKa Data&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;To see the number of pkA sites and data points in the existing model, use &lt;a href=&quot;javascript:DoLink(&apos;{192A4F24-B54B-49ec-834C-C9A6A13C58FC}&apos;)&quot;&gt;pKa Site Stats Reader&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;For other information the calculation of pKa Calculation, see the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/chemistryadv/docs/chemistry_two.pdf&apos;)&quot;&gt;Advanced Chemistry User Guide&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</sci:value>					<sci:value>Generic</sci:value>					<sci:value/>					<sci:value>Generic</sci:value>					<sci:value>Molecule with ionizable groups in the protonation state corresponding to the specified pH</sci:value>					<sci:value>None</sci:value>					<sci:value/>				</sci:arg>				<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The server version when this component was registered</sci:help>					<sci:value>6.0.1.7</sci:value>				</sci:arg>				<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Sticky Notes</sci:help>					<sci:value>%VERSION 3%</sci:value>					<sci:value>2050 -425 396 251</sci:value>					<sci:value>255 255 0</sci:value>					<sci:value>Serum pH is approximately 7.3</sci:value>				</sci:arg>				<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Runtime Identifier</sci:help>					<sci:value>7</sci:value>				</sci:arg>				<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Location of the component in the database</sci:help>					<sci:value>Components\Chemistry\Manipulators\Ionize Molecule at pH</sci:value>				</sci:arg>			</sci:component>		</sci:data>		<sci:data object="SciTegic.Calculate2DCoords.1">			<sci:component name="2D Coords" version="2">				<sci:arg name="UseTemplates" type="BoolType" required="false" visibility="visible" multi="false">					<sci:help>Look for predefined 2D templates of ring and bridge assemblies and use their 2D coordinates to build the molecule. The predefined 2D templates are in public/data/Templates2D/Scitegic.</sci:help>					<sci:member>ShowTemplateSmiles</sci:member>					<sci:member>User Templates Folder</sci:member>					<sci:legalval selected="true">True</sci:legalval>					<sci:legalval>False</sci:legalval>				</sci:arg>				<sci:arg name="ShowTemplateSmiles" type="BoolType" required="false" visibility="visible" multi="false">					<sci:help>Add a property to each incoming molecule showing the SMILES of each 2D template used to construct the molecule, if any. The property name is &quot;TemplateSmiles&quot;.</sci:help>					<sci:legalval>True</sci:legalval>					<sci:legalval selected="true">False</sci:legalval>				</sci:arg>				<sci:arg name="User Templates Folder" type="URLType" required="false" visibility="visible" multi="false">					<sci:help>Folder with tdt  files with additional 2D Templates created by the user. These 2D Templates can be created using the &lt;i&gt;Learn 2D Templates&lt;/i&gt; component. You can specify just the folder name, in which case all tdt files in the folder will be read, or select a specific tdt file.</sci:help>				</sci:arg>				<sci:arg name="ResolveBumps" type="BoolType" required="false" visibility="visible" multi="false">					<sci:help>Resolve bumps among atoms present in the 2D coords</sci:help>					<sci:member>ResolveBumpsOnly</sci:member>					<sci:member>ResolveBumpsOptions</sci:member>					<sci:member>ShowBumpInfo</sci:member>					<sci:member>Bump Distance</sci:member>					<sci:legalval selected="true">True</sci:legalval>					<sci:legalval>False</sci:legalval>				</sci:arg>				<sci:arg name="ResolveBumpsOnly" type="BoolType" required="false" visibility="visible" multi="false">					<sci:help>Do not regenerate the 2D coordinates. Check the original coordinates of each incoming molecule for bumps and try to resolve them by flipping attachments and doing other transformations.</sci:help>					<sci:legalval>True</sci:legalval>					<sci:legalval selected="true">False</sci:legalval>				</sci:arg>				<sci:arg name="ResolveBumpsOptions" type="StringType" required="false" visibility="visible" multi="true">					<sci:help>2D transformations to use when resolving bumps in the 2D Coords. - CheckBondCrossing: Check for cases of bonds crossing each other and try to resolve them. - ShortenTerminalBonds: Shorten the bond length to all terminal atoms. - FlipTorsions: Flip rotatable bonds. - BendTorsions: Bend bond angle of rotatable bonds.  - Gen2DConf: Generate different 2D conformations to attempt to resolve the bumps.  - RotateTerminalAtoms: Rotate terminal bumping atoms to try to find a position around the connected atom where the bumps are resolved. - RandomKick: Apply a small random translation to bumping atoms.</sci:help>					<sci:legalval selected="true">CheckBondCrossing</sci:legalval>					<sci:legalval selected="true">ShortenTerminalBonds</sci:legalval>					<sci:legalval selected="true">FlipTorsions</sci:legalval>					<sci:legalval selected="true">BendTorsions</sci:legalval>					<sci:legalval selected="true">RotateTerminalAtoms</sci:legalval>					<sci:legalval>RandomKick</sci:legalval>					<sci:legalval>Gen2DConf</sci:legalval>				</sci:arg>				<sci:arg name="ShowBumpInfo" type="BoolType" required="false" visibility="visible" multi="false">					<sci:help>Add a property to each molecule with information about the 2D transformations used to resolve bumps present in the 2D Coords. The property name is &quot;ResolveBumpsActions&quot;. If the initial 2D Coords generated for the molecule have no bumps, the property is not defined.</sci:help>					<sci:legalval>True</sci:legalval>					<sci:legalval selected="true">False</sci:legalval>				</sci:arg>				<sci:arg name="Bump Distance" type="DoubleType" required="false" visibility="visible" multi="false">					<sci:help>Minimum distance allowed between atoms. If the atoms are closer than this distance, they are considered to be bumping each other.</sci:help>					<sci:value>0.50</sci:value>				</sci:arg>				<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">					<sci:help>Component Attributes</sci:help>					<sci:legalval selected="true">ComponentTakesInput</sci:legalval>					<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>					<sci:legalval>ComponentReturnsFail</sci:legalval>					<sci:legalval>ComponentRunsLocal</sci:legalval>				</sci:arg>				<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The user who registered this component.</sci:help>					<sci:value>scitegic/chemistry</sci:value>				</sci:arg>				<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The date this component was registered.</sci:help>					<sci:value>Thu Nov 02 13:08:16 2006</sci:value>				</sci:arg>				<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>GUID</sci:help>					<sci:value>{9164525E-5964-47A2-82D9-B8155B215724}</sci:value>				</sci:arg>				<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Comment</sci:help>					<sci:value>Generates 2D coordinates for molecules.</sci:value>				</sci:arg>				<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Usage</sci:help>					<sci:value>Two-dimensional structural coordinates are calculated for each incoming molecular data record. Input             - Molecular data recordsOutput Pass  - Molecular data records with generated 2D coordinates.</sci:value>				</sci:arg>				<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Display Name</sci:help>					<sci:value>2D Coords</sci:value>				</sci:arg>				<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Custom Error Message</sci:help>				</sci:arg>				<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Icon</sci:help>					<sci:value>COMPONENTNODE</sci:value>				</sci:arg>				<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The component this component is based upon.</sci:help>					<sci:value>2D Coords</sci:value>				</sci:arg>				<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Disabled</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Point</sci:help>					<sci:value>2388 -50</sci:value>				</sci:arg>				<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">					<sci:help>Fancy Help</sci:help>					<sci:value>100</sci:value>					<sci:value>Generates 2D coordinates for each input molecule</sci:value>					<sci:value>This component calculates two-dimensional structural coordinates (2D depiction) for each incoming molecular data record. Any original coordinates present in the molecule are discarded (unless the parameter &lt;i&gt;ResolveBumpsOnly&lt;/i&gt; is set to &quot;True&quot;, in which case the original coordinates are preserved and an attempt is made to resolve any bumps).&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;The 2D coordinates are constructed by breaking up the molecule into ring systems and chains, generating 2D coordinates for each fragment, and assembling them together.&lt;/li&gt;&lt;li&gt;When generating 2D coordinates for ring systems, a set of predefined &apos;templates&apos; are used. The templates are mapped to the ring system fragment and, if a match is found, the 2D coordinates of the template are assigned to the fragment. Over 6000 templates are provided as TDT files in the &lt;i&gt;scitegic root/chemistry/dataroot/data/Templates2D/Scitegic/&lt;/i&gt; folder.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;See also:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;To generate your own 2D templates, see &lt;a href=&quot;javascript:DoLink(&apos;{7AE7B42A-6319-4977-9250-498B195ACECB}&apos;)&quot;&gt;Learn 2D Templates&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;To generate 3D coordinates for the molecule, see &lt;a href=&quot;javascript:DoLink(&apos;{E145CB33-02C3-455E-94CC-F0FA0B88B2AC}&apos;)&quot;&gt;3D Coords&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;</sci:value>					<sci:value>Molecule</sci:value>					<sci:value/>					<sci:value>Molecule</sci:value>					<sci:value>With 2D coordinates</sci:value>					<sci:value>None</sci:value>					<sci:value/>				</sci:arg>				<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Sticky Notes</sci:help>				</sci:arg>				<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The server version when this component was registered</sci:help>					<sci:value>6.0.1.7</sci:value>				</sci:arg>				<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Runtime Identifier</sci:help>					<sci:value>8</sci:value>				</sci:arg>				<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Location of the component in the database</sci:help>					<sci:value>Components\Chemistry\Manipulators\2D Coords</sci:value>				</sci:arg>			</sci:component>		</sci:data>		<sci:data object="SciTegic.CalculateSmiles.1">			<sci:component name="Canonical Smiles" version="2">				<sci:arg name="Output" type="StringType" required="false" visibility="visible" multi="true">					<sci:help>&lt;ul&gt;&lt;li&gt;&lt;b&gt;SMILES&lt;/b&gt; is a non-canonical representation for the molecule. (This is very fast to calculate compared to Canonical_SMILES.)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Canonical_SMILES&lt;/b&gt; is the representation that can be compared for identicality.&lt;/li&gt;&lt;/ul&gt;&lt;i&gt;Output&lt;/i&gt; properties can be calculated &quot;on demand&quot; by simply using their names within a PilotScript expression or as the parameter value to many parameters that require a property name.</sci:help>					<sci:legalval type="StringType" selected="true">Canonical_Smiles</sci:legalval>					<sci:legalval type="StringType">Smiles</sci:legalval>				</sci:arg>				<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">					<sci:help>Component Attributes</sci:help>					<sci:legalval selected="true">ComponentTakesInput</sci:legalval>					<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>					<sci:legalval>ComponentReturnsFail</sci:legalval>					<sci:legalval>ComponentRunsLocal</sci:legalval>				</sci:arg>				<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Comment</sci:help>					<sci:value>Calculates a SMILES representation of the molecular information in a molecular data record. SMILES is a text-based representation for molecular information developed by Daylight.</sci:value>				</sci:arg>				<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The user who registered this component.</sci:help>					<sci:value>scitegic/chemistry</sci:value>				</sci:arg>				<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The date this component was registered.</sci:help>					<sci:value>Wed Jul 21 10:12:26 2004</sci:value>				</sci:arg>				<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Usage</sci:help>					<sci:value>Select either &apos;Smiles&apos; or &apos;Canonical_Smiles&quot; s in the &apos;Output&apos; pulldown list to generate the required string.  The data is augmented with the selected properties.Input             - Molecule data recordsOutput Pass - Molecule data records augmented with selected properties</sci:value>				</sci:arg>				<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Display Name</sci:help>					<sci:value>Canonical Smiles</sci:value>				</sci:arg>				<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The component this component is based upon.</sci:help>					<sci:value>Canonical Smiles</sci:value>				</sci:arg>				<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Custom Error Message</sci:help>				</sci:arg>				<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Icon</sci:help>					<sci:value>CALCULATORNODE</sci:value>				</sci:arg>				<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>GUID</sci:help>					<sci:value>{0C60C40A-5189-42DA-A3C0-4EA44BC27D15}</sci:value>				</sci:arg>				<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Point</sci:help>					<sci:value>2688 -50</sci:value>				</sci:arg>				<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Disabled</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">					<sci:help>Fancy Help</sci:help>					<sci:value>100</sci:value>					<sci:value>Calculates a SMILES or canonical SMILES representation of the input molecule</sci:value>					<sci:value>&lt;p&gt;SMILES is a terse textual representation of molecular data.  Canonical SMILES is a form of SMILES that is independent of how the molecule is drawn and so can be used to compare whether two molecules are identical.&lt;/P&gt;This component can create either or both of two properties:&lt;ul&gt;&lt;li&gt;&lt;b&gt;SMILES&lt;/b&gt; is a non-canonical representation for the molecule. (This is very fast to calculate compared to Canonical_SMILES.)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Canonical_SMILES&lt;/b&gt; is the representation that can be compared for identicality.&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;The canonicalization algorithm is SciTegic&apos;s; while it is derived from the published Daylight algorithm, however, lack of complete documentation of their procedure means that it will not necessarily give identical results. Compare two SMILES for identity only when having both canonicalized by the same method. &lt;/li&gt;&lt;/ul&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;You can create a SMILES string as text under any property name using &lt;a href=&quot;javascript:DoLink(&apos;{0C60C40A-5189-42DA-A3C0-4EA44BFF7D15}&apos;)&quot;&gt;Molecule to SMILES&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;You can convert a SMILES string into a molecule using &lt;a href=&quot;javascript:DoLink(&apos;{AC8262DA-E648-4D24-9CD1-D731A8F53F9D}&apos;)&quot;&gt;Molecule from SMILES&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;For an alternative way of generating a canonical string representation, see &lt;a href=&quot;javascript:DoLink(&apos;{EB62CC30-BC6A-4d5f-8618-3EB9AF611C69}&apos;)&quot;&gt;Molecule to InChI&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;</sci:value>					<sci:value>Molecule</sci:value>					<sci:value/>					<sci:value>Molecule</sci:value>					<sci:value>Records augmented with a text property containing the canonical SMILES or SMILES</sci:value>					<sci:value>None</sci:value>					<sci:value/>				</sci:arg>				<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The server version when this component was registered</sci:help>					<sci:value>4.1.1.200</sci:value>				</sci:arg>				<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Sticky Notes</sci:help>				</sci:arg>				<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Runtime Identifier</sci:help>					<sci:value>9</sci:value>				</sci:arg>				<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Location of the component in the database</sci:help>					<sci:value>Components\Chemistry\Calculators\Canonical Smiles</sci:value>				</sci:arg>			</sci:component>			<sci:proplist>				<sci:propval name="Canonical_Smiles|Category">Molecular Formats</sci:propval>				<sci:propval name="Smiles|Category">Molecular Formats</sci:propval>			</sci:proplist>		</sci:data>		<sci:data object="SciTegic.SDWriter.1">			<sci:component name="SD Writer" version="2">				<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false">					<sci:help>The filename or URL for the destination data. To save in compressed (zipped) format, add the extension .gz or .zip to the filename.</sci:help>					<sci:member>Maximum</sci:member>					<sci:member>IfFileExists</sci:member>					<sci:member>CharacterEncoding</sci:member>				</sci:arg>				<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">					<sci:help>The maximum number of data records to write (all if value is empty)</sci:help>				</sci:arg>				<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">					<sci:help>What to do if the given destination file already exists</sci:help>					<sci:legalval selected="true">Overwrite</sci:legalval>					<sci:legalval>Append</sci:legalval>					<sci:legalval>Halt</sci:legalval>				</sci:arg>				<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false">					<sci:help>&lt;p&gt;Indicates the character set that will be used within the file.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;ANSI&lt;/b&gt; is the default and specifies a character set where each character is defined by a single byte.  This allows the Latin-1 (ISO-8859-1) character set to be written to the file.  Virtually all applications can read these files.&lt;/li&gt;&lt;li&gt;&lt;b&gt;UTF-8&lt;/b&gt; specifies a variable length character set.  Each character is represented by 1 to 6 bytes.  This allows writing out all extended characters specified in the Unicode character sets while maintaining reasonably lengthed files.  Many applications do not support UTF-8 files.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Unicode&lt;/b&gt; and &lt;b&gt;Unicode big endian&lt;/b&gt; are sets where each character is represented by exactly 2 bytes (also known as UCS-2).  Depending on which is used will determine the order in which the bytes appear for each character. Many applications do not support Unicode or Unicode big endian files.&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;&lt;b&gt;See Also&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;For more information about each of these ecoding styles, go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org/&apos;)&quot;&gt;http://www.unicode.org/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>					<sci:legalval selected="true">ANSI</sci:legalval>					<sci:legalval>UTF-8</sci:legalval>					<sci:legalval>Unicode</sci:legalval>					<sci:legalval>Unicode big endian</sci:legalval>				</sci:arg>				<sci:arg name="SD Format Options" type="StringType" required="false" visibility="visible" multi="true">					<sci:help>Options for the SD Writer:&lt;ul&gt;&lt;li&gt;&lt;b&gt;Write Structure&lt;/b&gt;:  Includes available structure information with each record.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Write Properties&lt;/b&gt;:  Includes available property information with each record.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Write Date&lt;/b&gt;:  Writes the current date into the file.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Write Fully Padded Lines&lt;/b&gt;:  Writes all the fields in the Atoms and Bonds lines, padding with zeroes those fields with undefined values.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Write Query Info&lt;/b&gt;:  Writes out MDL query information and also additional SciTegic molecule query information to the properties of the SD record.To read the SciTegic-specific part of this information back in, use a SciTegic SD Reader with the ReadQueryInfo parameter set to True. (This option writes out substructure queries that may have come from SMARTS queries. It also stops writing query information for viewers that cannot handle it).&lt;/li&gt;&lt;li&gt;&lt;b&gt;Write Two Spaces In Data Header Line&lt;/b&gt;:  When on, data headers will be &lt;TT&gt;&amp;gt&amp;nbsp&amp;nbsp&amp;ltPropName&amp;gt&lt;/TT&gt;.  When off, data headers will be &lt;TT&gt;&quot;&amp;gt&amp;nbsp&amp;ltPropName&amp;gt&quot;&lt;/TT&gt;.  The standard does not specify how many spaces there should be. Making this option available for compatibility with 3rd party readers.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Wrap Long Property Lines&lt;/b&gt;:  By the MDL CTFile standard property lines are limited to 200 characters.  When selected, properties longer than 200 characters are with newlines every 200 characters.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp&lt;/p&gt;&lt;b&gt;V2000 and V3000 Format Parameters&lt;/b&gt;&lt;p&gt;The next two options can be used to force the SD file format to be exclusively V2000 or V3000. If none of the options is selected, the input molecules are written in V2000 format unless they contain features that require the use of the V3000 format. These features include presence of enhanced stereo markings, more than 999 atoms or bonds, and atom lists with more than 16 atom types. In this case, the output SD file might contain a mix of V2000 and V300 molecules.&lt;p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Use V3000 Format&lt;/b&gt;:  Force the format to be MDL V3000 for all molecules.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Use V2000 Format&lt;/b&gt;:  Force the format to be MDL V2000 for all molecules. Any molecule with features that require the V3000 format is sent to the Fail port. Note that the Fail port in the SD Writer is not active by default. If you want to use this option, make sure to activate the component Fail port by right-clicking on the component and selecting the &lt;i&gt;Toggle Ports&lt;/i&gt; menu.&lt;/li&gt;&lt;/ul&gt;</sci:help>					<sci:legalval selected="true">Write Structure</sci:legalval>					<sci:legalval selected="true">Write Properties</sci:legalval>					<sci:legalval selected="true">Write Date</sci:legalval>					<sci:legalval>Write Fully Padded Lines</sci:legalval>					<sci:legalval selected="true">Write Query Info</sci:legalval>					<sci:legalval>Write Two Spaces In Data Header Line</sci:legalval>					<sci:legalval selected="true">Wrap Long Property Lines</sci:legalval>					<sci:legalval>Use V3000 Format</sci:legalval>					<sci:legalval>Use V2000 Format</sci:legalval>				</sci:arg>				<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">					<sci:help>Contains less commonly used parameters</sci:help>					<sci:member>Name</sci:member>				</sci:arg>				<sci:arg name="Name" type="StringType" required="false" visibility="visible" multi="false">					<sci:help>Name of property that holds the name of each molecule</sci:help>					<sci:value>Name</sci:value>				</sci:arg>				<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">					<sci:help>Component Attributes</sci:help>					<sci:legalval selected="true">ComponentTakesInput</sci:legalval>					<sci:legalval>ComponentReturnsPass</sci:legalval>					<sci:legalval>ComponentReturnsFail</sci:legalval>					<sci:legalval>ComponentRunsLocal</sci:legalval>				</sci:arg>				<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Comment</sci:help>					<sci:value>Writes MDL SD (structured data) files.</sci:value>				</sci:arg>				<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The user who registered this component.</sci:help>					<sci:value>scitegic/chemistry</sci:value>				</sci:arg>				<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The date this component was registered.</sci:help>					<sci:value>Thu Oct 19 08:13:25 2006</sci:value>				</sci:arg>				<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Usage</sci:help>					<sci:value>Writes the molecule and associated property data to the &apos;Destination&apos; file in SD format.Input - Molecule data records</sci:value>				</sci:arg>				<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Display Name</sci:help>					<sci:value>SD Writer</sci:value>				</sci:arg>				<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Custom Error Message</sci:help>				</sci:arg>				<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Icon</sci:help>					<sci:value>DOCUMENTNODE</sci:value>				</sci:arg>				<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>GUID</sci:help>					<sci:value>{DC8EE7B0-0620-42FE-944C-B4CD1E79480E}</sci:value>				</sci:arg>				<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The component this component is based upon.</sci:help>					<sci:value>SD Writer</sci:value>				</sci:arg>				<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Disabled</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Point</sci:help>					<sci:value>2963 -50</sci:value>				</sci:arg>				<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">					<sci:help>Fancy Help</sci:help>					<sci:value>100</sci:value>					<sci:value>Writes an MDL SD (structured data) file</sci:value>					<sci:value>Writes the molecule and associated property data to the &lt;i&gt;Destination&lt;/i&gt; file in MDL SD format.&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;To read files in MDL SD format, use the &lt;a href=&quot;javascript:DoLink(&apos;{CA65B896-4FE6-4E3A-B884-DC16B53B8D26}&apos;)&quot;&gt;SD Reader&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;To convert molecules to and from a text property containing the molecular connection table (CTAB) in MDL format, use &lt;a href=&quot;javascript:DoLink(&apos;{E622FBD9-9FA9-451A-A102-1800B5F28B6D}&apos;)&quot;&gt;Molecule to CTAB&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{7D354B65-DDD8-4EA4-83A7-21501A8A6852}&apos;)&quot;&gt;Molecule from CTAB&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt;</sci:value>					<sci:value>Molecule</sci:value>					<sci:value/>					<sci:value>None</sci:value>					<sci:value/>					<sci:value>None</sci:value>					<sci:value/>				</sci:arg>				<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The server version when this component was registered</sci:help>					<sci:value>6.0.1.4</sci:value>				</sci:arg>				<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Sticky Notes</sci:help>				</sci:arg>				<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Runtime Identifier</sci:help>					<sci:value>10</sci:value>				</sci:arg>				<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Location of the component in the database</sci:help>					<sci:value>Components\Chemistry\Writers\SD Writer</sci:value>				</sci:arg>			</sci:component>		</sci:data>		<sci:connect from="0" to="1" type="true"/>		<sci:connect from="1" to="2" type="true"/>		<sci:connect from="2" to="3" type="true"/>		<sci:connect from="3" to="4" type="true"/>		<sci:connect from="4" to="5" type="false"/>		<sci:connect from="5" to="6" type="false"/>		<sci:connect from="6" to="7" type="true"/>		<sci:connect from="7" to="8" type="true"/>		<sci:connect from="8" to="9" type="true"/>		<sci:connect from="9" to="10" type="true"/>		<sci:version iVal="1"/>	</sci:protocol></sci:data>