<?xml version="1.0" encoding="UTF-8"?><workflow name="Field">  <interface>    <source name="no_lines" type="string" />    <source name="ProbeParameters_mat" type="string" />    <source name="TissueParameters_mat" type="string" />    <source name="SimulationDirectory" type="string" />    <constant name="pendingFile" type="string" value="/var/www/pending" cardinality="scalar" />    <constant name="dataDir" type="string" value="data" cardinality="scalar" />    <constant name="ProbeCode_tgz" type="string" value="/grid/biomed/creatis/vip/tools/activitites/simulator_components/field/SimulateRFLine/probes/herve/SondeHerve.tar.gz" cardinality="scalar" />    <constant name="MergeCode_tgz" type="string" value="/grid/biomed/creatis/vip/tools/activitites/simulator_components/field/SimulateRFLine/probes/herve/MergeField.tgz" cardinality="scalar" />    <sink name="image_mat" type="string" />    <sink name="RFLine_mat" type="string" />    <sink name="result URL" type="string" />    <sink name="else" type="string" />  </interface>  <processors>    <processor name="appendDate" >      <in name="dir" type="string" depth="0" />      <out name="result" type="string" depth="0" />      <beanshell>/*----------Beginning of Beanshell------------*/                        import java.text.DateFormat;                        import java.text.SimpleDateFormat;                        import java.util.Date;DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy_HH:mm:ss");String result = dir+"/"+(dateFormat.format(System.currentTimeMillis()));/*------------End of Beanshell------------*/      </beanshell>    </processor>    <processor name="getRFLines" >      <in name="nlines" type="string" depth="0" />      <out name="array" type="string" depth="1" />      <beanshell>int n = Integer.parseInt(nlines);array = new ArrayList();for (int i =1; i&lt;=n;i++)  array.add(""+i);      </beanshell>    </processor>    <processor name="Merge" >      <in name="input2" type="string" depth="0" />      <in name="input1" type="string" depth="0" />      <in name="input0" type="string" depth="0" />      <out name="result0" type="string" depth="0" />      <iterationstrategy>        <cross>          <port name="input1" />          <port name="input0" />          <port name="input2" />        </cross>      </iterationstrategy>      <gasw descriptor="lfn://lfc-biomed.in2p3.fr:5010/grid/biomed/creatis/vip/tools/activitites/simulator_components/field/Merge/MergeField.xml" />    </processor>    <processor name="SimulateRFLine" >      <in name="input3" type="string" depth="0" />      <in name="input2" type="string" depth="0" />      <in name="input4" type="string" depth="0" />      <in name="input1" type="string" depth="0" />      <in name="input0" type="string" depth="0" />      <out name="result0" type="string" depth="0" />      <iterationstrategy>        <cross>          <port name="input1" />          <port name="input0" />          <port name="input2" />          <port name="input3" />          <port name="input4" />        </cross>      </iterationstrategy>      <gasw descriptor="lfn://lfc-biomed.in2p3.fr:5010/grid/biomed/creatis/vip/tools/activitites/simulator_components/field/SimulateRFLine/ExecutionField.xml" />    </processor>    <processor name="put on web server" >      <in name="pendingFile" type="string" depth="0" />      <in name="dir" type="string" depth="0" />      <in name="lfn" type="string" depth="0" />      <out name="out" type="string" depth="0" />      <iterationstrategy>        <cross>          <port name="lfn" />          <port name="pendingFile" />          <port name="dir" />        </cross>      </iterationstrategy>      <beanshell>lfn = lfn.substring(lfn.indexOf("/grid"));//creates dir in case it doesn't exist yet        File d = new File(dir);        if(!d.exists()){            System.out.println("Creating dir "+dir);            if(!d.mkdir())                throw new Exception("Cannot create directory "+dir);        }        //lock file        Process p1 = null;        Runtime rt = Runtime.getRuntime();        String[] cmd1 = new String[2];        cmd1[0] = "lockfile";        cmd1[1] = pendingFile+".lock";        System.out.println("Waiting for lock on file "+pendingFile);        p1 = rt.exec(cmd1);        p1.waitFor();        System.out.println("Obtained lock on file "+pendingFile);        //write in file        InetAddress addr = InetAddress.getLocalHost();        String user = System.getenv("USER");        String pwd = System.getenv("PWD");        String filename=lfn.substring(lfn.lastIndexOf('/'));        FileWriter fw = new FileWriter(pendingFile,true);        fw.write(lfn+";"+user+"@"+addr.getCanonicalHostName()+":"+pwd+"/"+dir+"/"+filename+"\n");        fw.close();        //unlock file        System.out.println("Unlocking file "+pendingFile+".lock");        if((new File(pendingFile+".lock").delete()))            System.out.println("File "+pendingFile+".lock was successfully deleted");        else            throw new Exception("File "+pendingFile+".lock couldn't be deleted: the semaphore is inconsistent from now");        out = "https://"+addr.getCanonicalHostName()+"/workflows/"+(new File(pwd)).getName()+"/data/"+(new File(lfn)).getName();      </beanshell>    </processor>    <processor name="getDirToMerge" >      <in name="in" type="string" depth="0" />      <out name="out" type="string" depth="0" />      <beanshell>String parent = (new File(in)).getParent();if(parent!=null)	out = parent;else	throw new Exception("bad filename");      </beanshell>    </processor>    <if name="if_first_line" >      <in name="dir" type="string" depth="0" />      <in name="line" type="string" depth="0" />      <out name="out_else" type="string" depth="0" />      <out name="out_then" type="string" depth="0" />      <iterationstrategy>        <dot>          <port name="dir" />          <port name="line" />        </dot>      </iterationstrategy>      <condition>Integer.parseInt(line)==1</condition>      <then>out=dir</then>      <else>out=line+"-"+dir</else>    </if>    <processor name="get line number" >      <in name="in" type="string" depth="0" />      <out name="out" type="string" depth="0" />      <beanshell>out=(new File(in)).getName().replace("line","").replace(".mat","");      </beanshell>    </processor>  </processors>  <links>      <link from="ProbeParameters_mat" to="SimulateRFLine:input0" />      <link from="TissueParameters_mat" to="SimulateRFLine:input1" />      <link from="SimulateRFLine:result0" to="RFLine_mat" />      <link from="Merge:result0" to="image_mat" />      <link from="no_lines" to="getRFLines:nlines" />      <link from="getRFLines:array" to="SimulateRFLine:input3" />      <link from="no_lines" to="Merge:input1" />      <link from="Merge:result0" to="put on web server:lfn" />      <link from="put on web server:out" to="result URL" />      <link from="SimulationDirectory" to="appendDate:dir" />      <link from="appendDate:result" to="SimulateRFLine:input4" />      <link from="dataDir" to="put on web server:dir" />      <link from="pendingFile" to="put on web server:pendingFile" />      <link from="getDirToMerge:out" to="Merge:input0" />      <link from="if_first_line:out_then" to="getDirToMerge:in" />      <link from="SimulateRFLine:result0" to="if_first_line:dir" />      <link from="if_first_line:out_else" to="else" />      <link from="SimulateRFLine:result0" to="get line number:in" />      <link from="get line number:out" to="if_first_line:line" />      <link from="ProbeCode_tgz" to="SimulateRFLine:input2" />      <link from="MergeCode_tgz" to="Merge:input2" />  </links>  <coordinations>      <link from="SimulateRFLine" to="Merge" />  </coordinations></workflow>