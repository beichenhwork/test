<?xml version="1.0" encoding="UTF-8"?><sci:data xmlns:sci="http://www.SciTegic.com/" object="SciTegic.Protocol.1">	<sci:component name="M4_TautomerMatching" version="2">		<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">			<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>		</sci:arg>		<sci:arg name="WebExports" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">			<sci:help>&lt;p&gt;A comma delimited list of global properties which will be automatically exported if this protocol is published as a web service.&lt;p/&gt;Each global property in the list is created with an empty value at the start of the protocol run.&lt;/p&gt;</sci:help>		</sci:arg>		<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="visible" multi="false" uimpl="true">			<sci:help>The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Webport to provide a custom user interface for a protocol.</sci:help>		</sci:arg>		<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">			<sci:help>When a recoverable error occurs during processing:   Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) portPass: Continue execution of the network, passing data out the Pass(green) port</sci:help>			<sci:legalval selected="true">Halt</sci:legalval>			<sci:legalval>Fail</sci:legalval>			<sci:legalval>Pass</sci:legalval>		</sci:arg>		<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">			<sci:help>When an expected data type is not found during processing:  Halt: Terminate the execution of the networkFail: Continue execution of the network, passing data out the Fail(red) portPass: Continue execution of the network, passing data out the Pass(green) port</sci:help>			<sci:legalval selected="true">Halt</sci:legalval>			<sci:legalval>Fail</sci:legalval>			<sci:legalval>Pass</sci:legalval>		</sci:arg>		<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">			<sci:help>Component Attributes</sci:help>			<sci:legalval>ComponentTakesInput</sci:legalval>			<sci:legalval>ComponentReturnsPass</sci:legalval>			<sci:legalval>ComponentReturnsFail</sci:legalval>			<sci:legalval>ComponentRunsLocal</sci:legalval>		</sci:arg>		<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>The component this component is based upon.</sci:help>			<sci:value>EmptyProtocol</sci:value>		</sci:arg>		<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>The user who registered this component.</sci:help>			<sci:value>PaulDobson</sci:value>		</sci:arg>		<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>The date this component was registered.</sci:help>			<sci:value>Fri Sep 12 14:57:15 2008</sci:value>		</sci:arg>		<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>Component Comment</sci:help>			<sci:value>A top-level component for building protocols.</sci:value>		</sci:arg>		<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>Component Usage</sci:help>			<sci:value>The user should customize this description and usage to describe the functioning of their derived protocol.</sci:value>		</sci:arg>		<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>Display Name</sci:help>			<sci:value>M4_TautomerMatching</sci:value>		</sci:arg>		<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">			<sci:help>Protocol AutoLayout</sci:help>			<sci:value>1</sci:value>		</sci:arg>		<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">			<sci:help>Protocol ShowComment</sci:help>			<sci:value>true</sci:value>		</sci:arg>		<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>Add Protocol Comment Here</sci:help>			<sci:value>Add Protocol Comment Here</sci:value>		</sci:arg>		<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>Custom Error Message</sci:help>		</sci:arg>		<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">			<sci:help>Component Icon</sci:help>			<sci:value>ProtocolNode</sci:value>		</sci:arg>		<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">			<sci:help>Component Revision</sci:help>			<sci:value>100</sci:value>		</sci:arg>		<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">			<sci:help>Disabled</sci:help>			<sci:value>0</sci:value>		</sci:arg>		<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>GUID</sci:help>			<sci:value>{5CD1C88E-95C4-7914-52AF-1ED038FCE55A}</sci:value>		</sci:arg>		<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>Component Point</sci:help>			<sci:value>70 -50</sci:value>		</sci:arg>		<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">			<sci:help>By Ref</sci:help>			<sci:value>0</sci:value>		</sci:arg>		<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">			<sci:help>Fancy Help</sci:help>			<sci:value>100</sci:value>			<sci:value>Building protocols in Pipeline Pilot.</sci:value>			<sci:value>This is the help window for working with components and protocols in Pipeline Pilot. To create a protocol, drag items from the Components tab into the workspace. Connect them with pipes, edit their parameters, and then click Run to generate results.  As you select components and protocols, information about using them is displayed in this help window. The parameters are displayed in the adjacent Parameters window.For more information, go to &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/getstart/getstart_intro.htm&apos;)&quot;&gt;Getting Started with Pipeline Pilot&lt;/a&gt;.</sci:value>			<sci:value>None</sci:value>			<sci:value/>			<sci:value>None</sci:value>			<sci:value/>			<sci:value>None</sci:value>			<sci:value/>		</sci:arg>		<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>Runtime Identifier</sci:help>		</sci:arg>		<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help/>		</sci:arg>		<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">			<sci:help>Protocol Scale</sci:help>			<sci:value>100</sci:value>		</sci:arg>		<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>Protocol Options</sci:help>			<sci:legalval>Make Shortcut by Default</sci:legalval>			<sci:legalval>Owner Access Only</sci:legalval>		</sci:arg>		<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>Protocol Sticky Notes</sci:help>			<sci:value>%VERSION 3%</sci:value>			<sci:value>1000 -375 1257 256</sci:value>			<sci:value>255 218 185</sci:value>			<sci:value>M4 Tautomer MatchingSupply two SD files and canonical tautomer matches will be detected and pairs output</sci:value>		</sci:arg>		<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>The server version when this component was registered</sci:help>			<sci:value>7.0.1.100</sci:value>		</sci:arg>		<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">			<sci:help>Location of the component in the database</sci:help>			<sci:value>PaulDobson\MergingModels\M4_TautomerMatching</sci:value>		</sci:arg>	</sci:component>	<sci:protocol>		<sci:data object="SciTegic.MDLSDReader.1">			<sci:component name="SD Reader" version="2">				<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">					<sci:help>The file or URL source to read</sci:help>					<sci:member>Maximum</sci:member>					<sci:member>SourceTag</sci:member>					<sci:member>Keep Properties</sci:member>				</sci:arg>				<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">					<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>				</sci:arg>				<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">					<sci:help>&lt;p&gt;The type of tag to create to identify the source of data records. A property called &lt;b&gt;SourceTag&lt;/b&gt; is created and holds the value indicated.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;None&lt;/b&gt;: No SourceTag property is created and any existing ones are removed.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Filename&lt;/b&gt;: The name of the file read.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FilenameAndExtension&lt;/b&gt;: The name of the file read with its file extension.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FullFilename&lt;/b&gt;: The name of the file read, including the directory path.&lt;/li&gt;&lt;li&gt;&lt;b&gt;ZipFilename&lt;/b&gt;: When reading a compressed zip file, the filename within the compressed archive.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Number&lt;/b&gt;: When multiple files are read in this component, they are numbered 1,2,3...&lt;/li&gt;&lt;li&gt;&lt;b&gt;Letter&lt;/b&gt;: When multiple files are read in this component, they are lettered A, B, C...&lt;/li&gt;&lt;li&gt;&lt;b&gt;KeepCurrent&lt;/b&gt;: Keeps the current value of SourceTag.&lt;/li&gt;&lt;/ul&gt;</sci:help>					<sci:legalval selected="true">None</sci:legalval>					<sci:legalval>Filename</sci:legalval>					<sci:legalval>FilenameAndExtension</sci:legalval>					<sci:legalval>FullFilename</sci:legalval>					<sci:legalval>ZipFilename</sci:legalval>					<sci:legalval>Number</sci:legalval>					<sci:legalval>Letter</sci:legalval>					<sci:legalval>KeepCurrent</sci:legalval>				</sci:arg>				<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">					<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.</sci:help>				</sci:arg>				<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">					<sci:help>Contains less commonly used parameters</sci:help>					<sci:member>ReadProperties</sci:member>					<sci:member>PutNameInProperty</sci:member>					<sci:member>ReadQueryInfo</sci:member>					<sci:member>PutCommentInProperty</sci:member>					<sci:member>SD Format Options</sci:member>				</sci:arg>				<sci:arg name="SD Format Options" type="StringType" required="false" visibility="visible" multi="true">					<sci:help>&lt;p&gt;Options available for the SD Reader:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Properties Can Contain $$$$:&lt;/b&gt;  By the MDL CTFile standard, a property can contain a &apos;$$$$&apos;-line.  Properties or data field values are terminated by a blank line.  Only then will the &apos;$$$$&apos;-line terminate the full data block.  Setting this option off will terminate the data block upon any read of a &apos;$$$$&apos;-line.  This option is available to provide compatibility with some 3rd Party SD files.&lt;/li&gt;&lt;li&gt;&lt;b&gt;One-space Lines Terminate Properties:&lt;/b&gt;  By the MDL CTFile standard, properties or data fields values are terminated by a blank line. Selecting this option will terminate the data block when encountering a line containing a space as the only character in the line.  This option is available to provide compatibility with some 3rd Party SD files.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Unwrap Long Property Lines:&lt;/b&gt;  By the MDL CTFile standard, lines in property fields cannot exceed 200 characters.  When this option is selected and a property line of exactly 200 characters is found, the newline character will be ignored and property string will continue on the next line.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Read Unknown Stereo Parity:&lt;/b&gt;  When selected, the SD Reader will use the &apos;Atom Parity&apos; value (parity of &apos;3&apos;) to mark unknown stereo centers in 3D mol files.  This will leave these atoms marked as &apos;unknown stereo&apos; and will not calculate the stereo from the coordinates.&lt;/li&gt;&lt;/ul&gt;</sci:help>					<sci:legalval selected="true">Properties Can Contain $$$$</sci:legalval>					<sci:legalval>One-space Lines Terminate Properties</sci:legalval>					<sci:legalval selected="true">Unwrap Long Property Lines</sci:legalval>					<sci:legalval>Read Unknown Stereo Parity</sci:legalval>				</sci:arg>				<sci:arg name="ReadProperties" type="BoolType" required="true" visibility="visible" multi="false">					<sci:help>Select True to read the properties for each molecule (in addition to the structures)</sci:help>					<sci:legalval selected="true">True</sci:legalval>					<sci:legalval>False</sci:legalval>				</sci:arg>				<sci:arg name="ReadQueryInfo" type="BoolType" required="true" visibility="visible" multi="false">					<sci:help>If properties starting with &quot;QueryInfo&quot; are present, use them to set up query information on the atoms and bonds. (This is how, for example, SMARTS query information can be preserved when writing to an MDL SD format file.) For molecules saved in MDL format, this information only contains information that cannot be written out in MDL SD format.</sci:help>					<sci:legalval>True</sci:legalval>					<sci:legalval selected="true">False</sci:legalval>				</sci:arg>				<sci:arg name="PutNameInProperty" type="StringType" required="false" visibility="visible" multi="false">					<sci:help>What to call the property that holds the name of each molecule</sci:help>					<sci:value>Name</sci:value>				</sci:arg>				<sci:arg name="PutCommentInProperty" type="StringType" required="false" visibility="visible" multi="false">					<sci:help>What to call the property that holds the comment associated with each molecule</sci:help>				</sci:arg>				<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">					<sci:help>Component Attributes</sci:help>					<sci:legalval>ComponentTakesInput</sci:legalval>					<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>					<sci:legalval>ComponentReturnsFail</sci:legalval>					<sci:legalval>ComponentRunsLocal</sci:legalval>				</sci:arg>				<sci:arg name="AllowUnknownDoubleBondsFromCoordinates" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>According to the MDL CTfile specifications, the cis/trans character of double bonds with bond stereo set to zero is determined from the coordinates. This parameter controls whether or not to assign unknown bond stereo to double bonds for which the stereo could not be determined from the coordinates, either because there are no coordinates or because of colinearity issues.  When the parameter is set to False and the stereo could not be determined, no specific stereo configuration is assigned to the double bond, but it is not marked as unknown stereo.</sci:help>					<sci:legalval selected="true">True</sci:legalval>					<sci:legalval>False</sci:legalval>				</sci:arg>				<sci:arg name="DeleteOnClose" type="BoolType" required="true" visibility="nevershow" multi="false">					<sci:help>Delete the file after the data is read [Be Careful!]</sci:help>					<sci:legalval>True</sci:legalval>					<sci:legalval selected="true">False</sci:legalval>				</sci:arg>				<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Comment</sci:help>					<sci:value>Reads MDL MOL (molecule CTAB) files and MDL SD (structured data) files.</sci:value>				</sci:arg>				<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The user who registered this component.</sci:help>					<sci:value>scitegic/chemistry</sci:value>				</sci:arg>				<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The date this component was registered.</sci:help>					<sci:value>Tue Mar 20 10:03:13 2007</sci:value>				</sci:arg>				<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Usage</sci:help>					<sci:value>Creates a molecule data record for each molecule represented in the &apos;Source&apos; data file.  Can read zipped (.zip) and url-based files.  Any properties contained in the file will be read into the data records created if the user specifies.Output Pass  - Molecule data records</sci:value>				</sci:arg>				<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Display Name</sci:help>					<sci:value>SD Reader</sci:value>				</sci:arg>				<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Custom Error Message</sci:help>				</sci:arg>				<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Icon</sci:help>					<sci:value>DOCUMENTNODE</sci:value>				</sci:arg>				<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>GUID</sci:help>					<sci:value>{CA65B896-4FE6-4E3A-B884-DC16B53B8D26}</sci:value>				</sci:arg>				<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The component this component is based upon.</sci:help>					<sci:value>SD Reader</sci:value>				</sci:arg>				<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Disabled</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Point</sci:help>					<sci:value>88 -50</sci:value>				</sci:arg>				<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">					<sci:help>Fancy Help</sci:help>					<sci:value>100</sci:value>					<sci:value>Reads MDL MOL (molecule CTAB) files and MDL SD (structured data) files</sci:value>					<sci:value>&lt;p&gt;Creates a molecular data record for each molecule represented in the &lt;i&gt;Source&lt;/i&gt; data file.  All properties contained in the file are read into the data records.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;This component can also read zipped (.zip) and URL-based files.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;To write files in MDL MOL or SD format, use the &lt;a href=&quot;javascript:DoLink(&apos;{DC8EE7B0-0620-42FE-944C-B4CD1E79480E}&apos;)&quot;&gt;SD Writer&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;To convert a molecule to and from between text properties in CTAB format, use &lt;a href=&quot;javascript:DoLink(&apos;{E622FBD9-9FA9-451A-A102-1800B5F28B6D}&apos;)&quot;&gt;Molecule to CTAB&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{7D354B65-DDD8-4EA4-83A7-21501A8A6852}&apos;)&quot;&gt;Molecule from CTAB&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Other related MDL format file readers include &lt;a href=&quot;javascript:DoLink(&apos;{169AB4E5-A470-477B-AA65-50464411036C}&apos;)&quot;&gt;RG Reader&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{036731AA-0015-4606-9750-7D9D020F21C8}&apos;)&quot;&gt;RXN Reader&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{55431CCB-06EA-4741-B95B-633C877E3E9B}&apos;)&quot;&gt;RD Reader&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt;</sci:value>					<sci:value>None</sci:value>					<sci:value/>					<sci:value>Molecule</sci:value>					<sci:value>Data fields in the SD file will be added to the property fields</sci:value>					<sci:value>None</sci:value>					<sci:value/>				</sci:arg>				<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Sticky Notes</sci:help>				</sci:arg>				<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The server version when this component was registered</sci:help>					<sci:value>6.1.0.11</sci:value>				</sci:arg>				<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Runtime Identifier</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Location of the component in the database</sci:help>					<sci:value>Components\Chemistry\Readers\SD Reader</sci:value>				</sci:arg>			</sci:component>		</sci:data>		<sci:data object="SciTegic.CountRecords.1">			<sci:component name="Count and Index Data" version="2">				<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">					<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;</sci:help>					<sci:member>Start Index</sci:member>					<sci:member>Check if Property Already in Use</sci:member>					<sci:value>IndexA</sci:value>				</sci:arg>				<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">					<sci:help>The index (i.e., number) used to start the sequence.</sci:help>					<sci:value>1</sci:value>				</sci:arg>				<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">					<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.</sci:help>					<sci:legalval selected="true">True</sci:legalval>					<sci:legalval>False</sci:legalval>				</sci:arg>				<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">					<sci:help>Component Attributes</sci:help>					<sci:legalval selected="true">ComponentTakesInput</sci:legalval>					<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>					<sci:legalval>ComponentReturnsFail</sci:legalval>					<sci:legalval>ComponentRunsLocal</sci:legalval>				</sci:arg>				<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The user who registered this component.</sci:help>					<sci:value>scitegic/core</sci:value>				</sci:arg>				<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The date this component was registered.</sci:help>					<sci:value>Fri Sep 08 07:31:45 2006</sci:value>				</sci:arg>				<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>GUID</sci:help>					<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>				</sci:arg>				<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Display Name</sci:help>					<sci:value>Add index</sci:value>				</sci:arg>				<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Custom Error Message</sci:help>				</sci:arg>				<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Icon</sci:help>					<sci:value>COMPONENTNODE</sci:value>				</sci:arg>				<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The component this component is based upon.</sci:help>					<sci:value>Count and Index Data</sci:value>				</sci:arg>				<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Disabled</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Point</sci:help>					<sci:value>363 -50</sci:value>				</sci:arg>				<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">					<sci:help>Fancy Help</sci:help>					<sci:value>100</sci:value>					<sci:value>Counts the number of data records and puts the count in a property</sci:value>					<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;&lt;p&gt;This component can be used in two modes:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;&lt;/ul&gt;</sci:value>					<sci:value>Generic</sci:value>					<sci:value/>					<sci:value>Generic</sci:value>					<sci:value/>					<sci:value>None</sci:value>					<sci:value/>				</sci:arg>				<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The server version when this component was registered</sci:help>					<sci:value>6.0.0.44</sci:value>				</sci:arg>				<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Sticky Notes</sci:help>				</sci:arg>				<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Runtime Identifier</sci:help>					<sci:value>1</sci:value>				</sci:arg>				<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Location of the component in the database</sci:help>					<sci:value>Components\Generic\Calculators\Count and Index Data</sci:value>				</sci:arg>			</sci:component>		</sci:data>		<sci:data object="SciTegic.Protocol.1">			<sci:component name="Subprotocol" version="2">				<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>				</sci:arg>				<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>				</sci:arg>				<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>					<sci:legalval>True</sci:legalval>					<sci:legalval selected="true">False</sci:legalval>				</sci:arg>				<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making availablebecause we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.&lt;/p&gt;&lt;p&gt;Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.&lt;/p&gt;&lt;p&gt;For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.&lt;/p&gt;</sci:help>					<sci:member>Parallel Processing Options Batch Size</sci:member>					<sci:member>Parallel Processing Options Server</sci:member>					<sci:member>Parallel Processing Options Preserve Order</sci:member>					<sci:legalval>True</sci:legalval>					<sci:legalval selected="true">False</sci:legalval>				</sci:arg>				<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">					<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>					<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>					<sci:value>25</sci:value>				</sci:arg>				<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">					<sci:help>&lt;p&gt;Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).&lt;/p&gt;&lt;p&gt;Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).&lt;/p&gt;</sci:help>					<sci:member>Parallel Processing Options Server Processes</sci:member>					<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);Parameter() ne &apos;&apos;;</sci:validscript>					<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>				</sci:arg>				<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>					<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/#processes := parameter();expand(&apos;,&apos;, #processes);#servers := parameter(&apos;Parallel Processing Options Server&apos;);expand(&apos;,&apos;, #servers);if (numvalues(#processes) == 0) then	SetInvalidDetails(&apos;This parameter is required.&apos;);else	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);end if;numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>					<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>				</sci:arg>				<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>					<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>					<sci:legalval selected="true">True</sci:legalval>					<sci:legalval>False</sci:legalval>				</sci:arg>				<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">					<sci:help>Component Attributes</sci:help>					<sci:legalval selected="true">ComponentTakesInput</sci:legalval>					<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>					<sci:legalval>ComponentReturnsFail</sci:legalval>					<sci:legalval>ComponentRunsLocal</sci:legalval>				</sci:arg>				<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Comment</sci:help>					<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>				</sci:arg>				<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Usage</sci:help>					<sci:value>When you are creating a pipeline which requires a subprotocol as a component, you can drag this SubProtocol component into the pipeline, open it, and add components into it.</sci:value>				</sci:arg>				<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Display Name</sci:help>					<sci:value>Hold original smiles</sci:value>				</sci:arg>				<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol AutoLayout</sci:help>					<sci:value>1</sci:value>				</sci:arg>				<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol ShowComment</sci:help>					<sci:value>true</sci:value>				</sci:arg>				<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Add Protocol Comment Here</sci:help>					<sci:value>Add Protocol Comment Here</sci:value>				</sci:arg>				<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Disabled</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Custom Error Message</sci:help>				</sci:arg>				<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Icon</sci:help>					<sci:value>EXPRESSIONNODE</sci:value>				</sci:arg>				<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Revision</sci:help>					<sci:value>100</sci:value>				</sci:arg>				<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The component this component is based upon.</sci:help>					<sci:value>SubProtocol</sci:value>				</sci:arg>				<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>GUID</sci:help>					<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>				</sci:arg>				<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Point</sci:help>					<sci:value>663 -50</sci:value>				</sci:arg>				<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>By Ref</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">					<sci:help>Fancy Help</sci:help>					<sci:value>100</sci:value>					<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>					<sci:value>&lt;p&gt;Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. &lt;/p&gt;&lt;p&gt;To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.&lt;/p&gt;</sci:value>					<sci:value>Generic</sci:value>					<sci:value/>					<sci:value>Generic</sci:value>					<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>					<sci:value>None</sci:value>					<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>				</sci:arg>				<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The server version when this component was registered</sci:help>					<sci:value>6.1.0.21</sci:value>				</sci:arg>				<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Sticky Notes</sci:help>				</sci:arg>				<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol Sticky Notes</sci:help>				</sci:arg>				<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol Scale</sci:help>					<sci:value>100</sci:value>				</sci:arg>				<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol Options</sci:help>					<sci:legalval>Make Shortcut by Default</sci:legalval>					<sci:legalval>Owner Access Only</sci:legalval>				</sci:arg>				<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The user who registered this component.</sci:help>					<sci:value>scitegic/core</sci:value>				</sci:arg>				<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The date this component was registered.</sci:help>					<sci:value>Tue May 01 14:06:30 2007</sci:value>				</sci:arg>				<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Runtime Identifier</sci:help>					<sci:value>2</sci:value>				</sci:arg>				<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Location of the component in the database</sci:help>					<sci:value>Components\Generic\Utilities\SubProtocol Utilities\Subprotocol</sci:value>				</sci:arg>			</sci:component>			<sci:protocol>				<sci:data object="SciTegic.CalculateSmiles.1">					<sci:component name="Canonical Smiles" version="2">						<sci:arg name="Output" type="StringType" required="false" visibility="visible" multi="true">							<sci:help>&lt;ul&gt;&lt;li&gt;&lt;b&gt;SMILES&lt;/b&gt; is a non-canonical representation for the molecule. (This is very fast to calculate compared to Canonical_SMILES.)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Canonical_SMILES&lt;/b&gt; is the representation that can be compared for identicality.&lt;/li&gt;&lt;/ul&gt;&lt;i&gt;Output&lt;/i&gt; properties can be calculated &quot;on demand&quot; by simply using their names within a PilotScript expression or as the parameter value to many parameters that require a property name.</sci:help>							<sci:legalval type="StringType" selected="true">Canonical_Smiles</sci:legalval>							<sci:legalval type="StringType">Smiles</sci:legalval>						</sci:arg>						<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">							<sci:help>Component Attributes</sci:help>							<sci:legalval selected="true">ComponentTakesInput</sci:legalval>							<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>							<sci:legalval>ComponentReturnsFail</sci:legalval>							<sci:legalval>ComponentRunsLocal</sci:legalval>						</sci:arg>						<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Comment</sci:help>							<sci:value>Calculates a SMILES representation of the molecular information in a molecular data record. SMILES is a text-based representation for molecular information developed by Daylight.</sci:value>						</sci:arg>						<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The user who registered this component.</sci:help>							<sci:value>scitegic/chemistry</sci:value>						</sci:arg>						<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The date this component was registered.</sci:help>							<sci:value>Wed Jul 21 10:12:26 2004</sci:value>						</sci:arg>						<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Usage</sci:help>							<sci:value>Select either &apos;Smiles&apos; or &apos;Canonical_Smiles&quot; s in the &apos;Output&apos; pulldown list to generate the required string.  The data is augmented with the selected properties.Input             - Molecule data recordsOutput Pass - Molecule data records augmented with selected properties</sci:value>						</sci:arg>						<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Display Name</sci:help>							<sci:value>Canonical Smiles</sci:value>						</sci:arg>						<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The component this component is based upon.</sci:help>							<sci:value>Canonical Smiles</sci:value>						</sci:arg>						<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Custom Error Message</sci:help>						</sci:arg>						<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Icon</sci:help>							<sci:value>CALCULATORNODE</sci:value>						</sci:arg>						<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>GUID</sci:help>							<sci:value>{0C60C40A-5189-42DA-A3C0-4EA44BC27D15}</sci:value>						</sci:arg>						<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Point</sci:help>							<sci:value>88 -50</sci:value>						</sci:arg>						<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Disabled</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Fancy Help</sci:help>							<sci:value>100</sci:value>							<sci:value>Calculates a SMILES or canonical SMILES representation of the input molecule</sci:value>							<sci:value>&lt;p&gt;SMILES is a terse textual representation of molecular data.  Canonical SMILES is a form of SMILES that is independent of how the molecule is drawn and so can be used to compare whether two molecules are identical.&lt;/P&gt;This component can create either or both of two properties:&lt;ul&gt;&lt;li&gt;&lt;b&gt;SMILES&lt;/b&gt; is a non-canonical representation for the molecule. (This is very fast to calculate compared to Canonical_SMILES.)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Canonical_SMILES&lt;/b&gt; is the representation that can be compared for identicality.&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;The canonicalization algorithm is SciTegic&apos;s; while it is derived from the published Daylight algorithm, however, lack of complete documentation of their procedure means that it will not necessarily give identical results. Compare two SMILES for identity only when having both canonicalized by the same method. &lt;/li&gt;&lt;/ul&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;You can create a SMILES string as text under any property name using &lt;a href=&quot;javascript:DoLink(&apos;{0C60C40A-5189-42DA-A3C0-4EA44BFF7D15}&apos;)&quot;&gt;Molecule to SMILES&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;You can convert a SMILES string into a molecule using &lt;a href=&quot;javascript:DoLink(&apos;{AC8262DA-E648-4D24-9CD1-D731A8F53F9D}&apos;)&quot;&gt;Molecule from SMILES&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;For an alternative way of generating a canonical string representation, see &lt;a href=&quot;javascript:DoLink(&apos;{EB62CC30-BC6A-4d5f-8618-3EB9AF611C69}&apos;)&quot;&gt;Molecule to InChI&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;</sci:value>							<sci:value>Molecule</sci:value>							<sci:value/>							<sci:value>Molecule</sci:value>							<sci:value>Records augmented with a text property containing the canonical SMILES or SMILES</sci:value>							<sci:value>None</sci:value>							<sci:value/>						</sci:arg>						<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The server version when this component was registered</sci:help>							<sci:value>4.1.1.200</sci:value>						</sci:arg>						<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Runtime Identifier</sci:help>							<sci:value>2:0</sci:value>						</sci:arg>						<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Location of the component in the database</sci:help>							<sci:value>Components\Chemistry\Calculators\Canonical Smiles</sci:value>						</sci:arg>					</sci:component>					<sci:proplist>						<sci:propval name="Canonical_Smiles|Category">Molecular Formats</sci:propval>						<sci:propval name="Smiles|Category">Molecular Formats</sci:propval>					</sci:proplist>				</sci:data>				<sci:data object="SciTegic.PropertyFunctions.1">					<sci:component name="Rename Property" version="2">						<sci:arg name="Property" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Property name to change</sci:help>							<sci:value>canonical_smiles</sci:value>						</sci:arg>						<sci:arg name="NewProperty" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Name of the new property</sci:help>							<sci:value>original_smiles</sci:value>						</sci:arg>						<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When a General or DataType error occurs during processing:    LeaveData: The data is passed unalterd  ClearData: The data is cleared before being passed (an empty data item)  DeleteData: The data is deleted and not passed</sci:help>							<sci:legalval selected="true">LeaveData</sci:legalval>							<sci:legalval>ClearData</sci:legalval>							<sci:legalval>DeleteData</sci:legalval>						</sci:arg>						<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">							<sci:help>Component Attributes</sci:help>							<sci:legalval selected="true">ComponentTakesInput</sci:legalval>							<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>							<sci:legalval>ComponentReturnsFail</sci:legalval>							<sci:legalval>ComponentRunsLocal</sci:legalval>						</sci:arg>						<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>the action to perform</sci:help>							<sci:value>Rename</sci:value>						</sci:arg>						<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>Sets the Components Icon</sci:help>							<sci:value>EXPRESSIONNODE</sci:value>						</sci:arg>						<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Comment</sci:help>							<sci:value>Renames a single property.</sci:value>						</sci:arg>						<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The user who registered this component.</sci:help>							<sci:value>scitegic/core</sci:value>						</sci:arg>						<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The date this component was registered.</sci:help>							<sci:value>Fri Sep 15 10:07:49 2006</sci:value>						</sci:arg>						<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Usage</sci:help>							<sci:value>The component works for single properties as well as property arrays. Input             - Data recordsOutput Pass  - All Data records</sci:value>						</sci:arg>						<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Display Name</sci:help>							<sci:value>Rename Property</sci:value>						</sci:arg>						<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The component this component is based upon.</sci:help>							<sci:value>Evaluate Expression</sci:value>						</sci:arg>						<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component RunTimeID</sci:help>							<sci:value>2:1</sci:value>						</sci:arg>						<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>GUID</sci:help>							<sci:value>{5A384E06-8AF2-4C10-A9B7-7302DD110A48}</sci:value>						</sci:arg>						<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Disabled</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>CustomErrorText</sci:help>						</sci:arg>						<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Point</sci:help>							<sci:value>363 -50</sci:value>						</sci:arg>						<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Fancy Help</sci:help>							<sci:value>100</sci:value>							<sci:value>Renames a property</sci:value>							<sci:value>For each data record entering the component, the property with name specified by &lt;i&gt;Property&lt;/i&gt; is renamed to the name specified by &lt;i&gt;NewProperty&lt;/i&gt;.</sci:value>							<sci:value>Generic</sci:value>							<sci:value/>							<sci:value>Generic</sci:value>							<sci:value/>							<sci:value>None</sci:value>							<sci:value/>						</sci:arg>						<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The server version when this component was registered</sci:help>							<sci:value>6.0.0.46</sci:value>						</sci:arg>						<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Location of the component in the database</sci:help>							<sci:value>Components\Generic\Manipulators\Rename Property</sci:value>						</sci:arg>					</sci:component>				</sci:data>				<sci:connect from="0" to="1" type="true"/>			</sci:protocol>		</sci:data>		<sci:data object="SciTegic.GenerateTautomers.1">			<sci:component name="Enumerate Tautomers" version="2">				<sci:arg name="EnumerateWhat" type="StringType" required="true" visibility="visible" multi="false">					<sci:help>Enumerate all tautomers or only the canonical tautomer</sci:help>					<sci:legalval>AllTautomers</sci:legalval>					<sci:legalval selected="true">CanonicalTautomer</sci:legalval>				</sci:arg>				<sci:arg name="MaxNumberTautomers" type="LongType" required="false" visibility="visible" multi="false">					<sci:help>Maximum number of tautomers generated for a given molecule.&lt;ul&gt;&lt;li&gt;If specified, molecules with too many tautomer forms are returned out the fail port.&lt;/li&gt;&lt;li&gt;If not specified, or set to zero, all tautomers are returned out the pass port.&lt;/li&gt;&lt;/ul&gt;</sci:help>					<sci:member>EstimateNumberTautomers</sci:member>					<sci:value>1000</sci:value>				</sci:arg>				<sci:arg name="EstimateNumberTautomers" type="BoolType" required="false" visibility="visible" multi="false">					<sci:help>Estimate the total number of tautomers that would be generated before doing the enumeration and compare the estimated number against the maximum number of tautomers allowed, as specified by the &lt;i&gt;MaxNumberTautomers&lt;/i&gt; parameter. The estimate is an upper bound of the actual number of tautomers that would be enumerated. It is calculated assuming that all possible tautomeric combinations will be generated. Normally some of the combinations are not allowed because of molecular structure violations, but in order to know the actual number of tautomers it is necessary to go through the enumeration process, which can be computationally expensive for molecules with many tautomeric forms.&lt;p&gt;When this option is selected, the number of tautomers is quickly estimated. If the estimated number is greater than the maximum allowed, no tautomers are generated and the input molecule is sent to the Fail port. When this option is not selected, the actual number of tautomers that would be generated is calculated. Again, molecules with too many tautomers are sent to the Fail port. </sci:help>					<sci:legalval>True</sci:legalval>					<sci:legalval selected="true">False</sci:legalval>				</sci:arg>				<sci:arg name="Enumeration Options" type="StringType" required="false" visibility="visible" multi="false">					<sci:help>Options to fine-tune the tautomer perception procedure</sci:help>					<sci:member>ConsiderCarbonAsDonor</sci:member>					<sci:member>OutputTautomerScore</sci:member>					<sci:member>MakeAllSp2AtomsAcceptors</sci:member>					<sci:member>User Canonical Tautomers Folder</sci:member>					<sci:member>Amides Tautomerization</sci:member>				</sci:arg>				<sci:arg name="ConsiderCarbonAsDonor" type="StringType" required="false" visibility="visible" multi="false">					<sci:help>When to consider Carbon atoms as donors in a tautomeric fragment. The Carbon atom needs to be sp3 and have at least one Hydrogen that is implicit or explicit. Options include: &lt;ul&gt;&lt;li&gt;&lt;b&gt;Never&lt;/b&gt;: Never consider Carbon atoms as donors.&lt;/li&gt;&lt;li&gt;&lt;b&gt;BondedToTwoOrMoreTautomericAtoms&lt;/b&gt;: Carbon atom needs to be attached to at least two tautomeric atoms, either donor, acceptor, or sp2.&lt;/li&gt; &lt;li&gt;&lt;b&gt;BondedToOneOrMoreTautomericAtom&lt;/b&gt;: Carbon atom needs to be attached to at least one tautomeric atom, either donor, acceptor, or sp2.&lt;/li&gt;&lt;/ul&gt;</sci:help>					<sci:legalval selected="true">Never</sci:legalval>					<sci:legalval>BondedToTwoOrMoreTautomericAtoms</sci:legalval>					<sci:legalval>BondedToOneOrMoreTautomericAtom</sci:legalval>				</sci:arg>				<sci:arg name="MakeAllSp2AtomsAcceptors" type="BoolType" required="false" visibility="visible" multi="false">					<sci:help>Whether or not to consider sp2 hybridized atoms as acceptors when looking for tautomeric forms.</sci:help>					<sci:legalval>True</sci:legalval>					<sci:legalval selected="true">False</sci:legalval>				</sci:arg>				<sci:arg name="Amides Tautomerization" type="StringType" required="false" visibility="visible" multi="false">					<sci:help>This parameter specifies how to tautomerize amide groups. The options are:&lt;ul&gt;&lt;li&gt;&lt;b&gt;Skip All Amides&lt;/b&gt;: do not tautomerize any amide group&lt;/li&gt;&lt;li&gt;&lt;b&gt;Tautomerize Only Diamides&lt;/b&gt;: tautomerize only amide groups in which the NH group is bonded to two or more sp2 atoms (as in R-C(=O)NC(=O)-R). This is the default option.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Tautomerize All Amides&lt;/b&gt;: tautomerize all amide groups&lt;/li&gt;&lt;/ul&gt;</sci:help>					<sci:legalval>Skip All Amides</sci:legalval>					<sci:legalval selected="true">Tautomerize Only Diamides</sci:legalval>					<sci:legalval>Tautomerize All Amides</sci:legalval>				</sci:arg>				<sci:arg name="OutputTautomerScore" type="BoolType" required="false" visibility="visible" multi="false">					<sci:help>Whether or not to output a tautomer score for each tautomeric form when enumerating all tautomers. The tautomer score is calculated based on the count of specific substructures in the molecule, such as aromatic bonds, exocyclic double bonds, keto or enol forms, imine or enamine forms, etc. </sci:help>					<sci:legalval>True</sci:legalval>					<sci:legalval selected="true">False</sci:legalval>				</sci:arg>				<sci:arg name="User Canonical Tautomers Folder" type="URLType" required="false" visibility="visible" multi="false">					<sci:help>Look for .sd files with canonical tautomer structures in this folder. You can specify just the folder name, in which case all sd files in the folder will be read, or select a specific sd file. If no matching structure is found, the canonical tautomer is selected based on a calculated tautomer score. If matching structures are found, the selected tautomeric form is the one with the maximum number of mapping atoms. In this case, a property with the mapping atoms (named CanonicalStructureMappingAtoms) is added to the molecule</sci:help>				</sci:arg>				<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">					<sci:help>Component Attributes</sci:help>					<sci:legalval selected="true">ComponentTakesInput</sci:legalval>					<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>					<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>					<sci:legalval>ComponentRunsLocal</sci:legalval>				</sci:arg>				<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="TautomerGeneration" type="StringType" required="true" visibility="nevershow" multi="false">					<sci:help>Specifies whether to generate all tautomers or only the canonical form  AllTautomers - generate all tautomers found for each molecule  OnlyCanonicalTautomer - generate only the Canonical tautomer for each molecule</sci:help>					<sci:legalval selected="true">AllTautomers</sci:legalval>					<sci:legalval>OnlyCanonicalTautomer</sci:legalval>				</sci:arg>				<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Comment</sci:help>					<sci:value>Generates tautomer forms for each incoming molecule.</sci:value>				</sci:arg>				<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The user who registered this component.</sci:help>					<sci:value>scitegic/chemistryadv</sci:value>				</sci:arg>				<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The date this component was registered.</sci:help>					<sci:value>Mon Jan 15 07:44:27 2007</sci:value>				</sci:arg>				<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Usage</sci:help>					<sci:value>Each incoming molecule is analyzed for existance of tautomeric formsIf no tautomers are found, the molecule is passed unchangedIf the molecule has tautomeric forms, a new molecule is created for each tautomer</sci:value>				</sci:arg>				<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Display Name</sci:help>					<sci:value>Canonicalise tautomer</sci:value>				</sci:arg>				<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The component this component is based upon.</sci:help>					<sci:value>Generate Tautomers</sci:value>				</sci:arg>				<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Disabled</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Custom Error Message</sci:help>				</sci:arg>				<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Icon</sci:help>					<sci:value>GENERATORNODE</sci:value>				</sci:arg>				<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>GUID</sci:help>					<sci:value>{1654299C-B2FA-450a-8ED5-78D58E22BF2D}</sci:value>				</sci:arg>				<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Point</sci:help>					<sci:value>938 -50</sci:value>				</sci:arg>				<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">					<sci:help>Fancy Help</sci:help>					<sci:value>100</sci:value>					<sci:value>Generates all tautomers of a molecule or a single canonical tautomer</sci:value>					<sci:value>This component analyzes each incoming molecule for the existence of tautomeric forms and outputs either a canonical tautomer or all the possible tautomers. Molecules with no tautomers are passed unchanged through the Pass port.&lt;p&gt;If &lt;i&gt;EnumerateWhat&lt;/i&gt; is set to &quot;AllTautomers&quot;, a new data record is created for each tautomeric form and output through the Pass port. Two properties are calculated and added to each tautomer, &lt;b&gt;NumberOfTautomers&lt;/b&gt;, representing the total number of tautomeric forms found for the molecule, and &lt;b&gt;TautomerIndex&lt;/b&gt;, a tautomer number (from 1 to NumberOfTautomers) to identify each tautomer.&lt;p&gt;If &lt;i&gt;EnumerateWhat&lt;/i&gt; is set to &quot;CanonicalTautomer&quot;, only the canonical tautomeric form is created. Two properties are calculated and added to each tautomer, &lt;b&gt;NumberOfTautomers&lt;/b&gt;, representing the total number of tautomeric forms found for the molecule, and &lt;b&gt;CanonicalTautomer&lt;/b&gt;, a string property with value &apos;Yes&apos; indicating that the molecule was converted to its canonical tautomeric form.&lt;p&gt;&lt;b&gt;Notes&lt;/b&gt;:&lt;ul&gt;&lt;li&gt;The tautomer enumeration algorithm is based on: &quot;Canonicalization and Enumeration of Tautomers&quot;, Sayle and Delany, EuroMUG99, 28-29 October 1999, Cambridge, UK.&lt;/li&gt;&lt;li&gt;The canonical tautomer is identified using a tautomer score which is calculated based on the count of specific substructures present in the tautomer, such as aromatic bonds, exocyclic double bonds, keto or enol forms, imine or enamine forms, etc.&lt;/li&gt;&lt;/ul&gt;</sci:value>					<sci:value>Molecule</sci:value>					<sci:value/>					<sci:value>Molecule</sci:value>					<sci:value>New molecule record for each tautomer, or a single record with the canonical tautomeric form</sci:value>					<sci:value>Molecule</sci:value>					<sci:value>Molecules with number of tautomeric forms exceed maximum set by the parameter &apos;MaxNumberTautomers&apos;</sci:value>				</sci:arg>				<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Sticky Notes</sci:help>				</sci:arg>				<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The server version when this component was registered</sci:help>					<sci:value>6.1.0.2</sci:value>				</sci:arg>				<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Runtime Identifier</sci:help>					<sci:value>3</sci:value>				</sci:arg>				<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Location of the component in the database</sci:help>					<sci:value>Components\Chemistry\Reactions and Enumeration\Enumerate Tautomers</sci:value>				</sci:arg>			</sci:component>		</sci:data>		<sci:data object="SciTegic.Protocol.1">			<sci:component name="Merge Molecules" version="2">				<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="visible" multi="false">					<sci:help>What happens to the values of properties represented in more than one of the records being combined.&lt;p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;KeepAll&lt;/b&gt;: keeps all property values by appending additional values in an array.&lt;/li&gt;&lt;li&gt;&lt;b&gt;KeepFirst&lt;/b&gt;: keeps only the properties and values from the first example received.  All properties and values from subsequent records for the same molecule are discarded.&lt;/li&gt; &lt;li&gt;&lt;b&gt;KeepTogether&lt;/b&gt;: keeps all records for the same molecule sequentially together in the ouput (like Sort).&lt;/li&gt;&lt;/ul&gt;</sci:help>					<sci:member>KeepAllNullString</sci:member>					<sci:member>WhenMerging</sci:member>					<sci:member>PrefixUsingProperty</sci:member>					<sci:legalval selected="true">KeepAll</sci:legalval>					<sci:legalval>KeepFirst</sci:legalval>					<sci:legalval>KeepTogether</sci:legalval>				</sci:arg>				<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">					<sci:help>&lt;p&gt;When merging using KeepAll behavior, provides fine control over how multiple values are treated.&lt;/p&gt; &lt;ul&gt;&lt;li&gt;OverwriteOrCreate: Copies all properties of each merged record sequentially, overwriting any values that may already exist (instead of generating an array).&lt;/li&gt;&lt;li&gt;OverwriteExisting: Only copies properties that already exist on the first merged record, overwriting those original values (instead of creating an array).&lt;/li&gt;&lt;li&gt;CreateIfNew: Leaves any existing properties alone, and writes only new properties.&lt;/li&gt;&lt;li&gt;AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.&lt;/li&gt;&lt;li&gt;AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.&lt;/li&gt;&lt;/ul&gt;</sci:help>					<sci:legalval>OverwriteOrCreate</sci:legalval>					<sci:legalval>OverwriteExisting</sci:legalval>					<sci:legalval>CreateIfNew</sci:legalval>					<sci:legalval selected="true">AppendOrCreate</sci:legalval>					<sci:legalval>AppendExisting</sci:legalval>				</sci:arg>				<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">					<sci:help>This string is used during append in &quot;KeepAll&quot; to pad out empty values. It keeps the generated arrays of values in sync for multiple samples. The value &quot;None&quot; causes no padding to occur.</sci:help>					<sci:value>None</sci:value>				</sci:arg>				<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">					<sci:help>When multiple values for a property are retained (under KeepAll merge behavior), the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).</sci:help>				</sci:arg>				<sci:arg name="OutputFrequency" type="StringType" required="true" visibility="visible" multi="false">					<sci:help>Add a property called &lt;b&gt;Frequency&lt;/b&gt; that contains the number of individual records included in the resulting merged record</sci:help>					<sci:legalval selected="true">True</sci:legalval>					<sci:legalval>False</sci:legalval>				</sci:arg>				<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{2E21E16B-6901-46F3-8780-F14D3D7057CE}" uimpl="true">					<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>				</sci:arg>				<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{2E21E16B-6901-46F3-8780-F14D3D7057CE}" uimpl="true">					<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>				</sci:arg>				<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{2E21E16B-6901-46F3-8780-F14D3D7057CE}" uimpl="true">					<sci:help>When the network runs, processes once or until done for each process call</sci:help>					<sci:legalval>True</sci:legalval>					<sci:legalval selected="true">False</sci:legalval>				</sci:arg>				<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">					<sci:help>Component Attributes</sci:help>					<sci:legalval selected="true">ComponentTakesInput</sci:legalval>					<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>					<sci:legalval>ComponentReturnsFail</sci:legalval>					<sci:legalval>ComponentRunsLocal</sci:legalval>				</sci:arg>				<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The user who registered this component.</sci:help>					<sci:value>scitegic/chemistry</sci:value>				</sci:arg>				<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The date this component was registered.</sci:help>					<sci:value>Thu Dec 13 12:07:52 2007</sci:value>				</sci:arg>				<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Comment</sci:help>					<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>				</sci:arg>				<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Usage</sci:help>					<sci:value>When you are creating a pipeline which requires a subprotocol as a component, you can drag this SubProtocol component into the pipeline, open it, and add components into it.</sci:value>				</sci:arg>				<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Display Name</sci:help>					<sci:value>Merge Molecules</sci:value>				</sci:arg>				<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol AutoLayout</sci:help>					<sci:value>1</sci:value>				</sci:arg>				<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol ShowComment</sci:help>					<sci:value>true</sci:value>				</sci:arg>				<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Add Protocol Comment Here</sci:help>					<sci:value>Add Protocol Comment Here</sci:value>				</sci:arg>				<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Disabled</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Custom Error Message</sci:help>				</sci:arg>				<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Icon</sci:help>					<sci:value>COMPONENTNODE</sci:value>				</sci:arg>				<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Revision</sci:help>					<sci:value>100</sci:value>				</sci:arg>				<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The component this component is based upon.</sci:help>					<sci:value>SubProtocol</sci:value>				</sci:arg>				<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>GUID</sci:help>					<sci:value>{2E21E16B-6901-46F3-8780-F14D3D7057CE}</sci:value>				</sci:arg>				<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Point</sci:help>					<sci:value>1238 -50</sci:value>				</sci:arg>				<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol Scale</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>By Ref</sci:help>					<sci:value>1</sci:value>				</sci:arg>				<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">					<sci:help>Fancy Help</sci:help>					<sci:value>100</sci:value>					<sci:value>Merges data records containing identical molecules into a single data record</sci:value>					<sci:value>Multiple molecular data records with identical molecules are merged into a single data record.  Molecules are identified as identical based on their Canonical_Smiles. If the molecules are already unique, they are passed unchanged through the Pass port.&lt;p&gt;&lt;i&gt;MergeBehavior&lt;/i&gt; specifies how to combine the property values for duplicate molecules.&lt;p&gt;&lt;strong&gt;See also:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;To merge data records based on the values of a property, see &lt;a href=&quot;javascript:DoLink(&apos;{1E393621-138C-466E-8A2B-275A3FAB26E3}&apos;)&quot;&gt;Merge Data&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;</sci:value>					<sci:value>Molecule</sci:value>					<sci:value/>					<sci:value>Molecule</sci:value>					<sci:value>Single molecule record for all input molecule records with identical molecules</sci:value>					<sci:value>None</sci:value>					<sci:value/>				</sci:arg>				<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The server version when this component was registered</sci:help>					<sci:value>7.0.0.27</sci:value>				</sci:arg>				<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Sticky Notes</sci:help>				</sci:arg>				<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol Sticky Notes</sci:help>				</sci:arg>				<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Runtime Identifier</sci:help>					<sci:value>4</sci:value>				</sci:arg>				<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol Scale</sci:help>					<sci:value>100</sci:value>				</sci:arg>				<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol Options</sci:help>					<sci:legalval>Make Shortcut by Default</sci:legalval>					<sci:legalval>Owner Access Only</sci:legalval>				</sci:arg>				<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>Subprotocol Made Link Into Copy</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Location of the component in the database</sci:help>					<sci:value>Components\Chemistry\Manipulators\Merge Molecules</sci:value>				</sci:arg>			</sci:component>			<sci:protocol/>		</sci:data>		<sci:data object="SciTegic.Protocol.1">			<sci:component name="Subprotocol" version="2">				<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>				</sci:arg>				<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>				</sci:arg>				<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>					<sci:legalval>True</sci:legalval>					<sci:legalval selected="true">False</sci:legalval>				</sci:arg>				<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making availablebecause we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.&lt;/p&gt;&lt;p&gt;Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.&lt;/p&gt;&lt;p&gt;For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.&lt;/p&gt;</sci:help>					<sci:member>Parallel Processing Options Batch Size</sci:member>					<sci:member>Parallel Processing Options Server</sci:member>					<sci:member>Parallel Processing Options Preserve Order</sci:member>					<sci:legalval>True</sci:legalval>					<sci:legalval selected="true">False</sci:legalval>				</sci:arg>				<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">					<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>					<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>					<sci:value>25</sci:value>				</sci:arg>				<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">					<sci:help>&lt;p&gt;Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).&lt;/p&gt;&lt;p&gt;Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).&lt;/p&gt;</sci:help>					<sci:member>Parallel Processing Options Server Processes</sci:member>					<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);Parameter() ne &apos;&apos;;</sci:validscript>					<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>				</sci:arg>				<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>					<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/#processes := parameter();expand(&apos;,&apos;, #processes);#servers := parameter(&apos;Parallel Processing Options Server&apos;);expand(&apos;,&apos;, #servers);if (numvalues(#processes) == 0) then	SetInvalidDetails(&apos;This parameter is required.&apos;);else	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);end if;numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>					<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>				</sci:arg>				<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>					<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>					<sci:legalval selected="true">True</sci:legalval>					<sci:legalval>False</sci:legalval>				</sci:arg>				<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">					<sci:help>Component Attributes</sci:help>					<sci:legalval selected="true">ComponentTakesInput</sci:legalval>					<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>					<sci:legalval>ComponentReturnsFail</sci:legalval>					<sci:legalval>ComponentRunsLocal</sci:legalval>				</sci:arg>				<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Comment</sci:help>					<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>				</sci:arg>				<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Usage</sci:help>					<sci:value>When you are creating a pipeline which requires a subprotocol as a component, you can drag this SubProtocol component into the pipeline, open it, and add components into it.</sci:value>				</sci:arg>				<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Display Name</sci:help>					<sci:value>Process</sci:value>				</sci:arg>				<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol AutoLayout</sci:help>					<sci:value>1</sci:value>				</sci:arg>				<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol ShowComment</sci:help>					<sci:value>true</sci:value>				</sci:arg>				<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Add Protocol Comment Here</sci:help>					<sci:value>Add Protocol Comment Here</sci:value>				</sci:arg>				<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Disabled</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Custom Error Message</sci:help>				</sci:arg>				<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Icon</sci:help>					<sci:value>EXPRESSIONNODE</sci:value>				</sci:arg>				<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Revision</sci:help>					<sci:value>100</sci:value>				</sci:arg>				<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The component this component is based upon.</sci:help>					<sci:value>SubProtocol</sci:value>				</sci:arg>				<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>GUID</sci:help>					<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>				</sci:arg>				<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Point</sci:help>					<sci:value>1538 -50</sci:value>				</sci:arg>				<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>By Ref</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">					<sci:help>Fancy Help</sci:help>					<sci:value>100</sci:value>					<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>					<sci:value>&lt;p&gt;Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. &lt;/p&gt;&lt;p&gt;To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.&lt;/p&gt;</sci:value>					<sci:value>Generic</sci:value>					<sci:value/>					<sci:value>Generic</sci:value>					<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>					<sci:value>None</sci:value>					<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>				</sci:arg>				<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The server version when this component was registered</sci:help>					<sci:value>6.1.0.21</sci:value>				</sci:arg>				<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Sticky Notes</sci:help>				</sci:arg>				<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol Sticky Notes</sci:help>				</sci:arg>				<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol Scale</sci:help>					<sci:value>100</sci:value>				</sci:arg>				<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol Options</sci:help>					<sci:legalval>Make Shortcut by Default</sci:legalval>					<sci:legalval>Owner Access Only</sci:legalval>				</sci:arg>				<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The user who registered this component.</sci:help>					<sci:value>scitegic/core</sci:value>				</sci:arg>				<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The date this component was registered.</sci:help>					<sci:value>Tue May 01 14:06:30 2007</sci:value>				</sci:arg>				<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Runtime Identifier</sci:help>					<sci:value>5</sci:value>				</sci:arg>				<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Location of the component in the database</sci:help>					<sci:value>Components\Generic\Utilities\SubProtocol Utilities\Subprotocol</sci:value>				</sci:arg>			</sci:component>			<sci:protocol>				<sci:data object="SciTegic.EvaluateExpression.1">					<sci:component name="Custom Filter (PilotScript)" version="2">						<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">							<sci:help>The PilotScript expression used to filter the data.</sci:help>							<sci:member>Initial Expression</sci:member>							<sci:member>Final Expression</sci:member>							<sci:member>Keep Calculated Properties</sci:member>							<sci:value>Frequency &gt; 1</sci:value>						</sci:arg>						<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">							<sci:help>&lt;p&gt;An expression evaluated only when the componentis first initialized (when the first data record enters).&lt;p/&gt;Since there is no data available at initialization time, only expressions referencing global properties are allowed.&lt;/p&gt;</sci:help>						</sci:arg>						<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">							<sci:help>&lt;p&gt;An expression evaluated only when thecomponent is finalized (once the last datarecord has passed).&lt;p/&gt;Since there is no data available at finalization time, only expressions referencing global properties are allowed.&lt;/p&gt;</sci:help>						</sci:arg>						<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">							<sci:help>Allows any properties that were calculated in&quot;Expression&quot; to be included with the exitingrecord.Otherwise, these properties are removed afterthe evaluation is complete.</sci:help>							<sci:legalval>True</sci:legalval>							<sci:legalval selected="true">False</sci:legalval>						</sci:arg>						<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">							<sci:help>Component Attributes</sci:help>							<sci:legalval selected="true">ComponentTakesInput</sci:legalval>							<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>							<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>							<sci:legalval>ComponentRunsLocal</sci:legalval>						</sci:arg>						<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">							<sci:help>Version of expression parser to use.</sci:help>							<sci:value>2</sci:value>						</sci:arg>						<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Comment</sci:help>							<sci:value>Allows you to filter using the result from a PilotScript expression. The expression you specify is evaluated for each incoming data record, and is evaluated to a True or False value. If multiple statements are present, then the value of the last statement is used.</sci:value>						</sci:arg>						<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The user who registered this component.</sci:help>							<sci:value>scitegic/core</sci:value>						</sci:arg>						<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The date this component was registered.</sci:help>							<sci:value>Mon Apr 23 12:21:34 2007</sci:value>						</sci:arg>						<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Usage</sci:help>							<sci:value>The &apos;Expression&apos; is evaluated for each incoming data record.  The last statement in the expression evaluates to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port.Input             - Data recordsOutput Pass  - Data records which evaluate &apos;true&apos;Output Fail    - Data records which evaluate &apos;false&apos;</sci:value>						</sci:arg>						<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Display Name</sci:help>							<sci:value>Custom Filter (PilotScript)</sci:value>						</sci:arg>						<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Custom Error Message</sci:help>						</sci:arg>						<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Icon</sci:help>							<sci:value>FILTERNODE</sci:value>						</sci:arg>						<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The component this component is based upon.</sci:help>							<sci:value>Custom Filter (PilotScript)</sci:value>						</sci:arg>						<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Disabled</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>GUID</sci:help>							<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>						</sci:arg>						<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Point</sci:help>							<sci:value>88 -50</sci:value>						</sci:arg>						<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Fancy Help</sci:help>							<sci:value>100</sci:value>							<sci:value>Passes data records for which a PilotScript expression evaluates to True</sci:value>							<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; &lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;</sci:value>							<sci:value>Generic</sci:value>							<sci:value/>							<sci:value>Generic</sci:value>							<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>							<sci:value>Generic</sci:value>							<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>						</sci:arg>						<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Runtime Identifier</sci:help>							<sci:value>5:0</sci:value>						</sci:arg>						<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help/>						</sci:arg>						<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Location of the component in the database</sci:help>							<sci:value>Components\Generic\Filters\Custom Filter (PilotScript)</sci:value>						</sci:arg>					</sci:component>					<sci:proplist>						<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>					</sci:proplist>				</sci:data>				<sci:data object="SciTegic.PropertyFunctions.1">					<sci:component name="Keep Properties" version="2">						<sci:arg name="PropertyList" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Comma-separated list of property names to keep</sci:help>							<sci:member>RenameList</sci:member>							<sci:value>IndexA, IndexB</sci:value>						</sci:arg>						<sci:arg name="RenameList" type="StringType" required="false" visibility="visible" multi="false">							<sci:help>If provided, it causes the properties given in PropertyList to be renamed to the corresponding name in this list.  If not provided, then no properties are renamed.</sci:help>						</sci:arg>						<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">							<sci:help>Component Attributes</sci:help>							<sci:legalval selected="true">ComponentTakesInput</sci:legalval>							<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>							<sci:legalval>ComponentReturnsFail</sci:legalval>							<sci:legalval>ComponentRunsLocal</sci:legalval>						</sci:arg>						<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>the action to perform</sci:help>							<sci:value>Keep</sci:value>						</sci:arg>						<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The user who registered this component.</sci:help>							<sci:value>scitegic/core</sci:value>						</sci:arg>						<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The date this component was registered.</sci:help>							<sci:value>Tue Oct 17 16:03:31 2006</sci:value>						</sci:arg>						<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Comment</sci:help>							<sci:value>Removes all but the specified properties from the property list.</sci:value>						</sci:arg>						<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Usage</sci:help>							<sci:value>&apos;PropertyList&apos; contains a comma-separated list of the property names that you wish to keep.  All other properties will be removed.Input             - Data recordsOutput Pass  - All Data records</sci:value>						</sci:arg>						<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Display Name</sci:help>							<sci:value>Keep Properties</sci:value>						</sci:arg>						<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol AutoLayout</sci:help>							<sci:value>true</sci:value>						</sci:arg>						<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol ShowComment</sci:help>							<sci:value>false</sci:value>						</sci:arg>						<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Add Protocol Comment Here</sci:help>							<sci:value>Add Protocol Comment Here</sci:value>						</sci:arg>						<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Disabled</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Custom Error Message</sci:help>						</sci:arg>						<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Icon</sci:help>							<sci:value>EXPRESSIONNODE</sci:value>						</sci:arg>						<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Revision</sci:help>							<sci:value>100</sci:value>						</sci:arg>						<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The component this component is based upon.</sci:help>							<sci:value>SubProtocol</sci:value>						</sci:arg>						<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Scale</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Point</sci:help>							<sci:value>363 -50</sci:value>						</sci:arg>						<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>GUID</sci:help>							<sci:value>{456195EF-9708-4367-B3DD-21EBF3796604}</sci:value>						</sci:arg>						<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Fancy Help</sci:help>							<sci:value>100</sci:value>							<sci:value>Keeps only the specified properties</sci:value>							<sci:value>For each incoming data record, retains only the properties found in the list of property names specified by &lt;i&gt;PropertyList&lt;/i&gt;.  All other properties are removed.&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;Use &lt;i&gt;RenameList&lt;/i&gt; if you wish to change the names of the retained properties.&lt;/ul&gt;&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;To remove specified properties from each data record, use &lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;Remove Properties&lt;/a&gt;.&lt;/ul&gt;</sci:value>							<sci:value>Generic</sci:value>							<sci:value/>							<sci:value>Generic</sci:value>							<sci:value>With only the specified properties remaining</sci:value>							<sci:value>None</sci:value>							<sci:value/>						</sci:arg>						<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The server version when this component was registered</sci:help>							<sci:value>6.0.1.4</sci:value>						</sci:arg>						<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>By Ref</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Runtime Identifier</sci:help>							<sci:value>5:1</sci:value>						</sci:arg>						<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Location of the component in the database</sci:help>							<sci:value>Components\Generic\Manipulators\Keep Properties</sci:value>						</sci:arg>					</sci:component>				</sci:data>				<sci:data object="SciTegic.PropertyFunctions.1">					<sci:component name="Is Property Defined Filter" version="2">						<sci:arg name="PropertyName" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Property the filter will be applied to</sci:help>							<sci:value>IndexA</sci:value>						</sci:arg>						<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">							<sci:help>Component Attributes</sci:help>							<sci:legalval selected="true">ComponentTakesInput</sci:legalval>							<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>							<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>							<sci:legalval>ComponentRunsLocal</sci:legalval>						</sci:arg>						<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>the action to perform</sci:help>							<sci:value>IsDefined</sci:value>						</sci:arg>						<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The user who registered this component.</sci:help>							<sci:value>scitegic/core</sci:value>						</sci:arg>						<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The date this component was registered.</sci:help>							<sci:value>Fri Sep 15 09:45:05 2006</sci:value>						</sci:arg>						<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Comment</sci:help>							<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>						</sci:arg>						<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Usage</sci:help>							<sci:value>When you are creating a pipeline which requires a subprotocol as a component, you can drag this SubProtocol component into the pipeline, open it, and add components into it.</sci:value>						</sci:arg>						<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Display Name</sci:help>							<sci:value>Property Defined Filter</sci:value>						</sci:arg>						<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol AutoLayout</sci:help>							<sci:value>1</sci:value>						</sci:arg>						<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol ShowComment</sci:help>							<sci:value>true</sci:value>						</sci:arg>						<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Add Protocol Comment Here</sci:help>							<sci:value>Add Protocol Comment Here</sci:value>						</sci:arg>						<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Disabled</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Custom Error Message</sci:help>						</sci:arg>						<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Icon</sci:help>							<sci:value>FILTERNODE</sci:value>						</sci:arg>						<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Revision</sci:help>							<sci:value>100</sci:value>						</sci:arg>						<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The component this component is based upon.</sci:help>							<sci:value>SubProtocol</sci:value>						</sci:arg>						<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>GUID</sci:help>							<sci:value>{74CB089F-EAA6-4FC4-A247-08453D1ADED4}</sci:value>						</sci:arg>						<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Point</sci:help>							<sci:value>663 -50</sci:value>						</sci:arg>						<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Scale</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>By Ref</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Fancy Help</sci:help>							<sci:value>100</sci:value>							<sci:value>Passes data records for which a specified property is defined</sci:value>							<sci:value>&lt;p&gt;For each incoming data record, the value of the property specified by &lt;i&gt;KeyProperty&lt;/i&gt; is checked.  If the value is defined, the record is sent out the Pass port.  Otherwise it is sent out the Fail port.&lt;/p&gt;</sci:value>							<sci:value>Generic</sci:value>							<sci:value/>							<sci:value>Generic</sci:value>							<sci:value>Data records for which the property is defined</sci:value>							<sci:value>Generic</sci:value>							<sci:value>Data records for which the property is NOT defined</sci:value>						</sci:arg>						<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Runtime Identifier</sci:help>							<sci:value>5:2</sci:value>						</sci:arg>						<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help/>						</sci:arg>						<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Location of the component in the database</sci:help>							<sci:value>Components\Generic\Filters\Is Property Defined Filter</sci:value>						</sci:arg>					</sci:component>					<sci:proplist>						<sci:propval name="RegistrationVersion">6.0.0.46</sci:propval>					</sci:proplist>				</sci:data>				<sci:data object="SciTegic.PropertyFunctions.1">					<sci:component name="Is Property Defined Filter" version="2">						<sci:arg name="PropertyName" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Property the filter will be applied to</sci:help>							<sci:value>IndexB</sci:value>						</sci:arg>						<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">							<sci:help>Component Attributes</sci:help>							<sci:legalval selected="true">ComponentTakesInput</sci:legalval>							<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>							<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>							<sci:legalval>ComponentRunsLocal</sci:legalval>						</sci:arg>						<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>the action to perform</sci:help>							<sci:value>IsDefined</sci:value>						</sci:arg>						<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The user who registered this component.</sci:help>							<sci:value>scitegic/core</sci:value>						</sci:arg>						<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The date this component was registered.</sci:help>							<sci:value>Fri Sep 15 09:45:05 2006</sci:value>						</sci:arg>						<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Comment</sci:help>							<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>						</sci:arg>						<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Usage</sci:help>							<sci:value>When you are creating a pipeline which requires a subprotocol as a component, you can drag this SubProtocol component into the pipeline, open it, and add components into it.</sci:value>						</sci:arg>						<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Display Name</sci:help>							<sci:value>Property Defined Filter</sci:value>						</sci:arg>						<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol AutoLayout</sci:help>							<sci:value>1</sci:value>						</sci:arg>						<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol ShowComment</sci:help>							<sci:value>true</sci:value>						</sci:arg>						<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Add Protocol Comment Here</sci:help>							<sci:value>Add Protocol Comment Here</sci:value>						</sci:arg>						<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Disabled</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Custom Error Message</sci:help>						</sci:arg>						<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Icon</sci:help>							<sci:value>FILTERNODE</sci:value>						</sci:arg>						<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Revision</sci:help>							<sci:value>100</sci:value>						</sci:arg>						<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The component this component is based upon.</sci:help>							<sci:value>SubProtocol</sci:value>						</sci:arg>						<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>GUID</sci:help>							<sci:value>{74CB089F-EAA6-4FC4-A247-08453D1ADED4}</sci:value>						</sci:arg>						<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Point</sci:help>							<sci:value>938 -50</sci:value>						</sci:arg>						<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Scale</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>By Ref</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Fancy Help</sci:help>							<sci:value>100</sci:value>							<sci:value>Passes data records for which a specified property is defined</sci:value>							<sci:value>&lt;p&gt;For each incoming data record, the value of the property specified by &lt;i&gt;KeyProperty&lt;/i&gt; is checked.  If the value is defined, the record is sent out the Pass port.  Otherwise it is sent out the Fail port.&lt;/p&gt;</sci:value>							<sci:value>Generic</sci:value>							<sci:value/>							<sci:value>Generic</sci:value>							<sci:value>Data records for which the property is defined</sci:value>							<sci:value>Generic</sci:value>							<sci:value>Data records for which the property is NOT defined</sci:value>						</sci:arg>						<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Runtime Identifier</sci:help>							<sci:value>5:3</sci:value>						</sci:arg>						<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help/>						</sci:arg>						<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Location of the component in the database</sci:help>							<sci:value>Components\Generic\Filters\Is Property Defined Filter</sci:value>						</sci:arg>					</sci:component>					<sci:proplist>						<sci:propval name="RegistrationVersion">6.0.0.46</sci:propval>					</sci:proplist>				</sci:data>				<sci:data object="SciTegic.TransformMolecule.1">					<sci:component name="Standardize Molecule" version="2">						<sci:arg name="Action" type="StringType" required="false" visibility="visible" multi="true">							<sci:help>Options for the type of standardization you can perform. The default is to standardize the charging and stereochemistry of the molecule. If multiple actions are selected, they are performed in  the given order.</sci:help>							<sci:member>Invert Wedge Bond When Changing Direction</sci:member>							<sci:legalval>StandardizeStereo</sci:legalval>							<sci:legalval>StandardizeCharges</sci:legalval>							<sci:legalval>CenterMolecule</sci:legalval>							<sci:legalval>RemoveSingleAtomFragments</sci:legalval>							<sci:legalval>KeepSmallestFragment</sci:legalval>							<sci:legalval>KeepLargestFragment</sci:legalval>							<sci:legalval>RemoveLargestFragment</sci:legalval>							<sci:legalval>MakeNon[H]Atoms[C]Atoms</sci:legalval>							<sci:legalval>MakeNon[H]Atoms[A]Atoms</sci:legalval>							<sci:legalval>MakeNon[C,H]Atoms[Q]Atoms</sci:legalval>							<sci:legalval>MakeAllBondsSingle</sci:legalval>							<sci:legalval>ClearCoordinates</sci:legalval>							<sci:legalval selected="true">ClearMolecule</sci:legalval>							<sci:legalval>RemoveMolecule</sci:legalval>							<sci:legalval>ClearStereo</sci:legalval>							<sci:legalval>ClearUnknownStereo</sci:legalval>							<sci:legalval>ClearCisTransBondStereo</sci:legalval>							<sci:legalval>SetStereoFromCoordinates</sci:legalval>							<sci:legalval>RepositionStereoBonds</sci:legalval>							<sci:legalval>FixDirectionOfWedgeBonds</sci:legalval>							<sci:legalval>ClearCharges</sci:legalval>							<sci:legalval>ClearSgroupData</sci:legalval>							<sci:legalval>ClearHighlightColors</sci:legalval>							<sci:legalval>ClearQueryInfo</sci:legalval>							<sci:legalval>ClearAtomLabels</sci:legalval>							<sci:legalval>ClearBondLabels</sci:legalval>							<sci:legalval>NeutralizeBondedZwitterions</sci:legalval>							<sci:legalval>ClearUnusualValence</sci:legalval>						</sci:arg>						<sci:arg name="Invert Wedge Bond When Changing Direction" type="BoolType" required="false" visibility="visible" multi="false">							<sci:help>This parameter controls whether or not to invert the bond stereo (up or down) when changing the direction of the wedge bond by selecting &quot;FixDirectionOfWedgeBonds&quot; in the &lt;i&gt;Action&lt;/i&gt; parameter.</sci:help>							<sci:enabledscript>contains(parameter(&apos;Action&apos;), &apos;FixDirectionOfWedgeBonds&apos;)</sci:enabledscript>							<sci:legalval selected="true">True</sci:legalval>							<sci:legalval>False</sci:legalval>						</sci:arg>						<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">							<sci:help>Componet Attributes</sci:help>							<sci:legalval selected="true">ComponentTakesInput</sci:legalval>							<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>							<sci:legalval>ComponentReturnsFail</sci:legalval>							<sci:legalval>ComponentRunsLocal</sci:legalval>						</sci:arg>						<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The user who registered this component.</sci:help>							<sci:value>scitegic/chemistry</sci:value>						</sci:arg>						<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The date this component was registered.</sci:help>							<sci:value>Wed Apr 11 14:39:40 2007</sci:value>						</sci:arg>						<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Comment</sci:help>							<sci:value>Contains a number of actions that are useful for taking molecules from different sources and correcting non-uniform features.</sci:value>						</sci:arg>						<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Usage</sci:help>							<sci:value>One or more actions can be applied to each molecule to standardize the way molecules are presented to downstream components.Input             - Molecular data recordsOutput Pass  - Molecular data records with standardization changesDescription of StandardizeStereo option:Atoms that are perceived as true stereo atoms but which have no stereochemical markings (UnknownAtomStereo, EvenAtomStereo, or OddAtomStereo) are set to UnknownAtomStereo.  Atoms that have stereochemical markings but which are not true stereoatoms are set to NoAtomStereo. 2D or 3D coordinates are not used in this process.Similarly, bonds that are perceived as true stereo double bonds but which have no stereochemical markings (UnknownBondStereo, CisBondStereo, or TransBondStereo) are set to UnknownBondStereo.  Bonds that have stereochemical markings but which are not true stereo bonds are set to NoBondStereo. Again, 2D or 3D coordinates are not used in this process.</sci:value>						</sci:arg>						<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Display Name</sci:help>							<sci:value>Standardize Molecule</sci:value>						</sci:arg>						<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Custom Error Message</sci:help>						</sci:arg>						<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Icon</sci:help>							<sci:value>COMPONENTNODE</sci:value>						</sci:arg>						<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The component this component is based upon.</sci:help>							<sci:value>Standardize Charges</sci:value>						</sci:arg>						<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Disabled</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>GUID</sci:help>							<sci:value>{EFEA1A46-A6DB-4DB9-A5A9-C7F3D2ADFDE2}</sci:value>						</sci:arg>						<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Point</sci:help>							<sci:value>1238 -50</sci:value>						</sci:arg>						<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Fancy Help</sci:help>							<sci:value>100</sci:value>							<sci:value>Applies selected predefined actions to the input molecules</sci:value>							<sci:value>&lt;p&gt;One or more actions can be applied to each molecule to standardize the way molecules are presented to downstream components. &lt;p&gt;Standardization is important when comparing molecular libraries from different sources. If different rules were used for structural representation when creating these libraries, a straight comparison would yield incorrect results. This component allows you to apply a consistent set of rules to structures before comparing them.&lt;p&gt;Available actions:&lt;ul&gt;&lt;li&gt;&lt;strong&gt;StandardizeStereo: &lt;/strong&gt; Atoms that are perceived as true stereo atoms but which have no stereochemical markings (UnknownAtomStereo, EvenAtomStereo, or OddAtomStereo) are set to UnknownAtomStereo. Atoms that have stereochemical markings but which are not true stereoatoms are set to NoAtomStereo. 2D or 3D coordinates are not used in this process. &lt;br /&gt;Similarly, bonds that are perceived as true stereo double bonds, but which have no stereochemical markings (UnknownBondStereo, CisBondStereo, or TransBondStereo) are set to UnknownBondStereo. Bonds that have stereochemical markings but which are not true stereo bonds are set to NoBondStereo. Again, 2D or 3D coordinates are not used in this process.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;StandardizeCharges:&lt;/strong&gt; Sets standard formal charges for common functional groups: Quaternary Nitrogen: +1 &lt;br /&gt;Nitro groups: N+(=O)O- &lt;br&gt;Diazonium N: +1 &lt;br&gt;Oxygen with three attachments: +1 &lt;br&gt;X=O-C Oxygen: +1 &lt;br&gt;Sulfur with three attachments: +1 &lt;br&gt;S=O-C Sulfur: +1 &lt;br&gt;F, Cl, Br, I with no attachments: -1 &lt;br&gt;Note that halogen acids with explicit hydrogens (H-X) are not modified. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;CenterMolecule:&lt;/strong&gt; Translates the molecule to the center of geometry. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;RemoveSingleAtomFragments:&lt;/strong&gt; Removes all unattached atoms from the molecule. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;KeepSmallestFragment:&lt;/strong&gt; Keeps only the fragment with fewer atoms in the case of multifragment molecules. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;MakeNon[H]Atoms[C]Atoms:&lt;/strong&gt; Converts all the atoms in the molecule to Carbon. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;MakeNon[C,H]Atoms[Q]Atoms: &lt;/strong&gt; Converts all non-carbon, non-hydrogen atoms in the molecule to the Q query atom type. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;MakeNon[H]Atoms[A]Atoms: &lt;/strong&gt; Converts all non-hydrogen atoms in the molecule to the A query atom type. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;MakeAllBondsSingle: &lt;/strong&gt; Converts all the bonds in the molecule to Single bonds. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;ClearCoordinates:&lt;/strong&gt; Sets all x, y, z coordinates to zero. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;ClearMolecule:&lt;/strong&gt; Deletes all atoms and bonds in the molecule, keeping the molecule object in the data record. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;RemoveMolecule:&lt;/strong&gt; Deletes the molecule object from the data record. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;ClearStereo: &lt;/strong&gt; Sets all atoms and bonds to NoStereo. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;ClearUnknownStereo:&lt;/strong&gt; Sets all atoms and bonds that are marked UnknownStereo to NoStereo. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;ClearCisTransBondStereo:&lt;/strong&gt; Sets all bonds that are marked CisStereo or TransStereo to UnknownStereo. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;ClearCharges: &lt;/strong&gt; Sets all formal charges to zero. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;SetStereoFromCoordinates: &lt;/strong&gt; This option uses the 2D coordinates and up/down bond markings, or the 3D coordinates, to assign the stereochemistry of the atoms or bonds. Typically, this is done by the readers or the molecules from text components. Occasionally, components may create molecules that need to have their stereo reperceived. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;RepositionStereoBonds: &lt;/strong&gt; This option repositions the stereo bond markings, trying to find the best bond to mark as a wedge bond for each stereo atom. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;FixDirectionOfWedgeBonds: &lt;/strong&gt; This option checks the wedge bonds in the molecule to make sure that the wedge is drawn with the stereo atom at the narrow end of the wedge. Any wedge bond for which there is a stereo atom at the wide end and no stereo atom at the narrow end is reversed to point in the other direction. A separate option, &lt;i&gt;Invert Wedge Bond When Changing Direction&lt;/i&gt;, controls whether or not to invert the bond stereo (up or down) when changing the direction of the wedge bond. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;ClearQueryInfo: &lt;/strong&gt; Deletes all query information from atoms and bonds. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;NeutralizeBondedZwitterions:&lt;/strong&gt; Converts directly bonded zwitterions (positively charged atom bonded to negatively charged atom, A+B-) to the neutral representation (A=B). &lt;/li&gt;&lt;li&gt;&lt;strong&gt;ClearSGroupData:&lt;/strong&gt; Clears any SGroup information from the molecule. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;ClearHighlightColors:&lt;/strong&gt; Clears any highlight colors from atoms and bonds. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;ClearAtomLabels:&lt;/strong&gt; Clears any labels assigned to the atoms. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;ClearBondLabels:&lt;/strong&gt; Clears any labels assigned to the bonds. &lt;/li&gt;&lt;li&gt;&lt;strong&gt;NeutralizeBondedZwitterions:&lt;/strong&gt; Converts directly bonded zwitterions (positively charged atom bonded to negatively charged atom, A+B-) to the neutral representation (A=B)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;ClearUnusualValence:&lt;/strong&gt; Clears any atom valence query features and resets all implicit hydrogen counts to their standard values.&lt;/li&gt;&lt;/ul&gt;</sci:value>							<sci:value>Molecule</sci:value>							<sci:value/>							<sci:value>Generic</sci:value>							<sci:value>Transformed molecules </sci:value>							<sci:value>None</sci:value>							<sci:value/>						</sci:arg>						<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The server version when this component was registered</sci:help>							<sci:value>6.1.0.16</sci:value>						</sci:arg>						<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Runtime Identifier</sci:help>							<sci:value>5:4</sci:value>						</sci:arg>						<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Location of the component in the database</sci:help>							<sci:value>Components\Chemistry\Manipulators\Standardize Molecule</sci:value>						</sci:arg>					</sci:component>				</sci:data>				<sci:data object="SciTegic.PropertyFunctions.1">					<sci:component name="Create New Property" version="2">						<sci:arg name="NewProperty" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Name of the new property to create</sci:help>							<sci:value>Type</sci:value>						</sci:arg>						<sci:arg name="DefaultValue" type="StringType" required="false" visibility="visible" multi="false">							<sci:help>Value to give to the new property</sci:help>							<sci:value>Tautomer</sci:value>						</sci:arg>						<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">							<sci:help>Component Attributes</sci:help>							<sci:legalval selected="true">ComponentTakesInput</sci:legalval>							<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>							<sci:legalval>ComponentReturnsFail</sci:legalval>							<sci:legalval>ComponentRunsLocal</sci:legalval>						</sci:arg>						<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>the action to perform</sci:help>							<sci:value>Create</sci:value>						</sci:arg>						<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The user who registered this component.</sci:help>							<sci:value>scitegic/core</sci:value>						</sci:arg>						<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The date this component was registered.</sci:help>							<sci:value>Fri Sep 15 10:04:44 2006</sci:value>						</sci:arg>						<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Comment</sci:help>							<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>						</sci:arg>						<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Usage</sci:help>							<sci:value>When you are creating a pipeline which requires a subprotocol as a component, you can drag this SubProtocol component into the pipeline, open it, and add components into it.</sci:value>						</sci:arg>						<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Display Name</sci:help>							<sci:value>Type</sci:value>						</sci:arg>						<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol AutoLayout</sci:help>							<sci:value>1</sci:value>						</sci:arg>						<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol ShowComment</sci:help>							<sci:value>true</sci:value>						</sci:arg>						<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Add Protocol Comment Here</sci:help>							<sci:value>Add Protocol Comment Here</sci:value>						</sci:arg>						<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Disabled</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Custom Error Message</sci:help>						</sci:arg>						<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Icon</sci:help>							<sci:value>EXPRESSIONNODE</sci:value>						</sci:arg>						<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Revision</sci:help>							<sci:value>100</sci:value>						</sci:arg>						<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The component this component is based upon.</sci:help>							<sci:value>SubProtocol</sci:value>						</sci:arg>						<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>GUID</sci:help>							<sci:value>{EDF965C5-6B38-4DB7-A9EB-FD885343B2CC}</sci:value>						</sci:arg>						<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Point</sci:help>							<sci:value>1538 -50</sci:value>						</sci:arg>						<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Scale</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>By Ref</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Fancy Help</sci:help>							<sci:value>100</sci:value>							<sci:value>Creates a new property with a specified value</sci:value>							<sci:value>For every data record that enters the component, a new property with name given by &lt;i&gt;NewProperty&lt;/i&gt; is created with the value specified in &lt;i&gt;DefaultValue&lt;/i&gt;.For example, to create a new property with today&apos;s date for each record, enter &quot;Date&quot; in &lt;i&gt;NewProperty&lt;/i&gt;and today&apos;s date in &lt;i&gt;DefaultValue&lt;/i&gt;.</sci:value>							<sci:value>Generic</sci:value>							<sci:value/>							<sci:value>Generic</sci:value>							<sci:value/>							<sci:value>None</sci:value>							<sci:value/>						</sci:arg>						<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The server version when this component was registered</sci:help>							<sci:value>6.0.0.46</sci:value>						</sci:arg>						<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Runtime Identifier</sci:help>							<sci:value>5:5</sci:value>						</sci:arg>						<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Location of the component in the database</sci:help>							<sci:value>Components\Generic\Manipulators\Create New Property</sci:value>						</sci:arg>					</sci:component>				</sci:data>				<sci:data object="SciTegic.EvaluateExpression.1">					<sci:component name="Custom Manipulator (PilotScript)" version="2">						<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">							<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>							<sci:member>Initial Expression</sci:member>							<sci:member>Final Expression</sci:member>							<sci:member>Keep Calculated Properties</sci:member>							<sci:value>FOR #i IN 1 .. numvalues(IndexA) LOOP 	keyA := IndexA[#i];	FOR #j IN 1 .. numvalues(IndexB) LOOP 		key := keyA.&quot; &quot;.IndexB[#j];		APPEND(pairs, key); 	END LOOP; END LOOP; </sci:value>						</sci:arg>						<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">							<sci:help>&lt;p&gt;This expression is executed only the first time data passes into the component.&lt;p/&gt; Since there is no data available at initialization time, only expressions referencing global properties are allowed.&lt;/p&gt;</sci:help>						</sci:arg>						<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">							<sci:help>&lt;p&gt;This expression is executed only at finalization (after the last data passes out of the component).&lt;p/&gt; Since there is no data available at finalization time, only expressions referencing global properties are allowed.&lt;/p&gt;</sci:help>						</sci:arg>						<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">							<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>							<sci:legalval selected="true">True</sci:legalval>							<sci:legalval>False</sci:legalval>						</sci:arg>						<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">							<sci:help>Component Attributes</sci:help>							<sci:legalval selected="true">ComponentTakesInput</sci:legalval>							<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>							<sci:legalval>ComponentReturnsFail</sci:legalval>							<sci:legalval>ComponentRunsLocal</sci:legalval>						</sci:arg>						<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">							<sci:help>When TRUE, controls which exit port is used foreach data record by evaluating the final expression(or only one) listed in the &quot;Expression&quot; parameter.   -Pass (green) port when expression true   -Fail (red) port when expression false</sci:help>							<sci:legalval>True</sci:legalval>							<sci:legalval selected="true">False</sci:legalval>						</sci:arg>						<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">							<sci:help>Version of expression parser to use.</sci:help>							<sci:value>2</sci:value>						</sci:arg>						<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Comment</sci:help>							<sci:value>Processes commands expressed in PilotScript syntax to apply rapidmanipulations to data record properties. In this way, the component may becustomized to build a new, specialized data manipulation component.</sci:value>						</sci:arg>						<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The user who registered this component.</sci:help>							<sci:value>scitegic/core</sci:value>						</sci:arg>						<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The date this component was registered.</sci:help>							<sci:value>Mon Apr 23 12:20:45 2007</sci:value>						</sci:arg>						<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Usage</sci:help>							<sci:value>The &apos;Expression&apos;  is evaluated for each data record, and may alter and manipulate the properties of the data objects. The &apos;Initial expression&apos; is evaluated the first time data passes into the component and is typically used for initializing global variables. See the online documentation for full details of PilotScript expression syntax.Input             - Data recordsOutput Pass  - All Data records</sci:value>						</sci:arg>						<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Display Name</sci:help>							<sci:value>Get Pairs</sci:value>						</sci:arg>						<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The component this component is based upon.</sci:help>							<sci:value>Custom Manipulator (PilotScript)</sci:value>						</sci:arg>						<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component RunTimeID</sci:help>							<sci:value>5:6</sci:value>						</sci:arg>						<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Custom Error Message</sci:help>						</sci:arg>						<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Icon</sci:help>							<sci:value>EXPRESSIONNODE</sci:value>						</sci:arg>						<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Disabled</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>GUID</sci:help>							<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>						</sci:arg>						<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Point</sci:help>							<sci:value>1813 -50</sci:value>						</sci:arg>						<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Fancy Help</sci:help>							<sci:value>100</sci:value>							<sci:value>Applies a PilotScript expression to each data record</sci:value>							<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:&lt;blockquote&gt;&lt;code&gt;A := 10;&lt;/code&gt;&lt;/blockquote&gt;creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; &lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;</sci:value>							<sci:value>Generic</sci:value>							<sci:value/>							<sci:value>Generic</sci:value>							<sci:value/>							<sci:value>None</sci:value>							<sci:value/>						</sci:arg>						<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The server version when this component was registered</sci:help>							<sci:value>6.1.0.17</sci:value>						</sci:arg>						<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Location of the component in the database</sci:help>							<sci:value>Components\Generic\Manipulators\Custom Manipulator (PilotScript)</sci:value>						</sci:arg>					</sci:component>				</sci:data>				<sci:data object="SciTegic.SeparateValues.1">					<sci:component name="Unmerge Data" version="2">						<sci:arg name="PropertyNames" type="StringType" required="false" visibility="visible" multi="false">							<sci:help>&lt;p&gt;The names of the one or more properties to separate and return as separate data records.  If no property names are given, then all properties withmultiple values will be unmerged. If multiple properties are unmerged, the number of unmerged records is the number of values of a property with the maximum number of values.</sci:help>							<sci:value>Pairs</sci:value>						</sci:arg>						<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">							<sci:help>Component Attributes</sci:help>							<sci:legalval selected="true">ComponentTakesInput</sci:legalval>							<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>							<sci:legalval>ComponentReturnsFail</sci:legalval>							<sci:legalval>ComponentRunsLocal</sci:legalval>						</sci:arg>						<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Comment</sci:help>							<sci:value>Separates data records containing multiple values into multiple duplicate records each containing only one of the values.</sci:value>						</sci:arg>						<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The user who registered this component.</sci:help>							<sci:value>scitegic/core</sci:value>						</sci:arg>						<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The date this component was registered.</sci:help>							<sci:value>Fri Sep 08 07:32:06 2006</sci:value>						</sci:arg>						<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Usage</sci:help>							<sci:value>Each incoming data record with more than one value in the specified property is duplicated for each of the multiple values.  For example, a data object with three values would generate three data objects, each with only one of the three values (but otherwise identical).If no property names are given, then all properties with multiple values are unmerged.If multiple properties are unmerged, they must contain the same number of values.Input             - Data recordsOutput Pass  - Data records (containing the separated values)</sci:value>						</sci:arg>						<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Display Name</sci:help>							<sci:value>Unmerge Data</sci:value>						</sci:arg>						<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help/>							<sci:value>Unmerge Data</sci:value>						</sci:arg>						<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component RunTimeID</sci:help>							<sci:value>5:7</sci:value>						</sci:arg>						<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Custom Error Message</sci:help>						</sci:arg>						<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Icon</sci:help>							<sci:value>GENERATORNODE</sci:value>						</sci:arg>						<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Disabled</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Unmerge Data</sci:help>							<sci:value>{5E28C170-2FEC-4A3C-90A6-2DCEAA330E9D}</sci:value>						</sci:arg>						<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Point</sci:help>							<sci:value>2113 -50</sci:value>						</sci:arg>						<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Fancy Help</sci:help>							<sci:value>100</sci:value>							<sci:value>Separates data records containing array properties into individual records with one array value per record</sci:value>							<sci:value>&lt;p&gt;Each incoming data record with more than one value for the property or properties specified by &lt;i&gt;PropertyNames&lt;/i&gt; is duplicated for each of the values.  For example, a input data record with three values will generate three output data records.  Each output record will contain one of the values for the &lt;i&gt;PropertyNames&lt;/i&gt; property, and all other properties will be identical.&lt;/p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;If no property names are given, then all properties with multiple values are unmerged.  In this case, unexpected occurrences of arrays in a property will cause unintentional unmerge operations.  Try to specify a value for &lt;i&gt;PropertyNames&lt;/i&gt; if possible.&lt;/li&gt;&lt;li&gt;If multiple unmerge properties are specified, the number of data records that result from unmerging a given incoming data record is equal to the number of values of the unmerge property that has the most values.  That is, if two unmerge properties, &quot;A&quot; and &quot;B&quot; are specified where A has 5 values and B has 7 values, then 7 data records will result.  The first 5 records will contain, in order, the 5 values of A.  For the last two records, A will be undefined.  All other properties will be duplicated on each record.&lt;/li&gt;&lt;/ul&gt;</sci:value>							<sci:value>Generic</sci:value>							<sci:value/>							<sci:value>Generic</sci:value>							<sci:value>Data records containing the separated values for the property or properties specified.</sci:value>							<sci:value>None</sci:value>							<sci:value/>						</sci:arg>						<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help/>						</sci:arg>						<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Location of the component in the database</sci:help>							<sci:value>Components\Generic\Manipulators\Unmerge Data</sci:value>						</sci:arg>					</sci:component>					<sci:proplist>						<sci:propval name="RegistrationVersion">6.0.0.44</sci:propval>					</sci:proplist>				</sci:data>				<sci:data object="SciTegic.EvaluateExpression.1">					<sci:component name="Custom Manipulator (PilotScript)" version="2">						<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">							<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>							<sci:member>Initial Expression</sci:member>							<sci:member>Final Expression</sci:member>							<sci:member>Keep Calculated Properties</sci:member>							<sci:value>array := RSPLIT(Pairs, &quot; &quot;);IndexA := array[1];IndexB := array[2];</sci:value>						</sci:arg>						<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">							<sci:help>&lt;p&gt;This expression is executed only the first time data passes into the component.&lt;p/&gt; Since there is no data available at initialization time, only expressions referencing global properties are allowed.&lt;/p&gt;</sci:help>						</sci:arg>						<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">							<sci:help>&lt;p&gt;This expression is executed only at finalization (after the last data passes out of the component).&lt;p/&gt; Since there is no data available at finalization time, only expressions referencing global properties are allowed.&lt;/p&gt;</sci:help>						</sci:arg>						<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">							<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>							<sci:legalval selected="true">True</sci:legalval>							<sci:legalval>False</sci:legalval>						</sci:arg>						<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">							<sci:help>Component Attributes</sci:help>							<sci:legalval selected="true">ComponentTakesInput</sci:legalval>							<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>							<sci:legalval>ComponentReturnsFail</sci:legalval>							<sci:legalval>ComponentRunsLocal</sci:legalval>						</sci:arg>						<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">							<sci:help>When TRUE, controls which exit port is used foreach data record by evaluating the final expression(or only one) listed in the &quot;Expression&quot; parameter.   -Pass (green) port when expression true   -Fail (red) port when expression false</sci:help>							<sci:legalval>True</sci:legalval>							<sci:legalval selected="true">False</sci:legalval>						</sci:arg>						<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">							<sci:help>Version of expression parser to use.</sci:help>							<sci:value>2</sci:value>						</sci:arg>						<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Comment</sci:help>							<sci:value>Processes commands expressed in PilotScript syntax to apply rapidmanipulations to data record properties. In this way, the component may becustomized to build a new, specialized data manipulation component.</sci:value>						</sci:arg>						<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The user who registered this component.</sci:help>							<sci:value>scitegic/core</sci:value>						</sci:arg>						<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The date this component was registered.</sci:help>							<sci:value>Mon Apr 23 12:20:45 2007</sci:value>						</sci:arg>						<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Usage</sci:help>							<sci:value>The &apos;Expression&apos;  is evaluated for each data record, and may alter and manipulate the properties of the data objects. The &apos;Initial expression&apos; is evaluated the first time data passes into the component and is typically used for initializing global variables. See the online documentation for full details of PilotScript expression syntax.Input             - Data recordsOutput Pass  - All Data records</sci:value>						</sci:arg>						<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Display Name</sci:help>							<sci:value>Custom Manipulator (PilotScript)</sci:value>						</sci:arg>						<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The component this component is based upon.</sci:help>							<sci:value>Custom Manipulator (PilotScript)</sci:value>						</sci:arg>						<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component RunTimeID</sci:help>							<sci:value>5:8</sci:value>						</sci:arg>						<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Custom Error Message</sci:help>						</sci:arg>						<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Icon</sci:help>							<sci:value>EXPRESSIONNODE</sci:value>						</sci:arg>						<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Disabled</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>GUID</sci:help>							<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>						</sci:arg>						<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Point</sci:help>							<sci:value>2388 -50</sci:value>						</sci:arg>						<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Fancy Help</sci:help>							<sci:value>100</sci:value>							<sci:value>Applies a PilotScript expression to each data record</sci:value>							<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:&lt;blockquote&gt;&lt;code&gt;A := 10;&lt;/code&gt;&lt;/blockquote&gt;creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; &lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;</sci:value>							<sci:value>Generic</sci:value>							<sci:value/>							<sci:value>Generic</sci:value>							<sci:value/>							<sci:value>None</sci:value>							<sci:value/>						</sci:arg>						<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The server version when this component was registered</sci:help>							<sci:value>6.1.0.17</sci:value>						</sci:arg>						<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Location of the component in the database</sci:help>							<sci:value>Components\Generic\Manipulators\Custom Manipulator (PilotScript)</sci:value>						</sci:arg>					</sci:component>				</sci:data>				<sci:data object="SciTegic.PropertyFunctions.1">					<sci:component name="Keep Properties" version="2">						<sci:arg name="PropertyList" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Comma-separated list of property names to keep</sci:help>							<sci:member>RenameList</sci:member>							<sci:value>IndexA, IndexB, Type</sci:value>						</sci:arg>						<sci:arg name="RenameList" type="StringType" required="false" visibility="visible" multi="false">							<sci:help>If provided, it causes the properties given in PropertyList to be renamed to the corresponding name in this list.  If not provided, then no properties are renamed.</sci:help>						</sci:arg>						<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">							<sci:help>Component Attributes</sci:help>							<sci:legalval selected="true">ComponentTakesInput</sci:legalval>							<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>							<sci:legalval>ComponentReturnsFail</sci:legalval>							<sci:legalval>ComponentRunsLocal</sci:legalval>						</sci:arg>						<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>the action to perform</sci:help>							<sci:value>Keep</sci:value>						</sci:arg>						<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The user who registered this component.</sci:help>							<sci:value>scitegic/core</sci:value>						</sci:arg>						<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The date this component was registered.</sci:help>							<sci:value>Tue Oct 17 16:03:31 2006</sci:value>						</sci:arg>						<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Comment</sci:help>							<sci:value>Removes all but the specified properties from the property list.</sci:value>						</sci:arg>						<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Usage</sci:help>							<sci:value>&apos;PropertyList&apos; contains a comma-separated list of the property names that you wish to keep.  All other properties will be removed.Input             - Data recordsOutput Pass  - All Data records</sci:value>						</sci:arg>						<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Display Name</sci:help>							<sci:value>Keep Properties</sci:value>						</sci:arg>						<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol AutoLayout</sci:help>							<sci:value>true</sci:value>						</sci:arg>						<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol ShowComment</sci:help>							<sci:value>false</sci:value>						</sci:arg>						<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Add Protocol Comment Here</sci:help>							<sci:value>Add Protocol Comment Here</sci:value>						</sci:arg>						<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Disabled</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Custom Error Message</sci:help>						</sci:arg>						<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Icon</sci:help>							<sci:value>EXPRESSIONNODE</sci:value>						</sci:arg>						<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Revision</sci:help>							<sci:value>100</sci:value>						</sci:arg>						<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The component this component is based upon.</sci:help>							<sci:value>SubProtocol</sci:value>						</sci:arg>						<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Scale</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Point</sci:help>							<sci:value>2688 -50</sci:value>						</sci:arg>						<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>GUID</sci:help>							<sci:value>{456195EF-9708-4367-B3DD-21EBF3796604}</sci:value>						</sci:arg>						<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Fancy Help</sci:help>							<sci:value>100</sci:value>							<sci:value>Keeps only the specified properties</sci:value>							<sci:value>For each incoming data record, retains only the properties found in the list of property names specified by &lt;i&gt;PropertyList&lt;/i&gt;.  All other properties are removed.&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;Use &lt;i&gt;RenameList&lt;/i&gt; if you wish to change the names of the retained properties.&lt;/ul&gt;&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;To remove specified properties from each data record, use &lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;Remove Properties&lt;/a&gt;.&lt;/ul&gt;</sci:value>							<sci:value>Generic</sci:value>							<sci:value/>							<sci:value>Generic</sci:value>							<sci:value>With only the specified properties remaining</sci:value>							<sci:value>None</sci:value>							<sci:value/>						</sci:arg>						<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The server version when this component was registered</sci:help>							<sci:value>6.0.1.4</sci:value>						</sci:arg>						<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">							<sci:help>By Ref</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Protocol Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Runtime Identifier</sci:help>							<sci:value>5:9</sci:value>						</sci:arg>						<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Location of the component in the database</sci:help>							<sci:value>Components\Generic\Manipulators\Keep Properties</sci:value>						</sci:arg>					</sci:component>				</sci:data>				<sci:connect from="0" to="1" type="true"/>				<sci:connect from="1" to="2" type="true"/>				<sci:connect from="2" to="3" type="true"/>				<sci:connect from="3" to="4" type="true"/>				<sci:connect from="4" to="5" type="true"/>				<sci:connect from="5" to="6" type="true"/>				<sci:connect from="6" to="7" type="true"/>				<sci:connect from="7" to="8" type="true"/>				<sci:connect from="8" to="9" type="true"/>			</sci:protocol>		</sci:data>		<sci:data object="SciTegic.Protocol.1">			<sci:component name="HTML Table Viewer" version="2">				<sci:arg name="Maximum Rows" type="LongType" required="true" visibility="visible" multi="false">					<sci:help>Specifies the maximum number of table rows in the HTML page</sci:help>					<sci:value>2000</sci:value>				</sci:arg>				<sci:arg name="Rows Per Page" type="StringType" required="false" visibility="visible" multi="false">					<sci:help>The number of rows displayed on each page</sci:help>					<sci:value>25</sci:value>				</sci:arg>				<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">					<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>					<sci:value>temphtml</sci:value>				</sci:arg>				<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">					<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.Other properties are created on the global property listand so are accessible from all protocols.</sci:help>					<sci:value>HTML Filename</sci:value>				</sci:arg>				<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">					<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>					<sci:legalval>True</sci:legalval>					<sci:legalval selected="true">False</sci:legalval>				</sci:arg>				<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">					<sci:help>Component Attributes</sci:help>					<sci:legalval selected="true">ComponentTakesInput</sci:legalval>					<sci:legalval>ComponentReturnsPass</sci:legalval>					<sci:legalval>ComponentReturnsFail</sci:legalval>					<sci:legalval>ComponentRunsLocal</sci:legalval>				</sci:arg>				<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">					<sci:help>The optional title of the HTML document</sci:help>				</sci:arg>				<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">					<sci:help>Protocol Options</sci:help>					<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>					<sci:legalval>Cant Replace With Copy</sci:legalval>					<sci:legalval>Cant Open</sci:legalval>				</sci:arg>				<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The user who registered this component.</sci:help>					<sci:value>scitegic/generic</sci:value>				</sci:arg>				<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The date this component was registered.</sci:help>					<sci:value>Wed Sep 20 14:45:58 2006</sci:value>				</sci:arg>				<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Comment</sci:help>					<sci:value>Generates and displays an HTML table page of molecules and their properties.</sci:value>				</sci:arg>				<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Usage</sci:help>					<sci:value>This component will generate and display an HTML page in Internet Explorer of molecules and their associated properties as a table with a single molecule per row. See also the &apos;HTML Grouped Viewer&apos; and &apos;HTML Cluster Viewer&apos; for alternative displays of multiple molecules</sci:value>				</sci:arg>				<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Display Name</sci:help>					<sci:value>HTML Table Viewer</sci:value>				</sci:arg>				<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol AutoLayout</sci:help>					<sci:value>true</sci:value>				</sci:arg>				<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol ShowComment</sci:help>					<sci:value>false</sci:value>				</sci:arg>				<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Add Protocol Comment Here</sci:help>					<sci:value>Add Protocol Comment Here</sci:value>				</sci:arg>				<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Point</sci:help>					<sci:value>1813 -50</sci:value>				</sci:arg>				<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Disabled</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Custom Error Message</sci:help>				</sci:arg>				<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Icon</sci:help>					<sci:value>ViewerNode</sci:value>				</sci:arg>				<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Revision</sci:help>					<sci:value>100</sci:value>				</sci:arg>				<sci:arg name="ProtocolCommentSize" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>ProtocolCommentSize</sci:help>					<sci:value>1100 500</sci:value>				</sci:arg>				<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The component this component is based upon.</sci:help>					<sci:value>SubProtocol</sci:value>				</sci:arg>				<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>GUID</sci:help>					<sci:value>{F6A20C96-BC1C-48f3-82E9-4D8F023F82EE}</sci:value>				</sci:arg>				<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol Scale</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>By Ref</sci:help>					<sci:value>1</sci:value>				</sci:arg>				<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">					<sci:help>Fancy Help</sci:help>					<sci:value>100</sci:value>					<sci:value>Displays data records as HTML in Internet Explorer</sci:value>					<sci:value>&lt;p&gt;Generates and displays an HTML table page of data records, with one record per row. Each property becomes a column in the table and each value a cell.&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;Molecules will be displayed if present.&lt;/li&gt;&lt;li&gt;For hierarchical data records, only top level properties are displayed.&lt;/li&gt;&lt;li&gt;Any grouped data is displayed in nested tables.&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;If you prefer not to view the grouped data, use &lt;a href=&quot;javascript:DoLink(&apos;{ACCDEEEF-FEED-4B27-B263-BA531EABFC9C}&apos;)&quot;&gt;Delete Children&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;For more control over the display of molecules, use &lt;a href=&quot;javascript:DoLink(&apos;{485D30CD-737C-4AD3-89C9-F81CB20E47AE}&apos;)&quot;&gt;HTML Molecular Table Viewer&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;</sci:value>					<sci:value>None</sci:value>					<sci:value/>					<sci:value>None</sci:value>					<sci:value/>					<sci:value>None</sci:value>					<sci:value/>				</sci:arg>				<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The server version when this component was registered</sci:help>					<sci:value>6.0.1.0</sci:value>				</sci:arg>				<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Sticky Notes</sci:help>				</sci:arg>				<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol Sticky Notes</sci:help>				</sci:arg>				<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Runtime Identifier</sci:help>					<sci:value>6</sci:value>				</sci:arg>				<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol Scale</sci:help>					<sci:value>100</sci:value>				</sci:arg>				<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>Subprotocol Made Link Into Copy</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Location of the component in the database</sci:help>					<sci:value>Components\Generic\Viewers\HTML Table Viewer</sci:value>				</sci:arg>			</sci:component>			<sci:protocol/>		</sci:data>		<sci:data object="SciTegic.MDLSDReader.1">			<sci:component name="SD Reader" version="2">				<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">					<sci:help>The file or URL source to read</sci:help>					<sci:member>Maximum</sci:member>					<sci:member>SourceTag</sci:member>					<sci:member>Keep Properties</sci:member>				</sci:arg>				<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">					<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>				</sci:arg>				<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">					<sci:help>&lt;p&gt;The type of tag to create to identify the source of data records. A property called &lt;b&gt;SourceTag&lt;/b&gt; is created and holds the value indicated.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;None&lt;/b&gt;: No SourceTag property is created and any existing ones are removed.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Filename&lt;/b&gt;: The name of the file read.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FilenameAndExtension&lt;/b&gt;: The name of the file read with its file extension.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FullFilename&lt;/b&gt;: The name of the file read, including the directory path.&lt;/li&gt;&lt;li&gt;&lt;b&gt;ZipFilename&lt;/b&gt;: When reading a compressed zip file, the filename within the compressed archive.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Number&lt;/b&gt;: When multiple files are read in this component, they are numbered 1,2,3...&lt;/li&gt;&lt;li&gt;&lt;b&gt;Letter&lt;/b&gt;: When multiple files are read in this component, they are lettered A, B, C...&lt;/li&gt;&lt;li&gt;&lt;b&gt;KeepCurrent&lt;/b&gt;: Keeps the current value of SourceTag.&lt;/li&gt;&lt;/ul&gt;</sci:help>					<sci:legalval selected="true">None</sci:legalval>					<sci:legalval>Filename</sci:legalval>					<sci:legalval>FilenameAndExtension</sci:legalval>					<sci:legalval>FullFilename</sci:legalval>					<sci:legalval>ZipFilename</sci:legalval>					<sci:legalval>Number</sci:legalval>					<sci:legalval>Letter</sci:legalval>					<sci:legalval>KeepCurrent</sci:legalval>				</sci:arg>				<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">					<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.</sci:help>				</sci:arg>				<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">					<sci:help>Contains less commonly used parameters</sci:help>					<sci:member>ReadProperties</sci:member>					<sci:member>PutNameInProperty</sci:member>					<sci:member>ReadQueryInfo</sci:member>					<sci:member>PutCommentInProperty</sci:member>					<sci:member>SD Format Options</sci:member>				</sci:arg>				<sci:arg name="SD Format Options" type="StringType" required="false" visibility="visible" multi="true">					<sci:help>&lt;p&gt;Options available for the SD Reader:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Properties Can Contain $$$$:&lt;/b&gt;  By the MDL CTFile standard, a property can contain a &apos;$$$$&apos;-line.  Properties or data field values are terminated by a blank line.  Only then will the &apos;$$$$&apos;-line terminate the full data block.  Setting this option off will terminate the data block upon any read of a &apos;$$$$&apos;-line.  This option is available to provide compatibility with some 3rd Party SD files.&lt;/li&gt;&lt;li&gt;&lt;b&gt;One-space Lines Terminate Properties:&lt;/b&gt;  By the MDL CTFile standard, properties or data fields values are terminated by a blank line. Selecting this option will terminate the data block when encountering a line containing a space as the only character in the line.  This option is available to provide compatibility with some 3rd Party SD files.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Unwrap Long Property Lines:&lt;/b&gt;  By the MDL CTFile standard, lines in property fields cannot exceed 200 characters.  When this option is selected and a property line of exactly 200 characters is found, the newline character will be ignored and property string will continue on the next line.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Read Unknown Stereo Parity:&lt;/b&gt;  When selected, the SD Reader will use the &apos;Atom Parity&apos; value (parity of &apos;3&apos;) to mark unknown stereo centers in 3D mol files.  This will leave these atoms marked as &apos;unknown stereo&apos; and will not calculate the stereo from the coordinates.&lt;/li&gt;&lt;/ul&gt;</sci:help>					<sci:legalval selected="true">Properties Can Contain $$$$</sci:legalval>					<sci:legalval>One-space Lines Terminate Properties</sci:legalval>					<sci:legalval selected="true">Unwrap Long Property Lines</sci:legalval>					<sci:legalval>Read Unknown Stereo Parity</sci:legalval>				</sci:arg>				<sci:arg name="ReadProperties" type="BoolType" required="true" visibility="visible" multi="false">					<sci:help>Select True to read the properties for each molecule (in addition to the structures)</sci:help>					<sci:legalval selected="true">True</sci:legalval>					<sci:legalval>False</sci:legalval>				</sci:arg>				<sci:arg name="ReadQueryInfo" type="BoolType" required="true" visibility="visible" multi="false">					<sci:help>If properties starting with &quot;QueryInfo&quot; are present, use them to set up query information on the atoms and bonds. (This is how, for example, SMARTS query information can be preserved when writing to an MDL SD format file.) For molecules saved in MDL format, this information only contains information that cannot be written out in MDL SD format.</sci:help>					<sci:legalval>True</sci:legalval>					<sci:legalval selected="true">False</sci:legalval>				</sci:arg>				<sci:arg name="PutNameInProperty" type="StringType" required="false" visibility="visible" multi="false">					<sci:help>What to call the property that holds the name of each molecule</sci:help>					<sci:value>Name</sci:value>				</sci:arg>				<sci:arg name="PutCommentInProperty" type="StringType" required="false" visibility="visible" multi="false">					<sci:help>What to call the property that holds the comment associated with each molecule</sci:help>				</sci:arg>				<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">					<sci:help>Component Attributes</sci:help>					<sci:legalval>ComponentTakesInput</sci:legalval>					<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>					<sci:legalval>ComponentReturnsFail</sci:legalval>					<sci:legalval>ComponentRunsLocal</sci:legalval>				</sci:arg>				<sci:arg name="AllowUnknownDoubleBondsFromCoordinates" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>According to the MDL CTfile specifications, the cis/trans character of double bonds with bond stereo set to zero is determined from the coordinates. This parameter controls whether or not to assign unknown bond stereo to double bonds for which the stereo could not be determined from the coordinates, either because there are no coordinates or because of colinearity issues.  When the parameter is set to False and the stereo could not be determined, no specific stereo configuration is assigned to the double bond, but it is not marked as unknown stereo.</sci:help>					<sci:legalval selected="true">True</sci:legalval>					<sci:legalval>False</sci:legalval>				</sci:arg>				<sci:arg name="DeleteOnClose" type="BoolType" required="true" visibility="nevershow" multi="false">					<sci:help>Delete the file after the data is read [Be Careful!]</sci:help>					<sci:legalval>True</sci:legalval>					<sci:legalval selected="true">False</sci:legalval>				</sci:arg>				<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Comment</sci:help>					<sci:value>Reads MDL MOL (molecule CTAB) files and MDL SD (structured data) files.</sci:value>				</sci:arg>				<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The user who registered this component.</sci:help>					<sci:value>scitegic/chemistry</sci:value>				</sci:arg>				<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The date this component was registered.</sci:help>					<sci:value>Tue Mar 20 10:03:13 2007</sci:value>				</sci:arg>				<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Usage</sci:help>					<sci:value>Creates a molecule data record for each molecule represented in the &apos;Source&apos; data file.  Can read zipped (.zip) and url-based files.  Any properties contained in the file will be read into the data records created if the user specifies.Output Pass  - Molecule data records</sci:value>				</sci:arg>				<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Display Name</sci:help>					<sci:value>SD Reader</sci:value>				</sci:arg>				<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Custom Error Message</sci:help>				</sci:arg>				<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Icon</sci:help>					<sci:value>DOCUMENTNODE</sci:value>				</sci:arg>				<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>GUID</sci:help>					<sci:value>{CA65B896-4FE6-4E3A-B884-DC16B53B8D26}</sci:value>				</sci:arg>				<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The component this component is based upon.</sci:help>					<sci:value>SD Reader</sci:value>				</sci:arg>				<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Disabled</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Point</sci:help>					<sci:value>88 -350</sci:value>				</sci:arg>				<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">					<sci:help>Fancy Help</sci:help>					<sci:value>100</sci:value>					<sci:value>Reads MDL MOL (molecule CTAB) files and MDL SD (structured data) files</sci:value>					<sci:value>&lt;p&gt;Creates a molecular data record for each molecule represented in the &lt;i&gt;Source&lt;/i&gt; data file.  All properties contained in the file are read into the data records.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;This component can also read zipped (.zip) and URL-based files.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;To write files in MDL MOL or SD format, use the &lt;a href=&quot;javascript:DoLink(&apos;{DC8EE7B0-0620-42FE-944C-B4CD1E79480E}&apos;)&quot;&gt;SD Writer&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;To convert a molecule to and from between text properties in CTAB format, use &lt;a href=&quot;javascript:DoLink(&apos;{E622FBD9-9FA9-451A-A102-1800B5F28B6D}&apos;)&quot;&gt;Molecule to CTAB&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{7D354B65-DDD8-4EA4-83A7-21501A8A6852}&apos;)&quot;&gt;Molecule from CTAB&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Other related MDL format file readers include &lt;a href=&quot;javascript:DoLink(&apos;{169AB4E5-A470-477B-AA65-50464411036C}&apos;)&quot;&gt;RG Reader&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{036731AA-0015-4606-9750-7D9D020F21C8}&apos;)&quot;&gt;RXN Reader&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{55431CCB-06EA-4741-B95B-633C877E3E9B}&apos;)&quot;&gt;RD Reader&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt;</sci:value>					<sci:value>None</sci:value>					<sci:value/>					<sci:value>Molecule</sci:value>					<sci:value>Data fields in the SD file will be added to the property fields</sci:value>					<sci:value>None</sci:value>					<sci:value/>				</sci:arg>				<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Sticky Notes</sci:help>				</sci:arg>				<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The server version when this component was registered</sci:help>					<sci:value>6.1.0.11</sci:value>				</sci:arg>				<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Runtime Identifier</sci:help>					<sci:value>7</sci:value>				</sci:arg>				<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Location of the component in the database</sci:help>					<sci:value>Components\Chemistry\Readers\SD Reader</sci:value>				</sci:arg>			</sci:component>		</sci:data>		<sci:data object="SciTegic.CountRecords.1">			<sci:component name="Count and Index Data" version="2">				<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">					<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;</sci:help>					<sci:member>Start Index</sci:member>					<sci:member>Check if Property Already in Use</sci:member>					<sci:value>IndexB</sci:value>				</sci:arg>				<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">					<sci:help>The index (i.e., number) used to start the sequence.</sci:help>					<sci:value>1</sci:value>				</sci:arg>				<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">					<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.</sci:help>					<sci:legalval selected="true">True</sci:legalval>					<sci:legalval>False</sci:legalval>				</sci:arg>				<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">					<sci:help>Component Attributes</sci:help>					<sci:legalval selected="true">ComponentTakesInput</sci:legalval>					<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>					<sci:legalval>ComponentReturnsFail</sci:legalval>					<sci:legalval>ComponentRunsLocal</sci:legalval>				</sci:arg>				<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The user who registered this component.</sci:help>					<sci:value>scitegic/core</sci:value>				</sci:arg>				<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The date this component was registered.</sci:help>					<sci:value>Fri Sep 08 07:31:45 2006</sci:value>				</sci:arg>				<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>GUID</sci:help>					<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>				</sci:arg>				<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Display Name</sci:help>					<sci:value>Add index</sci:value>				</sci:arg>				<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Custom Error Message</sci:help>				</sci:arg>				<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Icon</sci:help>					<sci:value>COMPONENTNODE</sci:value>				</sci:arg>				<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The component this component is based upon.</sci:help>					<sci:value>Count and Index Data</sci:value>				</sci:arg>				<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Disabled</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Point</sci:help>					<sci:value>363 -350</sci:value>				</sci:arg>				<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">					<sci:help>Fancy Help</sci:help>					<sci:value>100</sci:value>					<sci:value>Counts the number of data records and puts the count in a property</sci:value>					<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;&lt;p&gt;This component can be used in two modes:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;&lt;/ul&gt;</sci:value>					<sci:value>Generic</sci:value>					<sci:value/>					<sci:value>Generic</sci:value>					<sci:value/>					<sci:value>None</sci:value>					<sci:value/>				</sci:arg>				<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The server version when this component was registered</sci:help>					<sci:value>6.0.0.44</sci:value>				</sci:arg>				<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Sticky Notes</sci:help>				</sci:arg>				<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Runtime Identifier</sci:help>					<sci:value>8</sci:value>				</sci:arg>				<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Location of the component in the database</sci:help>					<sci:value>Components\Generic\Calculators\Count and Index Data</sci:value>				</sci:arg>			</sci:component>		</sci:data>		<sci:data object="SciTegic.Protocol.1">			<sci:component name="Subprotocol" version="2">				<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>				</sci:arg>				<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>				</sci:arg>				<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>					<sci:legalval>True</sci:legalval>					<sci:legalval selected="true">False</sci:legalval>				</sci:arg>				<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making availablebecause we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.&lt;/p&gt;&lt;p&gt;Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.&lt;/p&gt;&lt;p&gt;For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.&lt;/p&gt;</sci:help>					<sci:member>Parallel Processing Options Batch Size</sci:member>					<sci:member>Parallel Processing Options Server</sci:member>					<sci:member>Parallel Processing Options Preserve Order</sci:member>					<sci:legalval>True</sci:legalval>					<sci:legalval selected="true">False</sci:legalval>				</sci:arg>				<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">					<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>					<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>					<sci:value>25</sci:value>				</sci:arg>				<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">					<sci:help>&lt;p&gt;Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).&lt;/p&gt;&lt;p&gt;Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).&lt;/p&gt;</sci:help>					<sci:member>Parallel Processing Options Server Processes</sci:member>					<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);Parameter() ne &apos;&apos;;</sci:validscript>					<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>				</sci:arg>				<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>					<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/#processes := parameter();expand(&apos;,&apos;, #processes);#servers := parameter(&apos;Parallel Processing Options Server&apos;);expand(&apos;,&apos;, #servers);if (numvalues(#processes) == 0) then	SetInvalidDetails(&apos;This parameter is required.&apos;);else	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);end if;numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>					<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>				</sci:arg>				<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">					<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>					<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>					<sci:legalval selected="true">True</sci:legalval>					<sci:legalval>False</sci:legalval>				</sci:arg>				<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">					<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>					<sci:legalval selected="true">Halt</sci:legalval>					<sci:legalval>Fail</sci:legalval>					<sci:legalval>Pass</sci:legalval>				</sci:arg>				<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">					<sci:help>Component Attributes</sci:help>					<sci:legalval selected="true">ComponentTakesInput</sci:legalval>					<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>					<sci:legalval>ComponentReturnsFail</sci:legalval>					<sci:legalval>ComponentRunsLocal</sci:legalval>				</sci:arg>				<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Comment</sci:help>					<sci:value>Defines a subprotocol in a pipeline. When you are creating a pipeline that requires a subprotocol as a component, drag this component into the pipeline, open it, and add components to it.</sci:value>				</sci:arg>				<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Usage</sci:help>					<sci:value>When you are creating a pipeline which requires a subprotocol as a component, you can drag this SubProtocol component into the pipeline, open it, and add components into it.</sci:value>				</sci:arg>				<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Display Name</sci:help>					<sci:value>Hold original smiles</sci:value>				</sci:arg>				<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol AutoLayout</sci:help>					<sci:value>1</sci:value>				</sci:arg>				<sci:arg name="ProtocolShowComment" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol ShowComment</sci:help>					<sci:value>true</sci:value>				</sci:arg>				<sci:arg name="ProtocolComment" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Add Protocol Comment Here</sci:help>					<sci:value>Add Protocol Comment Here</sci:value>				</sci:arg>				<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Disabled</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Custom Error Message</sci:help>				</sci:arg>				<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Icon</sci:help>					<sci:value>EXPRESSIONNODE</sci:value>				</sci:arg>				<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">					<sci:help>Component Revision</sci:help>					<sci:value>100</sci:value>				</sci:arg>				<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The component this component is based upon.</sci:help>					<sci:value>SubProtocol</sci:value>				</sci:arg>				<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>GUID</sci:help>					<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>				</sci:arg>				<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Point</sci:help>					<sci:value>663 -350</sci:value>				</sci:arg>				<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">					<sci:help>By Ref</sci:help>					<sci:value>0</sci:value>				</sci:arg>				<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">					<sci:help>Fancy Help</sci:help>					<sci:value>100</sci:value>					<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>					<sci:value>&lt;p&gt;Use a subprotocol to collapse one or more components into a single item. Open a subprotocol to view or edit its contents. &lt;/p&gt;&lt;p&gt;To define input and output ports, display icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols Overview&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Tip: Any component can be made into a shortcut, so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating Shortcuts&lt;/a&gt;.&lt;/p&gt;</sci:value>					<sci:value>Generic</sci:value>					<sci:value/>					<sci:value>Generic</sci:value>					<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>					<sci:value>None</sci:value>					<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>				</sci:arg>				<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The server version when this component was registered</sci:help>					<sci:value>6.1.0.21</sci:value>				</sci:arg>				<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Component Sticky Notes</sci:help>				</sci:arg>				<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol Sticky Notes</sci:help>				</sci:arg>				<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol Scale</sci:help>					<sci:value>100</sci:value>				</sci:arg>				<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Protocol Options</sci:help>					<sci:legalval>Make Shortcut by Default</sci:legalval>					<sci:legalval>Owner Access Only</sci:legalval>				</sci:arg>				<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The user who registered this component.</sci:help>					<sci:value>scitegic/core</sci:value>				</sci:arg>				<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>The date this component was registered.</sci:help>					<sci:value>Tue May 01 14:06:30 2007</sci:value>				</sci:arg>				<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Runtime Identifier</sci:help>					<sci:value>9</sci:value>				</sci:arg>				<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">					<sci:help>Location of the component in the database</sci:help>					<sci:value>Components\Generic\Utilities\SubProtocol Utilities\Subprotocol</sci:value>				</sci:arg>			</sci:component>			<sci:protocol>				<sci:data object="SciTegic.CalculateSmiles.1">					<sci:component name="Canonical Smiles" version="2">						<sci:arg name="Output" type="StringType" required="false" visibility="visible" multi="true">							<sci:help>&lt;ul&gt;&lt;li&gt;&lt;b&gt;SMILES&lt;/b&gt; is a non-canonical representation for the molecule. (This is very fast to calculate compared to Canonical_SMILES.)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Canonical_SMILES&lt;/b&gt; is the representation that can be compared for identicality.&lt;/li&gt;&lt;/ul&gt;&lt;i&gt;Output&lt;/i&gt; properties can be calculated &quot;on demand&quot; by simply using their names within a PilotScript expression or as the parameter value to many parameters that require a property name.</sci:help>							<sci:legalval type="StringType" selected="true">Canonical_Smiles</sci:legalval>							<sci:legalval type="StringType">Smiles</sci:legalval>						</sci:arg>						<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">							<sci:help>Component Attributes</sci:help>							<sci:legalval selected="true">ComponentTakesInput</sci:legalval>							<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>							<sci:legalval>ComponentReturnsFail</sci:legalval>							<sci:legalval>ComponentRunsLocal</sci:legalval>						</sci:arg>						<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Comment</sci:help>							<sci:value>Calculates a SMILES representation of the molecular information in a molecular data record. SMILES is a text-based representation for molecular information developed by Daylight.</sci:value>						</sci:arg>						<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The user who registered this component.</sci:help>							<sci:value>scitegic/chemistry</sci:value>						</sci:arg>						<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The date this component was registered.</sci:help>							<sci:value>Wed Jul 21 10:12:26 2004</sci:value>						</sci:arg>						<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Usage</sci:help>							<sci:value>Select either &apos;Smiles&apos; or &apos;Canonical_Smiles&quot; s in the &apos;Output&apos; pulldown list to generate the required string.  The data is augmented with the selected properties.Input             - Molecule data recordsOutput Pass - Molecule data records augmented with selected properties</sci:value>						</sci:arg>						<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Display Name</sci:help>							<sci:value>Canonical Smiles</sci:value>						</sci:arg>						<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The component this component is based upon.</sci:help>							<sci:value>Canonical Smiles</sci:value>						</sci:arg>						<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Custom Error Message</sci:help>						</sci:arg>						<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>Component Icon</sci:help>							<sci:value>CALCULATORNODE</sci:value>						</sci:arg>						<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>GUID</sci:help>							<sci:value>{0C60C40A-5189-42DA-A3C0-4EA44BC27D15}</sci:value>						</sci:arg>						<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Point</sci:help>							<sci:value>88 -50</sci:value>						</sci:arg>						<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Disabled</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Fancy Help</sci:help>							<sci:value>100</sci:value>							<sci:value>Calculates a SMILES or canonical SMILES representation of the input molecule</sci:value>							<sci:value>&lt;p&gt;SMILES is a terse textual representation of molecular data.  Canonical SMILES is a form of SMILES that is independent of how the molecule is drawn and so can be used to compare whether two molecules are identical.&lt;/P&gt;This component can create either or both of two properties:&lt;ul&gt;&lt;li&gt;&lt;b&gt;SMILES&lt;/b&gt; is a non-canonical representation for the molecule. (This is very fast to calculate compared to Canonical_SMILES.)&lt;/li&gt;&lt;li&gt;&lt;b&gt;Canonical_SMILES&lt;/b&gt; is the representation that can be compared for identicality.&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;The canonicalization algorithm is SciTegic&apos;s; while it is derived from the published Daylight algorithm, however, lack of complete documentation of their procedure means that it will not necessarily give identical results. Compare two SMILES for identity only when having both canonicalized by the same method. &lt;/li&gt;&lt;/ul&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;You can create a SMILES string as text under any property name using &lt;a href=&quot;javascript:DoLink(&apos;{0C60C40A-5189-42DA-A3C0-4EA44BFF7D15}&apos;)&quot;&gt;Molecule to SMILES&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;You can convert a SMILES string into a molecule using &lt;a href=&quot;javascript:DoLink(&apos;{AC8262DA-E648-4D24-9CD1-D731A8F53F9D}&apos;)&quot;&gt;Molecule from SMILES&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;For an alternative way of generating a canonical string representation, see &lt;a href=&quot;javascript:DoLink(&apos;{EB62CC30-BC6A-4d5f-8618-3EB9AF611C69}&apos;)&quot;&gt;Molecule to InChI&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;</sci:value>							<sci:value>Molecule</sci:value>							<sci:value/>							<sci:value>Molecule</sci:value>							<sci:value>Records augmented with a text property containing the canonical SMILES or SMILES</sci:value>							<sci:value>None</sci:value>							<sci:value/>						</sci:arg>						<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The server version when this component was registered</sci:help>							<sci:value>4.1.1.200</sci:value>						</sci:arg>						<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Runtime Identifier</sci:help>							<sci:value>0:0</sci:value>						</sci:arg>						<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Location of the component in the database</sci:help>							<sci:value>Components\Chemistry\Calculators\Canonical Smiles</sci:value>						</sci:arg>					</sci:component>					<sci:proplist>						<sci:propval name="Canonical_Smiles|Category">Molecular Formats</sci:propval>						<sci:propval name="Smiles|Category">Molecular Formats</sci:propval>					</sci:proplist>				</sci:data>				<sci:data object="SciTegic.PropertyFunctions.1">					<sci:component name="Rename Property" version="2">						<sci:arg name="Property" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Property name to change</sci:help>							<sci:value>canonical_smiles</sci:value>						</sci:arg>						<sci:arg name="NewProperty" type="StringType" required="true" visibility="visible" multi="false">							<sci:help>Name of the new property</sci:help>							<sci:value>original_smiles</sci:value>						</sci:arg>						<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an recoverable error occurs during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When an expected data type is not found during processing:    Halt: Terminate the execution of the network  Fail: Continue execution of the network, passing data out the Fail(red) port  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>							<sci:legalval selected="true">Halt</sci:legalval>							<sci:legalval>Fail</sci:legalval>							<sci:legalval>Pass</sci:legalval>						</sci:arg>						<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">							<sci:help>When a General or DataType error occurs during processing:    LeaveData: The data is passed unalterd  ClearData: The data is cleared before being passed (an empty data item)  DeleteData: The data is deleted and not passed</sci:help>							<sci:legalval selected="true">LeaveData</sci:legalval>							<sci:legalval>ClearData</sci:legalval>							<sci:legalval>DeleteData</sci:legalval>						</sci:arg>						<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">							<sci:help>Component Attributes</sci:help>							<sci:legalval selected="true">ComponentTakesInput</sci:legalval>							<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>							<sci:legalval>ComponentReturnsFail</sci:legalval>							<sci:legalval>ComponentRunsLocal</sci:legalval>						</sci:arg>						<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>the action to perform</sci:help>							<sci:value>Rename</sci:value>						</sci:arg>						<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">							<sci:help>Sets the Components Icon</sci:help>							<sci:value>EXPRESSIONNODE</sci:value>						</sci:arg>						<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Comment</sci:help>							<sci:value>Renames a single property.</sci:value>						</sci:arg>						<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The user who registered this component.</sci:help>							<sci:value>scitegic/core</sci:value>						</sci:arg>						<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The date this component was registered.</sci:help>							<sci:value>Fri Sep 15 10:07:49 2006</sci:value>						</sci:arg>						<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Usage</sci:help>							<sci:value>The component works for single properties as well as property arrays. Input             - Data recordsOutput Pass  - All Data records</sci:value>						</sci:arg>						<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Display Name</sci:help>							<sci:value>Rename Property</sci:value>						</sci:arg>						<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The component this component is based upon.</sci:help>							<sci:value>Evaluate Expression</sci:value>						</sci:arg>						<sci:arg name="ComponentRunTimeID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component RunTimeID</sci:help>							<sci:value>0:1</sci:value>						</sci:arg>						<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>GUID</sci:help>							<sci:value>{5A384E06-8AF2-4C10-A9B7-7302DD110A48}</sci:value>						</sci:arg>						<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">							<sci:help>Disabled</sci:help>							<sci:value>0</sci:value>						</sci:arg>						<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>CustomErrorText</sci:help>						</sci:arg>						<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Point</sci:help>							<sci:value>363 -50</sci:value>						</sci:arg>						<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">							<sci:help>Fancy Help</sci:help>							<sci:value>100</sci:value>							<sci:value>Renames a property</sci:value>							<sci:value>For each data record entering the component, the property with name specified by &lt;i&gt;Property&lt;/i&gt; is renamed to the name specified by &lt;i&gt;NewProperty&lt;/i&gt;.</sci:value>							<sci:value>Generic</sci:value>							<sci:value/>							<sci:value>Generic</sci:value>							<sci:value/>							<sci:value>None</sci:value>							<sci:value/>						</sci:arg>						<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>The server version when this component was registered</sci:help>							<sci:value>6.0.0.46</sci:value>						</sci:arg>						<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Component Sticky Notes</sci:help>						</sci:arg>						<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">							<sci:help>Location of the component in the database</sci:help>							<sci:value>Components\Generic\Manipulators\Rename Property</sci:value>						</sci:arg>					</sci:component>				</sci:data>				<sci:connect from="0" to="1" type="true"/>			</sci:protocol>		</sci:data>		<sci:connect from="0" to="1" type="true"/>		<sci:connect from="1" to="2" type="true"/>		<sci:connect from="2" to="3" type="true"/>		<sci:connect from="3" to="4" type="true"/>		<sci:connect from="4" to="5" type="true"/>		<sci:connect from="5" to="6" type="true"/>		<sci:connect from="7" to="8" type="true"/>		<sci:connect from="8" to="9" type="true"/>		<sci:connect from="9" to="3" type="true"/>		<sci:version iVal="7"/>	</sci:protocol></sci:data>