<workflow xmlns="http://taverna.sf.net/2008/xml/t2flow" version="1" producedBy="taverna-2.3.0"><dataflow id="bc75b17a-f099-4c20-a278-2c55be4db85a" role="top"><name>Workflow3</name><inputPorts><port><name>language</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>URL</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port><port><name>groundTruth</name><depth>0</depth><granularDepth>0</granularDepth><annotations /></port></inputPorts><outputPorts><port><name>editDistance</name><annotations /></port><port><name>OCRText</name><annotations /></port></outputPorts><processors><processor><name>Beanshell</name><inputPorts><port><name>s</name><depth>0</depth></port><port><name>t</name><depth>0</depth></port></inputPorts><outputPorts><port><name>result</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>beanshell-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.beanshell.BeanshellActivity</class><inputMap><map from="t" to="t" /><map from="s" to="s" /></inputMap><outputMap><map from="result" to="result" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean xmlns="">  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>s</name>      <depth>0</depth>      <mimeTypes>        <string>text/plain</string>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>t</name>      <depth>0</depth>      <mimeTypes>        <string>text/plain</string>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>result</name>      <depth>0</depth>      <mimeTypes />      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs>  <classLoaderSharing>workflow</classLoaderSharing>  <localDependencies />  <artifactDependencies />  <script>// Levenshtein Word Distance taken from// http://www.javalobby.org/java/forums/t15908.html// Modified by Alan Akbik/* * split to token */String[] sToken = s.split(" ");String[] tToken = t.split(" ");int n = sToken.length;int m = tToken.length;if (n == 0)    return m;if (m == 0)    return n;int[][] d = new int[n + 1][m + 1];for (int i = 0; i &lt;= n; d[i][0] = i++)    ;for (int j = 1; j &lt;= m; d[0][j] = j++)    ;for (int i = 1; i &lt;= n; i++) {    String sc = sToken[i - 1];    for (int j = 1; j &lt;= m; j++) {        int v = d[i - 1][j - 1];        if (!tToken[j - 1].equals(sc)) {            v++;        }        d[i][j] = Math.min(Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1),                v);    }}int result = d[n][m];</script>  <dependencies /></net.sf.taverna.t2.activities.beanshell.BeanshellActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="s" depth="0" /><port name="t" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>ocr</name><inputPorts><port><name>ocrRequest</name><depth>0</depth></port></inputPorts><outputPorts><port><name>ocrResponse</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.wsdl.WSDLActivity</class><inputMap><map from="ocrRequest" to="ocrRequest" /></inputMap><outputMap><map from="ocrResponse" to="ocrResponse" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean xmlns="">  <wsdl>http://fue.onb.ac.at/scape-tesseract301-service/Tesseract301.wsdl</wsdl>  <operation>ocr</operation>  <securityProfile>HTTPBasicAuthNPlainTextPassword</securityProfile></net.sf.taverna.t2.activities.wsdl.WSDLActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="ocrRequest" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>ocrRequest</name><inputPorts><port><name>langmod</name><depth>0</depth></port><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLInputSplitterActivity</class><inputMap><map from="input" to="input" /><map from="langmod" to="langmod" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>input</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <allowsLiteralValues>false</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>langmod</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <allowsLiteralValues>false</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>output</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/xml'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs>  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="ocrRequest" name="ocrRequest" qname="{http://scape-project.eu/pc/services}ocrRequest"&gt;&lt;s:elements&gt;&lt;s:basetype optional="false" unbounded="false" typename="anyURI" name="input" qname="{http://scape-project.eu/pc/services}ocrRequestType&amp;gt;input" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="string" name="langmod" qname="{http://scape-project.eu/pc/services}ocrRequestType&amp;gt;langmod" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML></net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="langmod" depth="0" /><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>ocrResponse</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>return</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="return" to="return" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>input</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/xml'</element>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>false</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>return</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/xml'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs>  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="false" unbounded="false" typename="ocrResponse" name="ocrResponse" qname="{http://scape-project.eu/pc/services}ocrResponse"&gt;&lt;s:elements&gt;&lt;s:complextype optional="true" unbounded="false" typename="ocrReturnType" name="return" qname="{http://scape-project.eu/pc/services}ocrResponseType&amp;gt;return"&gt;&lt;s:elements&gt;&lt;s:complextype optional="true" unbounded="false" typename="ocrResultType" name="result" qname="{http://scape-project.eu/pc/services}ocrReturnType&amp;gt;result"&gt;&lt;s:elements&gt;&lt;s:basetype optional="true" unbounded="false" typename="anyURI" name="output" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;output" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="boolean" name="success" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;success" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="returncode" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;returncode" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="int" name="time" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;time" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="log" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;log" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="message" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;message" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML></net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>ocrResponse_return</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>result</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="result" to="result" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>input</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/xml'</element>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>false</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>result</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/xml'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs>  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="true" unbounded="false" typename="ocrReturnType" name="return" qname="{http://scape-project.eu/pc/services}ocrResponseType&amp;gt;return"&gt;&lt;s:elements&gt;&lt;s:complextype optional="true" unbounded="false" typename="ocrResultType" name="result" qname="{http://scape-project.eu/pc/services}ocrReturnType&amp;gt;result"&gt;&lt;s:elements&gt;&lt;s:basetype optional="true" unbounded="false" typename="anyURI" name="output" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;output" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="boolean" name="success" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;success" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="returncode" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;returncode" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="int" name="time" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;time" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="log" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;log" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="message" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;message" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML></net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>return_result</name><inputPorts><port><name>input</name><depth>0</depth></port></inputPorts><outputPorts><port><name>output</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>wsdl-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLOutputSplitterActivity</class><inputMap><map from="input" to="input" /></inputMap><outputMap><map from="output" to="output" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean xmlns="">  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>input</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/xml'</element>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>false</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>output</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>success</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>returncode</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>time</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>log</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>message</name>      <depth>0</depth>      <mimeTypes class="java.util.Collections$SingletonList">        <element class="string">'text/plain'</element>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs>  <wrappedTypeXML>&lt;s:extensions xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha"&gt;&lt;s:complextype optional="true" unbounded="false" typename="ocrResultType" name="result" qname="{http://scape-project.eu/pc/services}ocrReturnType&amp;gt;result"&gt;&lt;s:elements&gt;&lt;s:basetype optional="true" unbounded="false" typename="anyURI" name="output" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;output" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="boolean" name="success" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;success" /&gt;&lt;s:basetype optional="false" unbounded="false" typename="int" name="returncode" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;returncode" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="int" name="time" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;time" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="log" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;log" /&gt;&lt;s:basetype optional="true" unbounded="false" typename="string" name="message" qname="{http://scape-project.eu/pc/services}ocrResultType&amp;gt;message" /&gt;&lt;/s:elements&gt;&lt;/s:complextype&gt;&lt;/s:extensions&gt;</wrappedTypeXML></net.sf.taverna.t2.activities.wsdl.xmlsplitter.XMLSplitterConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="input" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Read_Text_File</name><inputPorts><port><name>fileurl</name><depth>0</depth></port><port><name>encoding</name><depth>0</depth></port></inputPorts><outputPorts><port><name>filecontents</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>localworker-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.localworker.LocalworkerActivity</class><inputMap><map from="fileurl" to="fileurl" /><map from="encoding" to="encoding" /></inputMap><outputMap><map from="filecontents" to="filecontents" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean xmlns="">  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>fileurl</name>      <depth>0</depth>      <mimeTypes>        <string>'text/plain'</string>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>encoding</name>      <depth>0</depth>      <mimeTypes>        <string>'text/plain'</string>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>filecontents</name>      <depth>0</depth>      <mimeTypes>        <string>'text/plain'</string>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs>  <classLoaderSharing>workflow</classLoaderSharing>  <localDependencies />  <artifactDependencies />  <script>BufferedReader getReader (String fileUrl, String encoding) throws IOException {		InputStreamReader reader;		try {			if (encoding == null) {				reader = new FileReader(fileUrl);			} else {				reader = new InputStreamReader(new FileInputStream(fileUrl),encoding); 			}		}		catch (FileNotFoundException e) {			// try a real URL instead			URL url = new URL(fileUrl);			if (encoding == null) {				reader = new InputStreamReader (url.openStream());			} else {				reader = new InputStreamReader (url.openStream(), encoding);			}		}		return new BufferedReader(reader);	}StringBuffer sb = new StringBuffer(4000);if (encoding == void) {	encoding = null;}BufferedReader in = getReader(fileurl, encoding);String str;String lineEnding = System.getProperty("line.separator");while ((str = in.readLine()) != null) {	sb.append(str);	sb.append(lineEnding);}in.close();filecontents = sb.toString();  </script>  <dependencies />  <localworkerName>net.sourceforge.taverna.scuflworkers.io.TextFileReader</localworkerName></net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="fileurl" depth="0" /><port name="encoding" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>String_constant</name><inputPorts /><outputPorts><port><name>value</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>stringconstant-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.stringconstant.StringConstantActivity</class><inputMap /><outputMap><map from="value" to="value" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean xmlns="">  <value>UTF-8</value></net.sf.taverna.t2.activities.stringconstant.StringConstantConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy /></iteration></iterationStrategyStack></processor><processor><name>Read_Text_File_2</name><inputPorts><port><name>fileurl</name><depth>0</depth></port><port><name>encoding</name><depth>0</depth></port></inputPorts><outputPorts><port><name>filecontents</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>localworker-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.localworker.LocalworkerActivity</class><inputMap><map from="fileurl" to="fileurl" /><map from="encoding" to="encoding" /></inputMap><outputMap><map from="filecontents" to="filecontents" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean xmlns="">  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>fileurl</name>      <depth>0</depth>      <mimeTypes>        <string>'text/plain'</string>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>encoding</name>      <depth>0</depth>      <mimeTypes>        <string>'text/plain'</string>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>filecontents</name>      <depth>0</depth>      <mimeTypes>        <string>'text/plain'</string>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs>  <classLoaderSharing>workflow</classLoaderSharing>  <localDependencies />  <artifactDependencies />  <script>BufferedReader getReader (String fileUrl, String encoding) throws IOException {		InputStreamReader reader;		try {			if (encoding == null) {				reader = new FileReader(fileUrl);			} else {				reader = new InputStreamReader(new FileInputStream(fileUrl),encoding); 			}		}		catch (FileNotFoundException e) {			// try a real URL instead			URL url = new URL(fileUrl);			if (encoding == null) {				reader = new InputStreamReader (url.openStream());			} else {				reader = new InputStreamReader (url.openStream(), encoding);			}		}		return new BufferedReader(reader);	}StringBuffer sb = new StringBuffer(4000);if (encoding == void) {	encoding = null;}BufferedReader in = getReader(fileurl, encoding);String str;String lineEnding = System.getProperty("line.separator");while ((str = in.readLine()) != null) {	sb.append(str);	sb.append(lineEnding);}in.close();filecontents = sb.toString();  </script>  <dependencies />  <localworkerName>net.sourceforge.taverna.scuflworkers.io.TextFileReader</localworkerName></net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="fileurl" depth="0" /><port name="encoding" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor><processor><name>Read_Text_File_3</name><inputPorts><port><name>fileurl</name><depth>0</depth></port><port><name>encoding</name><depth>0</depth></port></inputPorts><outputPorts><port><name>filecontents</name><depth>0</depth><granularDepth>0</granularDepth></port></outputPorts><annotations /><activities><activity><raven><group>net.sf.taverna.t2.activities</group><artifact>localworker-activity</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.activities.localworker.LocalworkerActivity</class><inputMap><map from="fileurl" to="fileurl" /><map from="encoding" to="encoding" /></inputMap><outputMap><map from="filecontents" to="filecontents" /></outputMap><configBean encoding="xstream"><net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean xmlns="">  <inputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>fileurl</name>      <depth>0</depth>      <mimeTypes>        <string>'text/plain'</string>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>      <name>encoding</name>      <depth>0</depth>      <mimeTypes>        <string>'text/plain'</string>      </mimeTypes>      <handledReferenceSchemes />      <translatedElementType>java.lang.String</translatedElementType>      <allowsLiteralValues>true</allowsLiteralValues>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityInputPortDefinitionBean>  </inputs>  <outputs>    <net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>      <name>filecontents</name>      <depth>0</depth>      <mimeTypes>        <string>'text/plain'</string>      </mimeTypes>      <granularDepth>0</granularDepth>    </net.sf.taverna.t2.workflowmodel.processor.activity.config.ActivityOutputPortDefinitionBean>  </outputs>  <classLoaderSharing>workflow</classLoaderSharing>  <localDependencies />  <artifactDependencies />  <script>BufferedReader getReader (String fileUrl, String encoding) throws IOException {		InputStreamReader reader;		try {			if (encoding == null) {				reader = new FileReader(fileUrl);			} else {				reader = new InputStreamReader(new FileInputStream(fileUrl),encoding); 			}		}		catch (FileNotFoundException e) {			// try a real URL instead			URL url = new URL(fileUrl);			if (encoding == null) {				reader = new InputStreamReader (url.openStream());			} else {				reader = new InputStreamReader (url.openStream(), encoding);			}		}		return new BufferedReader(reader);	}StringBuffer sb = new StringBuffer(4000);if (encoding == void) {	encoding = null;}BufferedReader in = getReader(fileurl, encoding);String str;String lineEnding = System.getProperty("line.separator");while ((str = in.readLine()) != null) {	sb.append(str);	sb.append(lineEnding);}in.close();filecontents = sb.toString();  </script>  <dependencies />  <localworkerName>net.sourceforge.taverna.scuflworkers.io.TextFileReader</localworkerName></net.sf.taverna.t2.activities.localworker.LocalworkerActivityConfigurationBean></configBean><annotations /></activity></activities><dispatchStack><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Parallelize</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig xmlns="">  <maxJobs>1</maxJobs></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ParallelizeConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.ErrorBounce</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Failover</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Retry</class><configBean encoding="xstream"><net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig xmlns="">  <backoffFactor>1.0</backoffFactor>  <initialDelay>1000</initialDelay>  <maxDelay>5000</maxDelay>  <maxRetries>0</maxRetries></net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.RetryConfig></configBean></dispatchLayer><dispatchLayer><raven><group>net.sf.taverna.t2.core</group><artifact>workflowmodel-impl</artifact><version>1.3</version></raven><class>net.sf.taverna.t2.workflowmodel.processor.dispatch.layers.Invoke</class><configBean encoding="xstream"><null xmlns="" /></configBean></dispatchLayer></dispatchStack><iterationStrategyStack><iteration><strategy><cross><port name="fileurl" depth="0" /><port name="encoding" depth="0" /></cross></strategy></iteration></iterationStrategyStack></processor></processors><conditions /><datalinks><datalink><sink type="processor"><processor>Beanshell</processor><port>s</port></sink><source type="processor"><processor>Read_Text_File</processor><port>filecontents</port></source></datalink><datalink><sink type="processor"><processor>Beanshell</processor><port>t</port></sink><source type="processor"><processor>Read_Text_File_2</processor><port>filecontents</port></source></datalink><datalink><sink type="processor"><processor>ocr</processor><port>ocrRequest</port></sink><source type="processor"><processor>ocrRequest</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>ocrRequest</processor><port>langmod</port></sink><source type="dataflow"><port>language</port></source></datalink><datalink><sink type="processor"><processor>ocrRequest</processor><port>input</port></sink><source type="dataflow"><port>URL</port></source></datalink><datalink><sink type="processor"><processor>ocrResponse</processor><port>input</port></sink><source type="processor"><processor>ocr</processor><port>ocrResponse</port></source></datalink><datalink><sink type="processor"><processor>ocrResponse_return</processor><port>input</port></sink><source type="processor"><processor>ocrResponse</processor><port>return</port></source></datalink><datalink><sink type="processor"><processor>return_result</processor><port>input</port></sink><source type="processor"><processor>ocrResponse_return</processor><port>result</port></source></datalink><datalink><sink type="processor"><processor>Read_Text_File</processor><port>fileurl</port></sink><source type="dataflow"><port>groundTruth</port></source></datalink><datalink><sink type="processor"><processor>Read_Text_File</processor><port>encoding</port></sink><source type="processor"><processor>String_constant</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>Read_Text_File_2</processor><port>fileurl</port></sink><source type="processor"><processor>return_result</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>Read_Text_File_2</processor><port>encoding</port></sink><source type="processor"><processor>String_constant</processor><port>value</port></source></datalink><datalink><sink type="processor"><processor>Read_Text_File_3</processor><port>fileurl</port></sink><source type="processor"><processor>return_result</processor><port>output</port></source></datalink><datalink><sink type="processor"><processor>Read_Text_File_3</processor><port>encoding</port></sink><source type="processor"><processor>String_constant</processor><port>value</port></source></datalink><datalink><sink type="dataflow"><port>editDistance</port></sink><source type="processor"><processor>Beanshell</processor><port>result</port></source></datalink><datalink><sink type="dataflow"><port>OCRText</port></sink><source type="processor"><processor>Read_Text_File_3</processor><port>filecontents</port></source></datalink></datalinks><annotations><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">        <identification>04d0324b-ed9b-43ab-bc3c-28406bb3da46</identification>      </annotationBean>      <date>2011-11-14 15:29:42.307 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">        <identification>ef1b292a-c03f-455b-af26-0f0a0bb66d32</identification>      </annotationBean>      <date>2011-11-14 15:05:29.623 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">        <identification>4b26e5c5-95bf-4c75-bf58-2e54c3e37bf1</identification>      </annotationBean>      <date>2011-11-14 15:43:43.927 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">        <identification>2335ed0d-6db2-4ee9-8e57-f6c5e2966334</identification>      </annotationBean>      <date>2011-11-14 15:41:08.815 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">        <identification>bc75b17a-f099-4c20-a278-2c55be4db85a</identification>      </annotationBean>      <date>2011-11-14 16:03:53.391 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2><annotation_chain_2_2 encoding="xstream"><net.sf.taverna.t2.annotation.AnnotationChainImpl xmlns="">  <annotationAssertions>    <net.sf.taverna.t2.annotation.AnnotationAssertionImpl>      <annotationBean class="net.sf.taverna.t2.annotation.annotationbeans.IdentificationAssertion">        <identification>acd92489-40a1-4e65-a2b9-0fe6924de1fb</identification>      </annotationBean>      <date>2011-11-14 15:37:45.429 CET</date>      <creators />      <curationEventList />    </net.sf.taverna.t2.annotation.AnnotationAssertionImpl>  </annotationAssertions></net.sf.taverna.t2.annotation.AnnotationChainImpl></annotation_chain_2_2></annotations></dataflow></workflow>